{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":gitSignOff",
    "helpers:pinGitHubActionDigests"
  ],
  // self-hosted configuration
  "username": "cilium-renovate[bot]",
  "repositories": ["cilium/cilium"],
  // renovate first reads this configuration, then reads the repository
  // configuration, since we don't split between the self-hosted and the
  // repository configuration, this can lead to duplicate of some areas of the
  // config, for example the regex. See:
  // https://docs.renovatebot.com/self-hosted-configuration/#requireconfig
  "requireConfig": "ignored",
  // This ensures that the gitAuthor and gitSignOff fields match
  "gitAuthor": "cilium-renovate[bot] <134692979+cilium-renovate[bot]@users.noreply.github.com>",
  "includePaths": [
    ".github/actions/kvstore/**",
    ".github/actions/ginkgo/**",
    ".github/actions/lvh-kind/**",
    ".github/actions/set-env-variables/action.yml",
    ".github/workflows/**",
    ".github/ISSUE_TEMPLATE/bug_report.yaml",
    "cilium-cli/**",
    "images/**",
    "examples/hubble/*",
    "go.mod",
    "go.sum",
    "Makefile.defs",
    "test/kubernetes-test.sh",
    "test/packet/scripts/install.sh",
    "install/kubernetes/cilium/templates/spire/**",
    "install/kubernetes/cilium/values.yaml.tmpl",
    "install/kubernetes/Makefile.values",
  ],
  "schedule": [
    "on sunday"
  ],
  postUpdateOptions: [
    "gomodTidy"
  ],
  // This ignorePaths configuration option overrides the config:base preset and
  // should not be removed.
  // If removed, we would fall back on the config:base preset, which ignores any
  // paths that match 'examples/*' (which we explicitly do not want to ignore).
  "ignorePaths": [
    // This file is deprecated and no longer present in main
    "images/cilium-test/Dockerfile"
  ],
  "ignoreDeps": [
    // 'google/oss-fuzz' is ignored from the updates because it's currently
    // unversioned and it would be receiving an update every time the upstream
    // repository would receive a new commit.
    "google/oss-fuzz"
  ],
  "pinDigests": true,
  "ignorePresets": [":prHourlyLimit2"],
  // We don't want to separate major and minor upgrades in separate PRs since
  // we can upgrade them together in a single PR.
  "separateMajorMinor": false,
  // We don't want to separate minor patch upgrades in separate PRs since
  // we can upgrade them together in a single PR.
  "separateMinorPatch": false,
  "pruneStaleBranches": true,
  "baseBranches": [
    "main",
    "v1.16",
    "v1.15",
    "v1.14",
  ],
  "vulnerabilityAlerts": {
    "enabled": true
  },
  "labels": [
    "renovate/stop-updating",
    "kind/enhancement",
    "release-note/misc"
  ],
  "stopUpdatingLabel": "renovate/stop-updating",
  "allowedPostUpgradeCommands": [
    "^make -C install/kubernetes$",
    "^make -C Documentation update-helm-values$",
    "^make generate-k8s-api$",
    "^make manifests$"
  ],
  "assignAutomerge": true,
  "packageRules": [
    {
      "matchPackageNames": [
        "go", // golang version directive upgrade in go.mod
        "google/cloud-sdk", // google cloud-sdk official package name
        "grpc-ecosystem/grpc-health-probe", // Grpc ecosystem
        "kindest/node", // official kindest images
        "kubernetes-sigs/kind", // official kind dependencies
        "renovatebot/github-action", // Renovate's GH action
        "renovatebot/renovate", // Renovate's bot name
      ],
      "matchPackagePrefixes": [
        "actions/", // GitHub official's GH actions
        "cilium/", // Cilium's GH actions,
        "docker.io/library/", // official Docker images,
        "docker/", // official Docker actions,
        "gcr.io/distroless", // official distroless images
        "gcr.io/etcd-development/etcd", // etcd
        "ghcr.io/spiffe/", // Spiffe's official images
        "github.com/actions/", // GitHub official's GH actions
        "github.com/aws/", // Amazon's dependencies
        "github.com/Azure/", // Azure's dependencies
        "github.com/cilium/", // Any Cilium dependency
        "github.com/docker/", // Docker official org
        "github.com/golang/", // Golang official org
        "github.com/google/", // Google official org
        "github.com/go-openapi/", // Open API official org
        "github.com/hashicorp/", // Hashicorp's official org
        "github.com/prometheus/", // Prometheu's official org
        "go.etcd.io/etcd/", // etcd's official org
        "golang.org/x/", // Golang official experimental org
        "google.golang.org/", // Google official repo for api/genproto/grpc/protobuf
        "k8s.io/", // Kubernetes official repo
        "quay.io/cilium/", // LVH images
        "quay.io/lvh-images/", // LVH images
        "sigs.k8s.io/", // Kubernetes official SIG repo
      ],
      "automerge": true,
      "automergeType": "pr",
      "groupName": "auto-merge-trusted-deps",
      // Replace the list of reviewers with just ciliumbot
      "reviewers":[
        "ciliumbot",
      ]
    },
    {
      // Try to group all updates for all dependencies in a single PR. More
      // specific packageRules are followed by this one.
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement",
      ],
      "groupName": "all-dependencies"
    },
    {
      "groupName": "all github action dependencies",
      "groupSlug": "all-github-action",
      "matchPaths": [
        ".github/**"
      ],
    },
    {
      "groupName": "all go dependencies main",
      "groupSlug": "all-go-deps-main",
      "matchFiles": [
        "go.mod",
        "go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths"
      ],
      matchBaseBranches: [
        "main"
      ]
    },
    {
      // Avoid updating patch releases of golang in go.mod
      "enabled": "false",
      "matchFiles": [
        "go.mod",
      ],
      "matchDepNames": [
        "go"
      ],
      "matchDatasources": [
        "golang-version"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      matchBaseBranches: [
        "main",
        "v1.16",
        "v1.15",
        "v1.14",
      ]
    },
    {
      // Do not allow any updates into stable branches.
      "enabled": false,
      "groupName": "all go dependencies stable",
      "groupSlug": "all-go-deps-stable",
      "matchFiles": [
        "go.mod",
        "go.sum"
      ],
      matchBaseBranches: [
        "v1.16",
        "v1.15",
        "v1.14",
      ]
    },
    {
      "enabled": false,
      "matchPackageNames": [
        // All of these packages are maintained on a Cilium fork. Thus, we don't
        // want to update them automatically.
        "go.universe.tf/metallb",
        "github.com/cilium/metallb",
        // metallb is still using an old version of "github.com/mdlayher/arp"
        "github.com/mdlayher/arp",
        "github.com/miekg/dns",
        "github.com/cilium/dns",
        "sigs.k8s.io/controller-tools",
        "github.com/cilium/controller-tools",
        "github.com/cilium/client-go",
        // We update this dependency manually together with envoy proxy updates
        "github.com/cilium/proxy",
        // Renovate automatically downgrades this dependency from tracking the
        // master branch to the latest release. Ignore this dependency until a
        // v2 release is out which is tracked with the following upstream issue:
        // https://github.com/google/go-licenses/issues/205
        "github.com/google/go-licenses",
        // We update this dependency manually together with conformance test changes
        "sigs.k8s.io/gateway-api"
      ],
      "matchPackagePatterns": [
        // We can't update these libraries until github.com/shoenig/go-m1cpu
        // is added as an exception to the list of licenses into CNCF.
        ".*google/gops/*",
        // We can't update these libraries until github.com/shoenig/go-m1cpu
        // is added as an exception to the list of licenses into CNCF.
        "github.com/shirou/gopsutil/*",
        // Once we decide to spend cycles on ginkgo v2 we should update the
        // dependency manually.
        "github.com/onsi/ginkgo",
        "github.com/onsi/gomega/*"
      ]
    },
    {
      // Grouped these together because they require a re-creation of the base
      // image.
      "groupName": "base-images",
      "matchFiles": [
        "images/builder/Dockerfile",
        "images/runtime/Dockerfile"
      ],
      "matchPackageNames": [
        "docker.io/library/golang"
      ],
    },
    {
      // Do not allow any major and minor updates into stable branches.
      "enabled": false,
      "groupName": "all external docker images dependencies",
      "groupSlug": "all-external-images-deps-stable",
      "matchFiles": [
        "install/kubernetes/Makefile.values"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
      ],
      matchBaseBranches: [
        "v1.16",
        "v1.15",
        "v1.14",
      ]
    },
    {
      // Do not upgrade etcd as they have removed bash starting from v3.5.5
      "matchDepNames": [
        "quay.io/coreos/etcd"
      ],
      "allowedVersions": "<3.5.5",
      "matchBaseBranches": [
        "v1.14",
      ]
    },
    {
      "matchFiles": [
        "install/kubernetes/Makefile.values"
      ],
      "matchPackageNames": [
        "ghcr.io/spiffe/spire-agent",
        "ghcr.io/spiffe/spire-server"
      ],
      "matchBaseBranches": [
        "main"
      ],
      // We need to manually fix some regressions caused by spire, thus we won't
      // be upgrading to 1.10 until we fix it.
      "allowedVersions": "<1.10",
    },
    {
      "matchFiles": [
        "install/kubernetes/Makefile.values"
      ],
      "matchPackageNames": [
        "ghcr.io/spiffe/spire-agent",
        "ghcr.io/spiffe/spire-server"
      ],
      "matchBaseBranches": [
        "v1.14"
      ],
      "allowedVersions": "<1.7",
    },
    {
      "matchPackageNames": [
        "docker.io/library/ubuntu"
      ],
      "allowedVersions": "24.04",
      "matchBaseBranches": [
        "main",
      ],
    },
    {
      "matchPackageNames": [
        "docker.io/library/ubuntu"
      ],
      "allowedVersions": "22.04",
      "matchBaseBranches": [
        "v1.16",
        "v1.15",
        "v1.14",
      ],
    },
    {
      "matchPackageNames": [
        "docker.io/library/golang",
        "go"
      ],
      "allowedVersions": "<1.23",
      "matchBaseBranches": [
        "v1.16",
        "v1.15",
        "v1.14",
      ]
    },
    {
      "matchPackageNames": [
        "docker.io/library/alpine"
      ],
      "allowedVersions": "<3.20",
      "matchBaseBranches": [
        "v1.16",
        "v1.15"
      ]
    },
    {
      "matchPackageNames": [
        "docker.io/library/alpine"
      ],
      "allowedVersions": "<3.19",
      "matchBaseBranches": [
        "v1.14"
      ]
    },
    {
      "matchPackageNames": [
        "quay.io/cilium/certgen",
      ],
      "allowedVersions": "<0.2.0",
      "matchBaseBranches": [
        "v1.16",
        "v1.15",
        "v1.14",
      ]
    },
    {
      // Avoid updating patch version for statedb as it might contain breaking changes
      "enabled": false,
      "matchPackageNames": [
        "github.com/cilium/statedb",
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "pin",
        "pinDigest",
        "digest",
        "lockFileMaintenance",
        "rollback",
        "bump",
        "replacement",
      ],
    },
    {
      // It's returning 500s for git clones.
      "enabled": false,
      "matchDepNames": [
        "golang.zx2c4.com/wireguard"
      ],
      "versioning": "regex:^v?0\\.0\\.0-(?<patch>\\d+)-.*$",
    },
    // Ref: https://github.com/cilium/cilium-cli#releases
    {
      "groupName": "Cilium CLI",
      "groupSlug": "cilium-cli",
      "matchDepNames": [
        "cilium/cilium-cli"
      ],
      "matchBaseBranches": [
        "main",
        "v1.16",
        "v1.15",
        "v1.14"
      ]
    },
    {
      "groupName": "Hubble CLI",
      "groupSlug": "hubble-cli",
      "matchDepNames": [
        "cilium/hubble",
        "quay.io/cilium/hubble"
      ]
    },
    {
      "groupName": "Go",
      "matchDepNames": [
        "go",
        "docker.io/library/golang"
      ],
    },
    {
      // Group golangci-lint updates to overrule grouping of version updates in the GHA files.
      // Without this, golangci-lint updates are not in sync for GHA files and other usages.
      "groupName": "golangci-lint",
      "matchDepNames": [
        "golangci/golangci-lint"
      ]
    },
    {
      // Do not allow any updates into stable branches.
      "enabled": false,
      "matchDepNames": [
        "golangci/golangci-lint"
      ],
      "matchBaseBranches": [
        "v1.16",
        "v1.15",
        "v1.14",
      ]
    },
    {
      "matchDepNames": [
        "quay.io/lvh-images/complexity-test",
        "quay.io/lvh-images/kind"
      ],
      "versioning": "regex:^((?<compatibility>[a-z0-9-]+)|((?<major>\\d+)\\.(?<minor>\\d+)))\\-(?<patch>\\d+)\\.(?<build>\\d+)(@(?<currentDigest>sha256:[a-f0-9]+))?$"
    },
    {
      "groupName": "stable lvh-images",
      "groupSlug": "stable-lvh-images",
      "matchPackageNames": [
        "cilium/little-vm-helper",
        "quay.io/lvh-images/complexity-test",
        "quay.io/lvh-images/kind"
      ],
      "allowedVersions": "!/bpf-next-.*/",
      "matchBaseBranches": [
        "v1.16",
        "v1.15",
        "v1.14",
      ],
    },
    {
      "groupName": "all lvh-images main",
      "groupSlug": "all-lvh-images-main",
      "matchPackageNames": [
        "cilium/little-vm-helper",
        "quay.io/lvh-images/complexity-test",
        "quay.io/lvh-images/kind"
      ],
      "matchBaseBranches": [
        "main"
      ],
    },
    {
      // Separate major minor and patch so that renovate can update the patch
      // versions of the images.
      "matchPackageNames": [
        "quay.io/lvh-images/complexity-test",
        "quay.io/lvh-images/kind",
        "kindest/node",
        "quay.io/cilium/kindest-node"
      ],
      "separateMajorMinor": true,
      "separateMinorPatch": true
    },
    {
      // Do not allow any updates for major.minor, they will be done by maintainers
      "enabled": false,
      "matchPackageNames": [
        "quay.io/lvh-images/complexity-test",
        "quay.io/lvh-images/kind",
        "kindest/node",
        "quay.io/cilium/kindest-node"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ]
    },
    {
      "matchPackageNames": [
        "quay.io/cilium/kindest-node"
      ],
      "ignoreUnstable": false
    },
    {
      "matchFiles": [
        "install/kubernetes/Makefile.values"
      ],
      "postUpgradeTasks": {
        "commands": [
          "make -C install/kubernetes",
          "make -C Documentation update-helm-values"
        ],
        "fileFilters": [
          "install/kubernetes/Makefile.values",
          "install/kubernetes/cilium/README.md",
          "install/kubernetes/cilium/values.yaml",
          "Documentation/helm-values.rst"
        ],
        "executionMode": "update"
      }
    },
    {
      enabled: false,
      matchDepPatterns: [
        // k8s dependencies will be updated manually along with tests
        "k8s.io/*",
        "sigs.k8s.io/*"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ]
    },
    {
      matchDepPatterns: [
        // k8s dependencies will be updated manually along with tests
        "k8s.io/*",
        "sigs.k8s.io/*"
      ],
      "postUpgradeTasks": {
        "commands": [
          "make generate-k8s-api",
          "make manifests"
        ],
        "executionMode": "update"
      }
    },
    {
      "matchDepNames": [
        "quay.io/cilium/cilium-envoy"
      ],
      "versioning": "regex:v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<build>\\d+).*$",
      "allowedVersions": "<1.29",
      "matchBaseBranches": [
        "v1.15",
        "v1.14",
      ]
    },
    {
      "matchDepNames": [
        "quay.io/cilium/cilium-envoy"
      ],
      "versioning": "regex:v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<build>\\d+).*$",
      "allowedVersions": "<1.30",
      "matchBaseBranches": [
        "v1.16",
      ]
    },
    {
      "matchDepNames": [
        "quay.io/cilium/cilium-envoy"
      ],
      "versioning": "regex:v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<build>\\d+).*$",
      "allowedVersions": "<1.31",
      "matchBaseBranches": [
        "main",
      ]
    },
    {
      "matchDepNames": [
        "grpc/grpc-go"
      ],
      "versioning": "regex:cmd/protoc-gen-go-grpc/v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
    },
    {
      "matchPackageNames": [
        "github.com/aws/aws-sdk-go-v2/service/ec2",
        "github.com/aliyun/alibaba-cloud-sdk-go",
        "renovatebot/github-action"
      ],
      "schedule": ["on the 1st day instance on sunday"]
    },
    {
      // Separate major minor and patch so that renovate can update the patch
      // versions of cilium.
      "matchFileNames": [
        ".github/ISSUE_TEMPLATE/bug_report.yaml"
      ],
      "matchDepNames": [
        "cilium/cilium",
      ],
      "separateMajorMinor": true,
      "separateMinorPatch": true,
      "ignoreUnstable": false,
      "versioning": "semver"
    },
    {
      "enabled": false,
      "matchFileNames": [
        ".github/ISSUE_TEMPLATE/bug_report.yaml"
      ],
      "matchDepNames": [
        "cilium/cilium",
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ],
    }
  ],
  "kubernetes": {
    "fileMatch": [
      "examples/hubble/hubble-cli\\.yaml"
    ]
  },
  "regexManagers": [
    {
      "fileMatch": [
        "images/cilium/download-hubble\\.sh",
        "images/builder/install-protoc.sh",
        "images/builder/install-protoplugins.sh",
        "images/hubble-relay/download-grpc-health-probe.sh",
        "images/runtime/build-gops.sh"
      ],
      // These regexes manage version and digest strings in shell scripts,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_version=\"(?<currentValue>.*)\"",
        // The digestVersion in this regex is required for Renovate to be able
        // to match the digest to the pinned version. It will not work without it.
        // Note that for GitHub release artifact digests, you likely want to use
        // github-release-attachments as the datasource here.
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?) digestVersion=(?<currentValue>.*)\\s+.+_sha256.*=\"(?<currentDigest>.*)\"",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s.+@(?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s.+_VERSION=(?<currentValue>.*)"
      ]
    },
    {
      "fileMatch": [
        ".github/ISSUE_TEMPLATE/bug_report.yaml"
      ],
      // These regexes manage version and digest strings in shell scripts,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+- \'higher than (?<currentValue>.*) and lower than.+"
      ],
    },
    {
      "fileMatch": [
        "^\\.github/workflows/[^/]+\\.ya?ml$",
        "^\\.github/actions/ginkgo/[^/]+\\.ya?ml$"
      ],
      // This regex manages version strings in GitHub actions workflow files,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+version: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+kernel: '(?<currentValue>.*)'",
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*)\\s+.+kernel: "(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)"',
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*)\\s+.+image-version: "(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)"',
        '# renovate: datasource=(?<datasource>.*?)\\s+.+kube-image: "(?<depName>.*):(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)"',
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?) branch=(?<currentValue>.*?)\\s+.+_ref: (?<currentDigest>.*)'
      ]
    },
    {
      "fileMatch": [
        "^Makefile\\.defs$"
      ],
      // This regex manages version strings in the Makefile.defs file,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION = (?<currentValue>.*)\\s+.+_SHA = (?<currentDigest>sha256:[a-f0-9]+)"
      ]
    },
    {
      "fileMatch": [
        "^test/kubernetes-test\\.sh$",
        "^test/packet/scripts/install\\.sh$",
        "^.github/actions/set-env-variables/action\\.yml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION=\"(?<currentValue>.*)\"",
        "# renovate: datasource=(?<datasource>.*?)\\s+KIND_K8S_IMAGE=\"(?<depName>.*):(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)\""
      ]
    },
    {
      "fileMatch": [
        "^go\\.mod$"
      ],
      "matchStrings": [
        "// renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+go (?<currentValue>.*)"
      ]
    },
    {
      "fileMatch": [
        ".github/actions/kvstore/action.yaml"
      ],
      "matchStrings": [
        "default: (?<depName>.*?):(?<currentValue>.*?)@(?<currentDigest>.*?)\\s"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "fileMatch": [
        "^install/kubernetes/Makefile\\.values$"
      ],
      // This regex manages version strings in the Makefile.defs file,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?)\\s+.+_REPO:=(?<depName>.*?)\\s+.+_VERSION:=(?<currentValue>.*)\\s+.+_DIGEST:=(?<currentDigest>sha256:[a-f0-9]+)"
      ]
    },
    {
      "fileMatch": [
        "^cilium-cli/defaults/defaults\\.go$"
      ],
      "matchStrings": [
        "\/\/ renovate: datasource=(?<datasource>.*?)\\s+.+Image = \"(?<depName>.*):(?<currentValue>.*)@(?<currentDigest>sha256:[a-f0-9]+)\"",
        "\/\/ renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+Version = \"(?<currentValue>.*)\""
      ]
    }
  ]
}
