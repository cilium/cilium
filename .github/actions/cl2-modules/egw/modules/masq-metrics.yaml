steps:
- name: "{{ .action }} masquerade delay metrics"
  measurements:
  - Identifier: EGWMasqueradeDelayMetrics
    Method: GenericPrometheusQuery
    Params:
      action: {{ .action }}
      metricName: "EGW Masquerade Delay Metrics"
      metricVersion: v1
      unit: s
      queries:
      - name: EGW Masquerade Delay - 50th Percentile
        query: quantile(0.5, egw_scale_test_masquerade_delay_seconds_total{k8s_instance="{{ .instance }}"})
      - name: EGW Masquerade Delay - 90th Percentile
        query: quantile(0.9, egw_scale_test_masquerade_delay_seconds_total{k8s_instance="{{ .instance }}"})
      - name: EGW Masquerade Delay - 95th Percentile
        query: quantile(0.95, egw_scale_test_masquerade_delay_seconds_total{k8s_instance="{{ .instance }}"})
      - name: EGW Masquerade Delay - 99th Percentile
        query: quantile(0.99, egw_scale_test_masquerade_delay_seconds_total{k8s_instance="{{ .instance }}"})

  - Identifier: EGWLeakedPingsMetrics
    Method: GenericPrometheusQuery
    Params:
      action: {{ .action }}
      metricName: "EGW Leaked Pings Metrics"
      metricVersion: v1
      unit: count
      queries:
      - name: EGW Leaked Pings - 50th Percentile
        query: quantile(0.5, egw_scale_test_leaked_requests_total{k8s_instance="{{ .instance }}"})
      - name: EGW Leaked Pings - 90th Percentile
        query: quantile(0.9, egw_scale_test_leaked_requests_total{k8s_instance="{{ .instance }}"})
      - name: EGW Leaked Pings - 95th Percentile
        query: quantile(0.95, egw_scale_test_leaked_requests_total{k8s_instance="{{ .instance }}"})
      - name: EGW Leaked Pings - 99th Percentile
        query: quantile(0.99, egw_scale_test_leaked_requests_total{k8s_instance="{{ .instance }}"})

  - Identifier: EGWLeakedPingsTotal
    Method: GenericPrometheusQuery
    Params:
      action: {{ .action }}
      metricName: "EGW Leaked Pings Total"
      metricVersion: v1
      unit: count
      queries:
      - name: EGW Leaked Pings - Total
        query: sum(egw_scale_test_leaked_requests_total{k8s_instance="{{ .instance }}"})

  - Identifier: EGWPodCountMetrics
    Method: GenericPrometheusQuery
    Params:
      action: {{ .action }}
      metricName: "EGW Pod Count Metrics"
      metricVersion: v1
      unit: pod
      queries:
      - name: EGW Total Number of Client Pods
        query: count(count(egw_scale_test_masquerade_delay_seconds_total{k8s_instance="{{ .instance }}"}) by (pod))
      - name: EGW Total Number of Failed Client Pods
        query: count(count(egw_scale_test_masquerade_delay_seconds_total{k8s_instance="{{ .instance }}"}==0) by (pod))
        threshold: 0
