apiVersion: v1
kind: Pod
metadata:
  name: {{.Name}}
  labels:
    app.kubernetes.io/name: egw-client
    app.kubernetes.io/instance: {{.Instance}}
    index: "{{.Index}}"
spec:
  nodeSelector:
    role.scaffolding/egw-client: "true"
  containers:
  - name: egw-client
    image: {{.Image}}
    imagePullPolicy: IfNotPresent
    args:
      - "client"
      - "--external-target-addr={{.ExternalTarget}}:{{.ExternalTargetPort}}"
      - "--test-timeout={{.ClientConnectTimeout}}"
      - "--stress={{.Stress}}"
      - "--stress-delay=15s"
    ports:
    - name: prometheus
      containerPort: 2112
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    readinessProbe:
      httpGet:
        path: "/readyz"
        port: 2112
      initialDelaySeconds: 5
      periodSeconds: 1
  securityContext:
    sysctls:
    # Extend the range of local ports, to avoid hitting this limit first.
    - name: net.ipv4.ip_local_port_range
      value: "15000 64999"
  {{ if eq .AffinityType "affinity" }}
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: {{ .AffinityInstance }}
        topologyKey: kubernetes.io/hostname
  {{ else if eq .AffinityType "antiAffinity" }}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/instance: {{ .AffinityInstance }}
        topologyKey: kubernetes.io/hostname
  {{ end }}
