name: ConformanceGatewayAPI

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request:
    paths-ignore:
      - 'Documentation/**'
      - 'test/**'
  push:
    branches:
      - master
      - ft/master/**
    paths-ignore:
      - 'Documentation/**'
      - 'test/**'

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

env:
  cilium_cli_version: v0.12.12
  minikube_version: 1.28.0
  gateway_api_version: v0.5.1
  timeout: 5m

jobs:
  gateway-api-conformance-test:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout master branch to access local actions
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          ref: ${{ github.event.repository.default_branch }}
          persist-credentials: false
      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables

      - name: Install Cilium CLI
        run: |
          curl -sSL --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${{ env.cilium_cli_version }}/cilium-linux-amd64.tar.gz{,.sha256sum}
          sha256sum --check cilium-linux-amd64.tar.gz.sha256sum
          sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin
          rm cilium-linux-amd64.tar.gz{,.sha256sum}
          cilium version

      - name: Set image tag
        id: vars
        run: |
          if [ ${{ github.event.pull_request }} ]; then
            SHA=${{ github.event.pull_request.head.sha }}
          else
            SHA=${{ github.sha }}
          fi
          echo sha=${SHA} >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          ref: ${{ steps.vars.outputs.sha }}
          persist-credentials: false

      - name: Create minikube cluster with multiple nodes
        uses: medyagh/setup-minikube@ab221dee176f8eabd8deddf849b5bf1d6244a6e8
        with:
          minikube-version: ${{ env.minikube_version }}
          network-plugin: cni
          cni: false
          wait: false
          start-args: --nodes 3 --docker-opt "default-ulimit=nofile=102400:102400"

      # Start minikube tunnel
      - name: Setup minikube
        run: |
          minikube tunnel &

      - name: Install Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568
        with:
          go-version: 1.19.5

      - name: Wait for images to be available
        timeout-minutes: 30
        shell: bash
        run: |
          for image in cilium-ci operator-generic-ci ; do
            until docker manifest inspect quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/$image:${{ steps.vars.outputs.sha }} &> /dev/null; do sleep 45s; done
          done

      - name: Install Gateway API CRDs
        run: |
          # Install Gateway CRDs
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/${{ env.gateway_api_version }}/config/crd/standard/gateway.networking.k8s.io_gatewayclasses.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/${{ env.gateway_api_version }}/config/crd/standard/gateway.networking.k8s.io_gateways.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/${{ env.gateway_api_version }}/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/${{ env.gateway_api_version }}/config/crd/experimental/gateway.networking.k8s.io_referencegrants.yaml

          # To make sure that Gateway API CRs are available
          kubectl wait --for condition=Established crd/gatewayclasses.gateway.networking.k8s.io --timeout=${{ env.timeout }}
          kubectl wait --for condition=Established crd/gateways.gateway.networking.k8s.io --timeout=${{ env.timeout }}
          kubectl wait --for condition=Established crd/httproutes.gateway.networking.k8s.io --timeout=${{ env.timeout }}
          kubectl wait --for condition=Established crd/referencegrants.gateway.networking.k8s.io --timeout=${{ env.timeout }}

      - name: Install Cilium
        run: |
          helm upgrade -i cilium ./install/kubernetes/cilium \
            --wait \
            --namespace kube-system \
            --set kubeProxyReplacement=strict \
            --set nodeinit.enabled=true \
            --set ipam.mode=kubernetes \
            --set image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/cilium-ci \
            --set image.tag=${{ steps.vars.outputs.sha }} \
            --set image.pullPolicy=IfNotPresent \
            --set image.useDigest=false \
            --set operator.image.repository=quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/operator \
            --set operator.image.suffix=-ci \
            --set operator.image.tag=${{ steps.vars.outputs.sha }} \
            --set operator.image.pullPolicy=IfNotPresent \
            --set operator.image.useDigest=false \
            --set securityContext.privileged=true \
            --set gatewayAPI.enabled=true

          kubectl wait -n kube-system --for=condition=Ready --all pod --timeout=${{ env.timeout }}

          # To make sure that cilium envoy CRs are available
          kubectl wait --for condition=Established crd/ciliumenvoyconfigs.cilium.io --timeout=${{ env.timeout }}
          kubectl wait --for condition=Established crd/ciliumclusterwideenvoyconfigs.cilium.io --timeout=${{ env.timeout }}

      - name: Run Gateway API conformance test
        timeout-minutes: 30
        run: |
          GATEWAY_API_CONFORMANCE_TESTS=1 go test -v ./operator/pkg/gateway-api --gateway-class cilium --debug -test.run "TestConformance"

      - name: Post-test information gathering
        if: ${{ !success() }}
        run: |
          kubectl get pods --all-namespaces -o wide
          cilium status
          cilium sysdump --output-filename cilium-sysdump-out
        shell: bash {0} # Disable default fail-fast behaviour so that all commands run independently

      - name: Upload artifacts
        if: ${{ !success() }}
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: cilium-sysdump-out.zip
          path: cilium-sysdump-out.zip
          retention-days: 5
