name: Standalone Dns Proxy test (ci-standalone-dns-proxy)

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request:
    paths-ignore:
      - 'Documentation/**'
      - 'test/**'
  workflow_dispatch:
    inputs:
      PR-number:
        description: "Pull request number."
        required: true
      context-ref:
        description: "Context in which the workflow runs. If PR is from a fork, will be the PR target branch (general case). If PR is NOT from a fork, will be the PR branch itself (this allows committers to test changes to workflows directly from PRs)."
        required: true
      SHA:
        description: "SHA under test (head of the PR branch)."
        required: true
  push:
    branches:
      - 'renovate/main-**'
  # Run every 8 hours
  schedule:
    - cron:  '0 5/8 * * *'

# By specifying the access of one of the scopes, all of those that are not
# specified are set to 'none'.
permissions:
  # To read actions state with catchpoint/workflow-telemetry-action
  actions: read
  # To be able to access the repository with actions/checkout
  contents: read
  # To allow retrieving information from the PR API
  pull-requests: read
  # To be able to set commit status
  statuses: write

concurrency:
  # Structure:
  # - Workflow name
  # - Event type
  # - A unique identifier depending on event type:
  #   - schedule: SHA
  #   - workflow_dispatch: PR number
  #
  # This structure ensures a unique concurrency group name is generated for each
  # type of testing, such that re-runs will cancel the previous run.
  group: |
    ${{ github.workflow }}
    ${{ github.event_name }}
    ${{
      (github.event_name == 'push' && github.sha) ||
      (github.event_name == 'schedule' && github.sha) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.PR-number)
    }}
  cancel-in-progress: true

env:
  test_concurrency: 5

jobs:
  echo-inputs:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    name: Echo Workflow Dispatch Inputs
    runs-on: ubuntu-24.04
    steps:
      - name: Echo Workflow Dispatch Inputs
        run: |
          echo '${{ tojson(inputs) }}'

  commit-status-start:
    name: Commit Status Start
    runs-on: ubuntu-24.04
    steps:
      - name: Set initial commit status
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          sha: ${{ inputs.SHA || github.sha }}

  wait-for-images:
    name: Wait for images
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - name: Checkout context ref (trusted)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.context-ref || github.sha }}
          persist-credentials: false
      - name: Wait for images
        uses: ./.github/actions/wait-for-images
        with:
          SHA: ${{ github.event.pull_request.head.sha }} #Not sure why this is needed
          # SHA: ${{ inputs.SHA || github.sha }}
          images: cilium-ci operator-generic-ci cilium-cli-ci

  setup-and-test:
    needs: [wait-for-images]
    runs-on: ${{ vars.GH_RUNNER_EXTRA_POWER_UBUNTU_LATEST || 'ubuntu-24.04' }}
    name: 'Setup & Test'
    env:
      job_name: 'Setup & Test'
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        include:
          - name: '1'
            kernel: '6.12-20250126.112744'
            kpr: 'true'
            standalone-dns-proxy: 'true'
            misc: 'l7Proxy=true,dnsProxy.proxyPort=40046'
            kube-proxy: 'none'

    timeout-minutes: 30
    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0
        with:
          comment_on_pr: false

      - name: Checkout context ref (trusted)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.context-ref || github.sha }}
          persist-credentials: false

      - name: Cleanup Disk space in runner
        if: runner.name == 'ubuntu-24.04'
        uses: ./.github/actions/disk-cleanup

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables

      - name: Set up job variables
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            SHA="${{ inputs.SHA }}"
          else
            SHA="${{ github.event.pull_request.head.sha  }}"
          fi
          echo sha=${SHA} >> $GITHUB_OUTPUT

      - name: Derive Cilium installation config
        id: cilium-newest-config
        uses: ./.github/actions/cilium-config
        with:
          image-tag: ${{ steps.vars.outputs.sha }}
          chart-dir: './untrusted/cilium-newest/install/kubernetes/cilium'
          ipv4: true
          ipv6: false
          kpr: ${{ matrix.kpr }}
          mutual-auth: false
          misc: ${{ matrix.misc }}
          standalone-dns-proxy: ${{ matrix.standalone-dns-proxy }}

      - name: Set Kind params
        id: kind-params
        shell: bash
        run: |
          IP_FAM="ipv4"
          echo params="--xdp --secondary-network \"\" 3 \"\" \"\" ${{ matrix.kube-proxy }} $IP_FAM" >> $GITHUB_OUTPUT

      - name: Provision K8s on LVH VM
        uses: ./.github/actions/lvh-kind
        with:
          test-name: e2e-conformance
          kernel: ${{ matrix.kernel }}
          kind-params: "${{ steps.kind-params.outputs.params }}"
          kind-image: ${{ env.KIND_K8S_IMAGE }}

      - name: Install Cilium CLI
        uses: cilium/cilium-cli@45a3879a8cb769c9e41b912635e03a38849c9242 # v0.18.1
        with:
          skip-build: ${{ env.CILIUM_CLI_SKIP_BUILD }}
          image-repo: ${{ env.CILIUM_CLI_IMAGE_REPO }}
          image-tag: ${{ steps.vars.outputs.sha }}
          repository: ${{ env.CILIUM_CLI_RELEASE_REPO }}
          release-version: ${{ env.CILIUM_CLI_VERSION }}

      # Warning: since this is a privileged workflow, subsequent workflow job
      # steps must take care not to execute untrusted code.
      - name: Checkout pull request branch (NOT TRUSTED)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ steps.vars.outputs.sha }}
          persist-credentials: false
          path: untrusted/cilium-newest
          sparse-checkout: |
            install/kubernetes/cilium
            examples

      - name: Install Cilium
        shell: bash
        run: |
          cilium install ${{ steps.cilium-newest-config.outputs.config }}
          cilium status --wait --interactive=false
          kubectl get pods --all-namespaces -o wide
          kubectl -n kube-system exec daemonset/cilium -c cilium-agent -- cilium-dbg status

          mkdir -p cilium-junits

      - name: Test Cilium
        shell: bash
        run: |
          cilium connectivity test --log-check-levels="error"

      - name: Create pods for standalone-dns-proxy test
        shell: bash
        run: |
          kubectl apply -f untrusted/cilium-newest/examples/minikube/http-sw-app.yaml
          kubectl apply -f untrusted/cilium-newest/examples/policies/l7/dns/dns.yaml
          #wait for pods to be ready
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=xwing --timeout=120s

      - name: Test DNS connectivity
        shell: bash
        run: |
          #this should pass
          kubectl exec xwing -- curl cilium.io
          #this should fail
          kubectl exec xwing -- curl one.one.one.one || true

      - name: Features tested before making cilium down
        uses: ./.github/actions/feature-status
        with:
          title: "Summary of all features tested before making cilium down"
          json-filename: "${{ env.job_name }} (${{ matrix.name }}) - before making cilium down"

      - name: Make Cilium down
        shell: bash
        run: |
          cilium upgrade \
            --chart-directory=./untrusted/cilium-newest/install/kubernetes/cilium \
            --helm-set=debug.enabled=true \
            --set-string='image.override=quay.io/cilium/cilium:invalid-image' \
            --set-string='extraConfig.enable-embedded-dns-proxy=false' \
            --set='l7Proxy=true,dnsProxy.proxyPort=40046' \
            --helm-set=standaloneDnsProxy.image.repository=quay.io/singhvipul/standalone-dns-proxy \
            --helm-set=standaloneDnsProxy.image.tag=latest \
            --helm-set=standaloneDnsProxy.image.useDigest=false

          kubectl rollout restart -n kube-system daemonset/cilium
          kubectl get pods --all-namespaces -o wide
          sleep 10s

      - name: Test DNS connectivity after Down
        shell: bash
        run: |
          kubectl exec xwing -- curl cilium.io

      - name: Fetch artifacts
        if: ${{ !success() }}
        shell: bash
        run: |
          kubectl get pods --all-namespaces -o wide
          cilium status
          mkdir -p cilium-sysdumps
          cilium sysdump --output-filename cilium-sysdump-${{ matrix.name }}-final

      - name: Upload artifacts
        if: ${{ !success() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: cilium-sysdumps-${{ matrix.name }}
          path: cilium-sysdump-*.zip

      - name: Upload JUnits [junit]
        if: ${{ always() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: cilium-junits-${{ matrix.name }}
          path: cilium-junits/*.xml

      - name: Upload features tested
        if: ${{ always() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: features-tested-${{ matrix.name }}
          path: ${{ env.job_name }}*.json

      - name: Publish Test Results As GitHub Summary
        if: ${{ always() }}
        uses: aanm/junit2md@332ebf0fddd34e91b03a832cfafaa826306558f9 # v0.0.3
        with:
          junit-directory: "cilium-junits"

  merge-upload:
    if: ${{ always() }}
    name: Merge and Upload Artifacts
    runs-on: ubuntu-24.04
    needs: setup-and-test
    steps:
      - name: Checkout context ref (trusted)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.context-ref || github.sha }}
          persist-credentials: false
      - name: Merge Sysdumps
        uses: ./.github/actions/merge-artifacts
        with:
          name: cilium-sysdumps
          pattern: cilium-sysdumps-*
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge JUnits
        uses: ./.github/actions/merge-artifacts
        with:
          name: cilium-junits
          pattern: cilium-junits-*
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge Features tested
        uses: ./.github/actions/merge-artifacts
        with:
          name: features-tested
          pattern: features-tested-*
          token: ${{ secrets.GITHUB_TOKEN }}

  commit-status-final:
    if: ${{ always() }}
    name: Commit Status Final
    needs: setup-and-test
    runs-on: ubuntu-24.04
    steps:
      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          sha: ${{ inputs.SHA || github.sha }}
          status: ${{ needs.setup-and-test.result }}
