name: Image CI Build

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
      - ft/main/**
  merge_group:
    types: [checks_requested]

permissions:
  # To be able to access the repository with `actions/checkout`
  contents: read
  # Required to generate OIDC tokens for `sigstore/cosign-installer` authentication
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after || (github.event_name == 'merge_group' && github.run_id) }}
  cancel-in-progress: true

jobs:
  build-and-push-prs:
    timeout-minutes: 45
    name: Build and Push Images
    runs-on: ${{ vars.GH_RUNNER_EXTRA_POWER_UBUNTU_LATEST || 'ubuntu-24.04' }}
    outputs:
      sha: ${{ steps.tag.outputs.sha }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: cilium
            dockerfile: ./images/cilium/Dockerfile
            platforms: linux/amd64,linux/arm64

          - name: cilium-cli
            dockerfile: ./cilium-cli/Dockerfile
            platforms: linux/amd64
            require-dir: cilium-cli

          - name: operator-aws
            dockerfile: ./images/operator/Dockerfile
            platforms: linux/amd64,linux/arm64

          - name: operator-azure
            dockerfile: ./images/operator/Dockerfile
            platforms: linux/amd64,linux/arm64

          - name: operator-alibabacloud
            dockerfile: ./images/operator/Dockerfile
            platforms: linux/amd64,linux/arm64

          - name: operator-generic
            dockerfile: ./images/operator/Dockerfile
            platforms: linux/amd64,linux/arm64

          - name: hubble-relay
            dockerfile: ./images/hubble-relay/Dockerfile
            platforms: linux/amd64,linux/arm64

          - name: clustermesh-apiserver
            dockerfile: ./images/clustermesh-apiserver/Dockerfile
            platforms: linux/amd64,linux/arm64

          - name: docker-plugin
            dockerfile: ./images/cilium-docker-plugin/Dockerfile
            platforms: linux/amd64,linux/arm64

    steps:
      - name: Checkout base or default branch (trusted)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # We first check if base_ref exist, meaning we're in pull_request context, and if not we just use default_branch
          ref: ${{ github.base_ref || github.event.repository.default_branch }}
          persist-credentials: false

      - name: Set Environment Variables
        uses: ./.github/actions/set-env-variables

      - name: Copy scripts to trusted directory
        run: |
          mkdir -p ../cilium-base-branch
          cp -r .github/actions/set-runtime-image ../cilium-base-branch

      - name: Check for disk usage and cleanup /mnt
        shell: bash
        run: |
          echo "# Disk usage"
          df -h
          echo "# Usage for /mnt"
          sudo du --human-readable \
                -- /mnt
          if compgen -G "/mnt/.*" > /dev/null; then
            echo "# Hidden files in /mnt:"
            sudo du --human-readable -- /mnt/.* 2>/dev/null
          fi
          echo "# Removing /mnt/tmp-pv.img"
          sudo rm -f '/mnt/tmp-pv.img'

      - name: Enable SSH access if low disk space
        shell: bash
        run: |
          # Check available space on /mnt in GB
          available_space=$(df -BG /mnt | tail -n1 | awk '{print $4}' | sed 's/G//')
          echo "Available space on /mnt: ${available_space}G"

          if [ "$available_space" -lt 5 ]; then
            echo "Warning: Available space on /mnt is less than 5G (${available_space}G)"
            echo "Enabling SSH access for debugging..."

            # Install tmate for SSH access
            sudo apt-get update
            sudo apt-get install -y tmate

            # Start tmate session in background
            tmate -S /tmp/tmate.sock new-session -d

            # Wait for tmate to establish connection
            sleep 5

            # Display connection info
            echo "=== SSH Connection Information ==="
            tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
            echo "=== Web Session ==="
            tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
            echo "================================="

            # Keep session alive for 30 minutes or until workflow times out
            timeout 1800 tmate -S /tmp/tmate.sock wait tmate-ready || true
          else
            echo "Sufficient disk space available (${available_space}G >= 5G)"
            exit 1
          fi
