name: Smoke Test with IPv6

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request: {}
  push:
    branches:
      - v1.10
      - ft/v1.10/**

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

env:
  KIND_VERSION: v0.11.1
  KIND_CONFIG: .github/kind-config-ipv6.yaml
  # Skip external traffic (e.g. 1.1.1.1 and www.google.com) due to no support for IPv6 in github action
  CONFORMANCE_TEMPLATE: examples/kubernetes/connectivity-check/connectivity-check-internal.yaml
  TIMEOUT: 5m
  LOG_TIME: 30m

jobs:
  check_changes:
    name: Deduce required tests from code changes
    runs-on: ubuntu-18.04
    outputs:
      tested: ${{ steps.tested-tree.outputs.src }}
    steps:
      - name: Checkout code
        if: ${{ !github.event.pull_request }}
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          persist-credentials: false
      - name: Check code changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
        id: tested-tree
        with:
          # For `push` events, compare against the `ref` base branch
          # For `pull_request` events, this is ignored and will compare against the pull request base branch
          base: ${{ github.ref }}
          filters: |
            src:
              - '!(test|Documentation)/**'

  conformance-test-ipv6:
    needs: check_changes
    if: ${{ needs.check_changes.outputs.tested == 'true' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          persist-credentials: false

      - name: Set image tag
        id: vars
        run: |
          if [ ${{ github.event.pull_request.head.sha }} != "" ]; then
            echo ::set-output name=tag::${{ github.event.pull_request.head.sha }}
          else
            echo ::set-output name=tag::${{ github.sha }}
          fi

      - name: Precheck generated connectivity manifest files
        run: |
          make -C examples/kubernetes/connectivity-check fmt
          make -C examples/kubernetes/connectivity-check all
          git diff --exit-code || (echo "please run 'make -C examples/kubernetes/connectivity-check all' and submit your changes"; exit 1)

      - name: Enable IPv6 in docker
        run: |
          # Keep existing cgroup-parent in github action
          sudo sh -c "echo '{ \"cgroup-parent\": \"/actions_job\", \"ipv6\": true, \"fixed-cidr-v6\": \"2001:db8:1::/64\" }' > /etc/docker/daemon.json"
          sudo cat /etc/docker/daemon.json
          sudo ip -6 route add 2001:db8:1::/64 dev docker0
          sudo sysctl net.ipv6.conf.default.forwarding=1
          sudo sysctl net.ipv6.conf.all.forwarding=1
          sudo systemctl restart docker

      - name: Create kind cluster
        uses: helm/kind-action@d8ccf8fb623ce1bb360ae2f45f323d9d5c5e9f00
        with:
          version: ${{ env.KIND_VERSION }}
          config: ${{ env.KIND_CONFIG }}

      - name: Wait for images to be available
        timeout-minutes: 10
        shell: bash
        run: |
          for image in cilium-ci operator-generic-ci ; do
            until docker manifest inspect quay.io/${{ github.repository_owner }}/$image:${{ steps.vars.outputs.tag }} &> /dev/null; do sleep 45s; done
          done

      - name: Install cilium chart
        run: |
          helm upgrade -i cilium ./install/kubernetes/cilium \
            --namespace kube-system \
            --set nodeinit.enabled=true \
            --set kubeProxyReplacement=strict \
            --set ipam.mode=kubernetes \
            --set image.repository=quay.io/${{ github.repository_owner }}/cilium-ci \
            --set image.tag=${{ steps.vars.outputs.tag }} \
            --set image.pullPolicy=IfNotPresent \
            --set image.useDigest=false \
            --set operator.image.repository=quay.io/${{ github.repository_owner }}/operator \
            --set operator.image.suffix=-ci \
            --set operator.image.tag=${{ steps.vars.outputs.tag }} \
            --set operator.image.pullPolicy=IfNotPresent \
            --set operator.image.useDigest=false \
            --set ipv6.enabled=true \
            --set ipv4.enabled=false \
            --set tunnel=disabled \
            --set autoDirectNodeRoutes=true

          kubectl wait -n kube-system --for=condition=Ready --all pod --timeout=${{ env.TIMEOUT }}
          # To make sure that cilium CRD is available (default timeout is 5m)
          kubectl wait --for condition=Established crd/ciliumnetworkpolicies.cilium.io --timeout=5m

      - name: Run conformance test (e.g. connectivity check without external 1.1.1.1 and www.google.com)
        run: |
          kubectl apply -f ${{ env.CONFORMANCE_TEMPLATE }}
          kubectl wait --for=condition=Available --all deployment --timeout=${{ env.TIMEOUT }}

      - name: Capture cilium-sysdump
        if: ${{ failure() }}
        run: |
          curl -sLO https://github.com/cilium/cilium-sysdump/releases/latest/download/cilium-sysdump.zip
          python cilium-sysdump.zip --output cilium-sysdump-out

      - name: Upload cilium-sysdump
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
        if: ${{ failure() }}
        with:
          name: cilium-sysdump-out.zip
          path: cilium-sysdump-out.zip
