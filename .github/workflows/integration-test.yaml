name: IntegrationTests

# Any change in triggers needs to be reflected in the concurrency group.
on:
  workflow_dispatch:
    inputs:
      PR-number:
        description: "Pull request number."
        required: true
      context-ref:
        description: "Context in which the workflow runs. If PR is from a fork, will be the PR target branch (general case). If PR is NOT from a fork, will be the PR branch itself (this allows committers to test changes to workflows directly from PRs)."
        required: true
      SHA:
        description: "SHA under test (head of the PR branch)."
        required: true
      extra-args:
        description: "[JSON object] Arbitrary arguments passed from the trigger comment via regex capture group. Parse with 'fromJson(inputs.extra-args).argName' in workflow."
        required: false
        default: '{}'
  push:
    branches:
    - main
    - ft/main/**
    paths-ignore:
    - 'Documentation/**'

# By specifying the access of one of the scopes, all of those that are not
# specified are set to 'none'.
permissions:
  # To be able to access the repository with actions/checkout
  contents: read
  # To allow retrieving information from the PR API
  pull-requests: read
  # To be able to set commit status
  statuses: write

concurrency:
  # Structure:
  # - Workflow name
  # - Event type
  # - A unique identifier depending on event type:
  #   - schedule: SHA
  #   - workflow_dispatch: PR number
  #
  # This structure ensures a unique concurrency group name is generated for each
  # type of testing, such that re-runs will cancel the previous run.
  group: |
    ${{ github.workflow }}
    ${{ github.event_name }}
    ${{
      (github.event_name == 'push' && github.sha) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.PR-number)
    }}
  cancel-in-progress: true

jobs:
  commit-status-start:
    runs-on: ubuntu-latest
    steps:
      - name: Set initial commit status
        uses: myrotvorets/set-commit-status-action@243b4f7e597f62335408d58001edf8a02cf3e1fd # v1.1.7
        with:
          sha: ${{ inputs.SHA || github.sha }}

  integration-test:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    steps:
    - name: Checkout main branch to access local actions
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      with:
        ref: ${{ github.event.repository.default_branch }}
        persist-credentials: false
    - name: Set Environment Variables
      uses: ./.github/actions/set-env-variables

    - name: Set image tag
      id: vars
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          SHA="${{ inputs.SHA }}"
        else
          SHA="${{ github.sha }}"
        fi
        echo sha=${SHA} >> $GITHUB_OUTPUT

    - name: Checkout
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      with:
        ref: ${{ steps.vars.outputs.sha }}
        persist-credentials: false

    - name: Install Go
      uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
      with:
        # renovate: datasource=golang-version depName=go
        go-version: 1.20.6

    - name: Prepare environment
      timeout-minutes: 15
      run: |
        ./.travis/prepare.sh

    - name: Run integration tests
      timeout-minutes: 30
      run: |
        export PATH=/usr/local/clang/bin:$PATH
        export V=0
        export DOCKER_BUILD_FLAGS=--quiet
        ./.travis/build.sh

  commit-status-final:
    if: ${{ always() }}
    needs: integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@243b4f7e597f62335408d58001edf8a02cf3e1fd # v1.1.7  
        with:
          sha: ${{ inputs.SHA || github.sha }}
          status: ${{ needs.integration-test.result }}
