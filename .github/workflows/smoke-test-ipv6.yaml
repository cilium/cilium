name: Smoke Test with IPv6

on:
  pull_request: {}
  push:
    branches:
      - master

env:
  KIND_VERSION: v0.9.0
  KIND_CONFIG: .github/kind-config-ipv6.yaml
  # Skip external traffic (e.g. 1.1.1.1 and www.google.com) due to no support for IPv6 in github action
  CONFORMANCE_TEMPLATE: examples/kubernetes/connectivity-check/connectivity-check-internal.yaml
  TIMEOUT: 5m
  LOG_TIME: 30m

jobs:
  conformance-test-ipv6:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Precheck generated connectivity manifest files
        run: |
          make -C examples/kubernetes/connectivity-check fmt
          make -C examples/kubernetes/connectivity-check all
          git diff --exit-code || (echo "please run 'make -C examples/kubernetes/connectivity-check all' and submit your changes"; exit 1)

      - name: Enable IPv6 in docker
        run: |
          # Keep existing cgroup-parent in github action
          sudo sh -c "echo '{ \"cgroup-parent\": \"/actions_job\", \"ipv6\": true, \"fixed-cidr-v6\": \"2001:db8:1::/64\" }' > /etc/docker/daemon.json"
          sudo cat /etc/docker/daemon.json
          sudo ip -6 route add 2001:db8:1::/64 dev docker0
          sudo sysctl net.ipv6.conf.default.forwarding=1
          sudo sysctl net.ipv6.conf.all.forwarding=1
          sudo systemctl restart docker

      - name: Build docker images
        run: |
          make docker-cilium-image
          make docker-operator-generic-image

      - name: Create kind cluster
        uses: helm/kind-action@v1.0.0
        with:
          version: ${{ env.KIND_VERSION }}
          config: ${{ env.KIND_CONFIG }}

      - name: Load local images into kind cluster
        run: |
          kind load docker-image --name chart-testing quay.io/cilium/cilium:latest
          kind load docker-image --name chart-testing quay.io/cilium/operator-generic:latest

      - name: Install cilium chart
        run: |
          helm upgrade -i cilium ./install/kubernetes/cilium \
            --namespace kube-system \
            --set nodeinit.enabled=true \
            --set kubeProxyReplacement=strict \
            --set ipam.mode=kubernetes \
            --set image.tag=latest \
            --set image.pullPolicy=Never \
            --set operator.image.tag=latest \
            --set operator.image.pullPolicy=Never \
            --set ipv6.enabled=true \
            --set ipv4.enabled=false \
            --set tunnel=disabled \
            --set autoDirectNodeRoutes=true

          kubectl wait -n kube-system --for=condition=Ready --all pod --timeout=${{ env.TIMEOUT }}
          # To make sure that cilium CRD is available (default timeout is 5m)
          kubectl wait --for condition=Established crd/ciliumnetworkpolicies.cilium.io --timeout=5m

      - name: Run conformance test (e.g. connectivity check without external 1.1.1.1 and www.google.com)
        run: |
          kubectl apply -f ${{ env.CONFORMANCE_TEMPLATE }}
          kubectl wait --for=condition=Available --all deployment --timeout=${{ env.TIMEOUT }}

      - name: Capture cilium-sysdump
        if: ${{ failure() }}
        run: |
          curl -sLO https://github.com/cilium/cilium-sysdump/releases/latest/download/cilium-sysdump.zip
          python cilium-sysdump.zip --output cilium-sysdump-out

      - name: Upload cilium-sysdump
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: cilium-sysdump-out.zip
          path: cilium-sysdump-out.zip
