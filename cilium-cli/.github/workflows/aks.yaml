name: AKS

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request: {}
  # Run every 6 hours
  schedule:
    - cron:  '0 0/6 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || 'scheduled' }}
  cancel-in-progress: true

env:
  name: ${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.run_id }}
  location: westeurope

jobs:
  installation-and-connectivity:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Set up Go
        uses: actions/setup-go@37335c7bb261b353407cff977110895fa0b4f7d8
        with:
          go-version: 1.16.4

      - name: Set up Go for root
        run: |
          sudo ln -sf `which go` `sudo which go` || true
          sudo go version

      - name: Build and install cilium CLI binary
        run: sudo make install

      - name: Login to Azure
        uses: azure/login@77f1b2e3fb80c0e8645114159d17008b8a2e475a
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Display Azure CLI info
        uses: azure/CLI@4b58c946a0f48d82cc2b6e31c0d15a6604859554
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az account show

      - name: Set up job variables
        id: vars
        run: |
          if [ ${{ github.event.issue.pull_request || github.event.pull_request }} ]; then
            PR_API_JSON=$(curl \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              ${{ github.event.issue.pull_request.url || github.event.pull_request.url }})
            SHA=$(echo "$PR_API_JSON" | jq -r ".head.sha")
            OWNER=$(echo "$PR_API_JSON" | jq -r ".number")
          else
            SHA=${{ github.sha }}
            OWNER=${{ github.sha }}
          fi

          echo ::set-output name=sha::${SHA}
          echo ::set-output name=owner::${OWNER}

      - name: Create AKS cluster
        run: |
          az group create \
            --name ${{ env.name }} \
            --location ${{ env.location }} \
            --tags usage=${{ github.repository_owner }}-${{ github.event.repository.name }} owner=${{ steps.vars.outputs.owner }}
          az aks create \
            --resource-group ${{ env.name }} \
            --name ${{ env.name }} \
            --location ${{ env.location }} \
            --network-plugin azure \
            --node-count 2 \
            --node-vm-size Standard_B2s \
            --node-osdisk-size 30 \
            --load-balancer-sku basic \
            --generate-ssh-keys

      - name: Get cluster credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ env.name }} \
            --name ${{ env.name }}

      - name: Install Cilium
        run: |
          cilium install \
            --cluster-name=${{ env.name }} \
            --azure-resource-group ${{ env.name }} \
            --azure-tenant-id ${{ secrets.AZURE_TENANT_ID }} \
            --azure-client-id ${{ secrets.AZURE_CLIENT_ID }} \
            --azure-client-secret ${{ secrets.AZURE_CLIENT_SECRET }} \
            --wait=false \
            --config monitor-aggregation=none

      - name: Enable Relay
        run: |
          cilium hubble enable

      - name: Wait for Cilium status to be ready
        run: |
          cilium status --wait

      - name: Port forward Relay
        run: |
          cilium hubble port-forward&
          sleep 5s

      - name: Run connectivity test
        run: |
          cilium connectivity test --all-flows

      - name: Post-test information gathering
        if: ${{ failure() }}
        run: |
          cilium status
          kubectl get pods --all-namespaces -o wide
          curl -sLO https://github.com/cilium/cilium-sysdump/releases/latest/download/cilium-sysdump.zip
          python cilium-sysdump.zip --output cilium-sysdump-out
        shell: bash {0} # Disable default fail-fast behaviour so that all commands run independently

      - name: Clean up AKS
        if: ${{ always() }}
        run: |
          az group delete --name ${{ env.name }} --yes --no-wait
        shell: bash {0} # Disable default fail-fast behaviour so that all commands run independently

      - name: Upload artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: cilium-sysdump-out.zip
          path: cilium-sysdump-out.zip
          retention-days: 5

      - name: Send slack notification
        if: ${{ !success() && (github.event_name == 'schedule' || github.event_name == 'push') }}
        uses: 8398a7/action-slack@dcc8c8e9dd8802e21a712dc0c003db97b42efe43
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
