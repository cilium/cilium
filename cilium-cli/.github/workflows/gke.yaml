name: GKE

# Any change in triggers needs to be reflected in the concurrency group.
on:
  pull_request_target: {}
  # Run every 6 hours
  schedule:
    - cron:  '0 2/6 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || 'scheduled' }}
  cancel-in-progress: true

env:
  clusterName: cilium-cli-ci-${{ github.run_number }}
  zone: us-west2-a

jobs:
  installation-and-connectivity:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@daadedc81d5f9d3c06d2c92f49202a3cc2b919ba
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: gcloud info
        run: |
          gcloud info

      - name: Create GKE cluster
        run: |
          gcloud container clusters create ${{ env.clusterName }} --image-type COS --num-nodes 2 --machine-type n1-standard-4 --zone ${{ env.zone }}

      - name: Set job vars
        id: vars
        run: |
          CLUSTER_CIDR=$(gcloud container clusters describe ${{ env.clusterName }} --zone ${{ env.zone }} --format="value(clusterIpv4Cidr)")
          echo ::set-output name=cluster_cidr::${CLUSTER_CIDR}

          if [ ${{ github.event.issue.pull_request || github.event.pull_request }} ]; then
            PR_API_JSON=$(curl \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              ${{ github.event.issue.pull_request.url || github.event.pull_request.url }})
            SHA=$(echo "$PR_API_JSON" | jq -r ".head.sha")
            OWNER=$(echo "$PR_API_JSON" | jq -r ".number")
            IS_PR=true
          else
            SHA=${{ github.sha }}
            OWNER=${{ github.sha }}
          fi
          echo ::set-output name=sha::${SHA}

      - name: Get Credentials
        run: |
          gcloud container clusters get-credentials ${{ env.clusterName}} --zone ${{ env.zone }}

      - name: Create gcloud-free kubeconfig and load it in configmap
        run: |
          .github/get-kubeconfig.sh
          kubectl create configmap cilium-cli-kubeconfig -n kube-system --from-file kubeconfig

      - name: Load test script in configmap
        run: |
          kubectl create configmap cilium-cli-test-script -n kube-system --from-file=in-cluster-test-script.sh=.github/in-cluster-test-scripts/gke.sh

      - name: Create cilium-cli job
        run: |
          helm install .github/cilium-cli-test-job-chart --generate-name \
          --set tag=${{ steps.vars.outputs.sha }} \
          --set cluster_name=${{ env.clusterName }} \
          --set cluster_cidr=${{ steps.vars.outputs.cluster_cidr }}

      - name: Wait for job
        run: |
          kubectl -n kube-system wait job/cilium-cli --for=condition=complete --timeout=15m

      - name: Post-test information gathering
        if: ${{ failure() }}
        run: |
          kubectl logs -n kube-system job/cilium-cli
          kubectl exec -n kube-system job/cilium-cli -- cilium status
          kubectl get pods --all-namespaces -o wide
          curl -sLO https://github.com/cilium/cilium-sysdump/releases/latest/download/cilium-sysdump.zip
          python cilium-sysdump.zip --output cilium-sysdump-out
        shell: bash {0}

      - name: Clean up GKE
        if: ${{ always() }}
        run: |
          gcloud container clusters delete --quiet ${{ env.clusterName }} --zone ${{ env.zone }} --async

      - name: Upload Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: cilium-sysdump-out.zip
          path: cilium-sysdump-out.zip
          retention-days: 5

      - name: Send slack notification
        if: ${{ !success() && (github.event_name == 'schedule' || github.event_name == 'push') }}
        uses: 8398a7/action-slack@dcc8c8e9dd8802e21a712dc0c003db97b42efe43
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
