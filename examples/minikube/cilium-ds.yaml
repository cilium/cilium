kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  - nodes
  - endpoints
  - componentstatuses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - networkpolicies
  - ingresses
  - thirdpartyresources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  verbs:
  - "*"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
- kind: Group
  name: system:nodes
# NOTE: This DaemonSet should only be used in a single-node setup.
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: cilium-consul
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        k8s-app: consul
        kubernetes.io/cluster-service: "true"
      annotations:
        scheduler.alpha.kubernetes.io/tolerations: >-
          [{"key":"dedicated","operator":"Equal","value":"master","effect":"NoSchedule"}]
    spec:
      containers:
      - image: consul:0.8.3
        imagePullPolicy: Always
        name: cilium-consul
        command: [ "consul" ]
        args:
          - "agent" 
          - "-server"
          - "-bootstrap-expect"
          - "1"
          - "-data-dir=/var/lib/consul"
          - "-bind=127.0.0.1"
        env:
          - name: "CONSUL_LOCAL_CONFIG"
            value: "{\"skip_leave_on_interrupt\": true}"
        livenessProbe:
          exec:
            command:
            - consul
            - info
          initialDelaySeconds: 30
          failureThreshold: 10
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - consul
            - members
          initialDelaySeconds: 60
          periodSeconds: 15
        securityContext:
          privileged: true
      hostNetwork: true
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        k8s-app: cilium
        kubernetes.io/cluster-service: "true"
      annotations:
        scheduler.alpha.kubernetes.io/tolerations: >-
          [{"key":"dedicated","operator":"Equal","value":"master","effect":"NoSchedule"}]
    spec:
      serviceAccountName: cilium
      containers:
      - image: cilium/cilium:stable
        imagePullPolicy: Always
        name: cilium-agent
        command: [ "cilium-agent" ]
        args:
          - "--debug"
          - "--k8s-api-server"
          - "127.0.0.1:8080"
          - "--kvstore"
          - "consul"
          - "--kvstore-opt"
          - "consul.address=http://127.0.0.1:8500"
          - "-d"
          - "eth0"
        lifecycle:
          postStart:
            exec:
              command:
                - "/cni-install.sh"
          preStop:
            exec:
              command:
                - "/cni-uninstall.sh"
        env:
          - name: "K8S_NODE_NAME"
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          - name: bpf-maps
            mountPath: /sys/fs/bpf
          - name: cilium-run
            mountPath: /var/run/cilium
          - name: cni-path
            mountPath: /host/opt/cni/bin
          - name: etc-cni-netd
            mountPath: /host/etc/cni/net.d
          - name: docker-socket
            mountPath: /var/run/docker.sock
            readOnly: true
        livenessProbe:
          exec:
            command:
            - cilium
            - status
          initialDelaySeconds: 10
          failureThreshold: 10
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - cilium
            - status
          initialDelaySeconds: 10
          periodSeconds: 15
        securityContext:
          capabilities:
            add:
              - "NET_ADMIN"
          privileged: true
      hostNetwork: true
      volumes:
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: etc-cni-netd
          hostPath:
              path: /etc/cni/net.d
