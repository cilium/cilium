// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.29.3
// source: envoy/extensions/rbac/principals/mtls_authenticated/v3/mtls_authenticated.proto

package mtls_authenticatedv3

import (
	_ "github.com/cncf/xds/go/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Authentication attributes for a downstream mTLS connection. All modes require that a peer certificate
// was presented and validated using the ValidationContext in the DownstreamTlsContext configuration.
//
// If neither field is set, a configuration loading error will be generated. This is so that
// not validating SANs requires an affirmative configuration to disable, to prevent accidentally
// not configuring SAN validation.
//
// If “any_validated_client_certificate“ is set in addition to “san_matcher“ or a future field
// which specifies additional validation, the other field always takes precedence over
// “any_validated_client_certificate“ and all specified validation is performed.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies a SAN that must be present in the validated peer certificate.
	SanMatcher *v3.SubjectAltNameMatcher `protobuf:"bytes,1,opt,name=san_matcher,json=sanMatcher,proto3" json:"san_matcher,omitempty"`
	// Only require that the peer certificate is present and valid.
	AnyValidatedClientCertificate bool `protobuf:"varint,2,opt,name=any_validated_client_certificate,json=anyValidatedClientCertificate,proto3" json:"any_validated_client_certificate,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetSanMatcher() *v3.SubjectAltNameMatcher {
	if x != nil {
		return x.SanMatcher
	}
	return nil
}

func (x *Config) GetAnyValidatedClientCertificate() bool {
	if x != nil {
		return x.AnyValidatedClientCertificate
	}
	return false
}

var File_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto protoreflect.FileDescriptor

var file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDesc = []byte{
	0x0a, 0x4f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x73, 0x2f, 0x6d, 0x74, 0x6c, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x76, 0x33, 0x2f, 0x6d, 0x74, 0x6c, 0x73, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x36, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x73, 0x2e, 0x6d, 0x74, 0x6c, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x33, 0x1a, 0x36, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x74, 0x6c,
	0x73, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb4, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x61, 0x0a, 0x0b, 0x73,
	0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x74, 0x6c, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x0a, 0x73, 0x61, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x47,
	0x0a, 0x20, 0x61, 0x6e, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x61, 0x6e, 0x79, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x42, 0xdc, 0x01, 0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02,
	0x10, 0x02, 0x0a, 0x44, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x73, 0x2e, 0x6d, 0x74, 0x6c, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x76, 0x33, 0x42, 0x16, 0x4d, 0x74, 0x6c, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x72, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x62, 0x61, 0x63,
	0x2f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x73, 0x2f, 0x6d, 0x74, 0x6c, 0x73,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x76,
	0x33, 0x3b, 0x6d, 0x74, 0x6c, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescOnce sync.Once
	file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescData = file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDesc
)

func file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescGZIP() []byte {
	file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescData = protoimpl.X.CompressGZIP(file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescData)
	})
	return file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDescData
}

var file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_goTypes = []interface{}{
	(*Config)(nil),                   // 0: envoy.extensions.rbac.principals.mtls_authenticated.v3.Config
	(*v3.SubjectAltNameMatcher)(nil), // 1: envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher
}
var file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.rbac.principals.mtls_authenticated.v3.Config.san_matcher:type_name -> envoy.extensions.transport_sockets.tls.v3.SubjectAltNameMatcher
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() {
	file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_init()
}
func file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_init() {
	if File_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_msgTypes,
	}.Build()
	File_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto = out.File
	file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_rawDesc = nil
	file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_goTypes = nil
	file_envoy_extensions_rbac_principals_mtls_authenticated_v3_mtls_authenticated_proto_depIdxs = nil
}
