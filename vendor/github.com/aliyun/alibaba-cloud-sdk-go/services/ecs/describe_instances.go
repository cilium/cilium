package ecs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeInstances invokes the ecs.DescribeInstances API synchronously
func (client *Client) DescribeInstances(request *DescribeInstancesRequest) (response *DescribeInstancesResponse, err error) {
	response = CreateDescribeInstancesResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeInstancesWithChan invokes the ecs.DescribeInstances API asynchronously
func (client *Client) DescribeInstancesWithChan(request *DescribeInstancesRequest) (<-chan *DescribeInstancesResponse, <-chan error) {
	responseChan := make(chan *DescribeInstancesResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeInstances(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeInstancesWithCallback invokes the ecs.DescribeInstances API asynchronously
func (client *Client) DescribeInstancesWithCallback(request *DescribeInstancesRequest, callback func(response *DescribeInstancesResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeInstancesResponse
		var err error
		defer close(result)
		response, err = client.DescribeInstances(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeInstancesRequest is the request struct for api DescribeInstances
type DescribeInstancesRequest struct {
	*requests.RpcRequest
	InnerIpAddresses        string                  `position:"Query" name:"InnerIpAddresses"`
	ResourceOwnerId         requests.Integer        `position:"Query" name:"ResourceOwnerId"`
	PrivateIpAddresses      string                  `position:"Query" name:"PrivateIpAddresses"`
	HpcClusterId            string                  `position:"Query" name:"HpcClusterId"`
	HttpPutResponseHopLimit requests.Integer        `position:"Query" name:"HttpPutResponseHopLimit"`
	Filter2Value            string                  `position:"Query" name:"Filter.2.Value"`
	KeyPairName             string                  `position:"Query" name:"KeyPairName"`
	ResourceGroupId         string                  `position:"Query" name:"ResourceGroupId"`
	LockReason              string                  `position:"Query" name:"LockReason"`
	Filter1Key              string                  `position:"Query" name:"Filter.1.Key"`
	DeviceAvailable         requests.Boolean        `position:"Query" name:"DeviceAvailable"`
	Tag                     *[]DescribeInstancesTag `position:"Query" name:"Tag"  type:"Repeated"`
	Filter3Value            string                  `position:"Query" name:"Filter.3.Value"`
	DryRun                  requests.Boolean        `position:"Query" name:"DryRun"`
	Filter1Value            string                  `position:"Query" name:"Filter.1.Value"`
	NeedSaleCycle           requests.Boolean        `position:"Query" name:"NeedSaleCycle"`
	OwnerId                 requests.Integer        `position:"Query" name:"OwnerId"`
	VSwitchId               string                  `position:"Query" name:"VSwitchId"`
	AdditionalAttributes    *[]string               `position:"Query" name:"AdditionalAttributes"  type:"Repeated"`
	InstanceName            string                  `position:"Query" name:"InstanceName"`
	InstanceIds             string                  `position:"Query" name:"InstanceIds"`
	InternetChargeType      string                  `position:"Query" name:"InternetChargeType"`
	ZoneId                  string                  `position:"Query" name:"ZoneId"`
	MaxResults              requests.Integer        `position:"Query" name:"MaxResults"`
	Ipv6Address             *[]string               `position:"Query" name:"Ipv6Address"  type:"Repeated"`
	InstanceNetworkType     string                  `position:"Query" name:"InstanceNetworkType"`
	Status                  string                  `position:"Query" name:"Status"`
	ImageId                 string                  `position:"Query" name:"ImageId"`
	Filter4Value            string                  `position:"Query" name:"Filter.4.Value"`
	IoOptimized             requests.Boolean        `position:"Query" name:"IoOptimized"`
	SecurityGroupId         string                  `position:"Query" name:"SecurityGroupId"`
	Filter4Key              string                  `position:"Query" name:"Filter.4.Key"`
	PageNumber              requests.Integer        `position:"Query" name:"PageNumber"`
	NextToken               string                  `position:"Query" name:"NextToken"`
	RdmaIpAddresses         string                  `position:"Query" name:"RdmaIpAddresses"`
	HttpEndpoint            string                  `position:"Query" name:"HttpEndpoint"`
	PageSize                requests.Integer        `position:"Query" name:"PageSize"`
	PublicIpAddresses       string                  `position:"Query" name:"PublicIpAddresses"`
	InstanceType            string                  `position:"Query" name:"InstanceType"`
	InstanceChargeType      string                  `position:"Query" name:"InstanceChargeType"`
	ResourceOwnerAccount    string                  `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount            string                  `position:"Query" name:"OwnerAccount"`
	InstanceTypeFamily      string                  `position:"Query" name:"InstanceTypeFamily"`
	Filter2Key              string                  `position:"Query" name:"Filter.2.Key"`
	EipAddresses            string                  `position:"Query" name:"EipAddresses"`
	VpcId                   string                  `position:"Query" name:"VpcId"`
	HttpTokens              string                  `position:"Query" name:"HttpTokens"`
	Filter3Key              string                  `position:"Query" name:"Filter.3.Key"`
}

// DescribeInstancesTag is a repeated param struct in DescribeInstancesRequest
type DescribeInstancesTag struct {
	Value string `name:"value"`
	Key   string `name:"Key"`
}

// DescribeInstancesResponse is the response struct for api DescribeInstances
type DescribeInstancesResponse struct {
	*responses.BaseResponse
	NextToken  string                       `json:"NextToken" xml:"NextToken"`
	PageSize   int                          `json:"PageSize" xml:"PageSize"`
	PageNumber int                          `json:"PageNumber" xml:"PageNumber"`
	RequestId  string                       `json:"RequestId" xml:"RequestId"`
	TotalCount int                          `json:"TotalCount" xml:"TotalCount"`
	Instances  InstancesInDescribeInstances `json:"Instances" xml:"Instances"`
}

// CreateDescribeInstancesRequest creates a request to invoke DescribeInstances API
func CreateDescribeInstancesRequest() (request *DescribeInstancesRequest) {
	request = &DescribeInstancesRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Ecs", "2014-05-26", "DescribeInstances", "ecs", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDescribeInstancesResponse creates a response to parse from DescribeInstances response
func CreateDescribeInstancesResponse() (response *DescribeInstancesResponse) {
	response = &DescribeInstancesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
