dist: trusty
sudo: required
# setup travis so that we can run containers for integration tests
services:
  - docker

language: go

go:
  - "1.10.x"

go_import_path: github.com/containerd/containerd

addons:
  apt:
    packages:
      - btrfs-tools
      - libnl-3-dev
      - libnet-dev
      - protobuf-c-compiler
      # - protobuf-compiler
      - python-minimal
      - libcap-dev
      - libaio-dev
      - libprotobuf-c0-dev
      - libprotobuf-dev
      - socat

env:
  - TRAVIS_GOOS=linux TRAVIS_CGO_ENABLED=1
  - TRAVIS_GOOS=darwin TRAVIS_CGO_ENABLED=0

before_install:
  - uname -r
  - sudo apt-get -q update
  - sudo apt-get install -y libseccomp-dev/trusty-backports

install:
  - sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-protobuf
  - sudo chmod +x /usr/local/bin/protoc
  - sudo chmod og+rx /usr/local/include/google /usr/local/include/google/protobuf /usr/local/include/google/protobuf/compiler
  - sudo chmod -R og+r /usr/local/include/google/protobuf/
  - protoc --version
  - go get -u github.com/vbatts/git-validation
  - go get -u github.com/kunalkushwaha/ltag
  - sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-runc
  - sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-cni
  - sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-critools
  - wget https://github.com/xemul/criu/archive/v3.0.tar.gz -O /tmp/criu.tar.gz
  - tar -C /tmp/ -zxf /tmp/criu.tar.gz
  - cd /tmp/criu-3.0 && sudo make install-criu
  - cd $TRAVIS_BUILD_DIR

script:
  - export GOOS=$TRAVIS_GOOS
  - export CGO_ENABLED=$TRAVIS_CGO_ENABLED
  - DCO_VERBOSITY=-q script/validate/dco
  - script/validate/fileheader
  - GOOS=linux script/setup/install-dev-tools
  - script/validate/vendor
  - go build -i .
  - make check
  - if [[ "$GOOS" = "linux" && "$TRAVIS_GO_VERSION" != "1.9"* ]]; then make check-protos check-api-descriptors; fi
  - make build
  - make binaries
  - if [ "$GOOS" = "linux" ]; then sudo make install ; fi
  - if [ "$GOOS" = "linux" ]; then make coverage ; fi
  - if [ "$GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH make root-coverage ; fi
  - if [ "$GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH make integration ; fi
  # Run the integration suite a second time. See discussion in github.com/containerd/containerd/pull/1759
  - if [ "$GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH TESTFLAGS_PARALLEL=1 make integration ; fi
  - if [ "$GOOS" = "linux" ]; then
      sudo PATH=$PATH containerd -log-level debug &> /tmp/containerd-cri.log &
      sudo ctr version ;
      sudo PATH=$PATH GOPATH=$GOPATH critest --runtime-endpoint=/var/run/containerd/containerd.sock --parallel=8 ;
      test $? -ne 0 && cat /tmp/containerd-cri.log ;
      sudo pkill containerd ;
    fi

after_success:
  - bash <(curl -s https://codecov.io/bash) -F linux

before_deploy:
  - make release

deploy:
  provider: releases
  api_key:
    secure: HO+WSIVVUMMsbU74x+YyFsTP3ahqnR4xjwKAziedJ5lZXKJszQBhiYTFmcTeVBoouNjTISd07GQzpoLChuGC20U3+1NbT+CkK8xWR/x1ao2D3JY3Ds6AD9ubWRNWRLptt/xOn5Vq3F8xZyUYchwvDMl4zKCuTKxQGVdHKsINb2DehKcP5cVL6MMvqzEdfj2g99vqXAqs8uuo6dOmvxmHV43bfzDaAJSabjZZs6TKlWTqCQMet8uxyx2Dmjl2lxLwdqv12oJdrszacasn41NYuEyHI2bXyef1mhWGYN4n9bU/Y5winctZ8DOSOZvYg/2ziAaUN0+CTn1IESwVesrPz23P2Sy7wdLxu8dSIZ2yUHl7OsA5T5a5rDchAGguRVNBWvoGtuepEhdRacxTQUo1cMFZsEXjgRKKjdfc1emYQPVdN8mBv8GJwndty473ZXdvFt5R0kNVFtvWuYCa6UYJD2cKrsPSAfbZCDC/LiR3FOoTaUPMZUVkR2ACEO7Dn4+KlmBajqT40Osk/A7k1XA/TzVhMIpLtE0Vk2DfPmGsjCv8bC+MFd+R2Sc8SFdE92oEWRdoPQY5SxMYQtGxA+cbKVlT1kSw6y80yEbx5JZsBnT6+NTHwmDO3kVU9ztLdawOozTElKNAK8HoAyFmzIZ3wL64oThuDrv/TUuY8Iyn814=
  file_glob: true
  file: releases/*.tar.gz
  skip_cleanup: true
  on:
    repo: containerd/containerd
    tags: true
