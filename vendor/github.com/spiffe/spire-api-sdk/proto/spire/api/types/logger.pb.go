// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.30.2
// source: spire/api/types/logger.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The logger log levels.
type LogLevel int32

const (
	LogLevel_UNSPECIFIED LogLevel = 0
	LogLevel_PANIC       LogLevel = 1
	LogLevel_FATAL       LogLevel = 2
	LogLevel_ERROR       LogLevel = 3
	LogLevel_WARN        LogLevel = 4
	LogLevel_INFO        LogLevel = 5
	LogLevel_DEBUG       LogLevel = 6
	LogLevel_TRACE       LogLevel = 7
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PANIC",
		2: "FATAL",
		3: "ERROR",
		4: "WARN",
		5: "INFO",
		6: "DEBUG",
		7: "TRACE",
	}
	LogLevel_value = map[string]int32{
		"UNSPECIFIED": 0,
		"PANIC":       1,
		"FATAL":       2,
		"ERROR":       3,
		"WARN":        4,
		"INFO":        5,
		"DEBUG":       6,
		"TRACE":       7,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_spire_api_types_logger_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_spire_api_types_logger_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_spire_api_types_logger_proto_rawDescGZIP(), []int{0}
}

// Represents the current Logger settings.
type Logger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The logger's current log level.
	CurrentLevel LogLevel `protobuf:"varint,1,opt,name=current_level,json=currentLevel,proto3,enum=spire.api.types.LogLevel" json:"current_level,omitempty"`
	// Output only. The logger's log level at process launch.
	LaunchLevel   LogLevel `protobuf:"varint,2,opt,name=launch_level,json=launchLevel,proto3,enum=spire.api.types.LogLevel" json:"launch_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logger) Reset() {
	*x = Logger{}
	mi := &file_spire_api_types_logger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger) ProtoMessage() {}

func (x *Logger) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_types_logger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger.ProtoReflect.Descriptor instead.
func (*Logger) Descriptor() ([]byte, []int) {
	return file_spire_api_types_logger_proto_rawDescGZIP(), []int{0}
}

func (x *Logger) GetCurrentLevel() LogLevel {
	if x != nil {
		return x.CurrentLevel
	}
	return LogLevel_UNSPECIFIED
}

func (x *Logger) GetLaunchLevel() LogLevel {
	if x != nil {
		return x.LaunchLevel
	}
	return LogLevel_UNSPECIFIED
}

var File_spire_api_types_logger_proto protoreflect.FileDescriptor

const file_spire_api_types_logger_proto_rawDesc = "" +
	"\n" +
	"\x1cspire/api/types/logger.proto\x12\x0fspire.api.types\"\x86\x01\n" +
	"\x06Logger\x12>\n" +
	"\rcurrent_level\x18\x01 \x01(\x0e2\x19.spire.api.types.LogLevelR\fcurrentLevel\x12<\n" +
	"\flaunch_level\x18\x02 \x01(\x0e2\x19.spire.api.types.LogLevelR\vlaunchLevel*f\n" +
	"\bLogLevel\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\t\n" +
	"\x05PANIC\x10\x01\x12\t\n" +
	"\x05FATAL\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\b\n" +
	"\x04WARN\x10\x04\x12\b\n" +
	"\x04INFO\x10\x05\x12\t\n" +
	"\x05DEBUG\x10\x06\x12\t\n" +
	"\x05TRACE\x10\aB7Z5github.com/spiffe/spire-api-sdk/proto/spire/api/typesb\x06proto3"

var (
	file_spire_api_types_logger_proto_rawDescOnce sync.Once
	file_spire_api_types_logger_proto_rawDescData []byte
)

func file_spire_api_types_logger_proto_rawDescGZIP() []byte {
	file_spire_api_types_logger_proto_rawDescOnce.Do(func() {
		file_spire_api_types_logger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_api_types_logger_proto_rawDesc), len(file_spire_api_types_logger_proto_rawDesc)))
	})
	return file_spire_api_types_logger_proto_rawDescData
}

var file_spire_api_types_logger_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spire_api_types_logger_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_spire_api_types_logger_proto_goTypes = []any{
	(LogLevel)(0),  // 0: spire.api.types.LogLevel
	(*Logger)(nil), // 1: spire.api.types.Logger
}
var file_spire_api_types_logger_proto_depIdxs = []int32{
	0, // 0: spire.api.types.Logger.current_level:type_name -> spire.api.types.LogLevel
	0, // 1: spire.api.types.Logger.launch_level:type_name -> spire.api.types.LogLevel
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_spire_api_types_logger_proto_init() }
func file_spire_api_types_logger_proto_init() {
	if File_spire_api_types_logger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_api_types_logger_proto_rawDesc), len(file_spire_api_types_logger_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spire_api_types_logger_proto_goTypes,
		DependencyIndexes: file_spire_api_types_logger_proto_depIdxs,
		EnumInfos:         file_spire_api_types_logger_proto_enumTypes,
		MessageInfos:      file_spire_api_types_logger_proto_msgTypes,
	}.Build()
	File_spire_api_types_logger_proto = out.File
	file_spire_api_types_logger_proto_goTypes = nil
	file_spire_api_types_logger_proto_depIdxs = nil
}
