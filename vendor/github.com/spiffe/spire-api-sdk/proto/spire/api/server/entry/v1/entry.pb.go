// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.30.2
// source: spire/api/server/entry/v1/entry.proto

package entryv1

import (
	types "github.com/spiffe/spire-api-sdk/proto/spire/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountEntriesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filters the entries returned in the response.
	Filter        *CountEntriesRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountEntriesRequest) Reset() {
	*x = CountEntriesRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountEntriesRequest) ProtoMessage() {}

func (x *CountEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountEntriesRequest.ProtoReflect.Descriptor instead.
func (*CountEntriesRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{0}
}

func (x *CountEntriesRequest) GetFilter() *CountEntriesRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type CountEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountEntriesResponse) Reset() {
	*x = CountEntriesResponse{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountEntriesResponse) ProtoMessage() {}

func (x *CountEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountEntriesResponse.ProtoReflect.Descriptor instead.
func (*CountEntriesResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{1}
}

func (x *CountEntriesResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ListEntriesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filters the entries returned in the response.
	Filter *ListEntriesRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	// The maximum number of results to return. The server may further
	// constrain this value, or if zero, choose its own.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous request, if any.
	PageToken     string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntriesRequest) Reset() {
	*x = ListEntriesRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntriesRequest) ProtoMessage() {}

func (x *ListEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListEntriesRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{2}
}

func (x *ListEntriesRequest) GetFilter() *ListEntriesRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListEntriesRequest) GetOutputMask() *types.EntryMask {
	if x != nil {
		return x.OutputMask
	}
	return nil
}

func (x *ListEntriesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEntriesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListEntriesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of entries.
	Entries []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// The page token for the next request. Empty if there are no more results.
	// This field should be checked by clients even when a page_size was not
	// requested, since the server may choose its own (see page_size).
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntriesResponse) Reset() {
	*x = ListEntriesResponse{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntriesResponse) ProtoMessage() {}

func (x *ListEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntriesResponse.ProtoReflect.Descriptor instead.
func (*ListEntriesResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{3}
}

func (x *ListEntriesResponse) GetEntries() []*types.Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ListEntriesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetEntryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the entry to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask    *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEntryRequest) Reset() {
	*x = GetEntryRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntryRequest) ProtoMessage() {}

func (x *GetEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntryRequest.ProtoReflect.Descriptor instead.
func (*GetEntryRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{4}
}

func (x *GetEntryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetEntryRequest) GetOutputMask() *types.EntryMask {
	if x != nil {
		return x.OutputMask
	}
	return nil
}

type BatchCreateEntryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The entries to be created. If no entry ID is provided, one will be
	// generated.
	Entries []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// An output mask indicating the entry fields set in the response.
	OutputMask    *types.EntryMask `protobuf:"bytes,2,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateEntryRequest) Reset() {
	*x = BatchCreateEntryRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateEntryRequest) ProtoMessage() {}

func (x *BatchCreateEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateEntryRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateEntryRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{5}
}

func (x *BatchCreateEntryRequest) GetEntries() []*types.Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *BatchCreateEntryRequest) GetOutputMask() *types.EntryMask {
	if x != nil {
		return x.OutputMask
	}
	return nil
}

type BatchCreateEntryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result for each entry in the request (order is maintained).
	Results       []*BatchCreateEntryResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateEntryResponse) Reset() {
	*x = BatchCreateEntryResponse{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateEntryResponse) ProtoMessage() {}

func (x *BatchCreateEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateEntryResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateEntryResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{6}
}

func (x *BatchCreateEntryResponse) GetResults() []*BatchCreateEntryResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type BatchUpdateEntryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The entries to be updated.
	Entries []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// An input mask indicating what entry fields should be updated.
	InputMask *types.EntryMask `protobuf:"bytes,2,opt,name=input_mask,json=inputMask,proto3" json:"input_mask,omitempty"`
	// An output mask indicating what entry fields are set in the response.
	OutputMask    *types.EntryMask `protobuf:"bytes,3,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateEntryRequest) Reset() {
	*x = BatchUpdateEntryRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateEntryRequest) ProtoMessage() {}

func (x *BatchUpdateEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateEntryRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateEntryRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{7}
}

func (x *BatchUpdateEntryRequest) GetEntries() []*types.Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *BatchUpdateEntryRequest) GetInputMask() *types.EntryMask {
	if x != nil {
		return x.InputMask
	}
	return nil
}

func (x *BatchUpdateEntryRequest) GetOutputMask() *types.EntryMask {
	if x != nil {
		return x.OutputMask
	}
	return nil
}

type BatchUpdateEntryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result for each entry in the request (order is maintained).
	Results       []*BatchUpdateEntryResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateEntryResponse) Reset() {
	*x = BatchUpdateEntryResponse{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateEntryResponse) ProtoMessage() {}

func (x *BatchUpdateEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateEntryResponse.ProtoReflect.Descriptor instead.
func (*BatchUpdateEntryResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{8}
}

func (x *BatchUpdateEntryResponse) GetResults() []*BatchUpdateEntryResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type BatchDeleteEntryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// IDs of the entries to delete.
	Ids           []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteEntryRequest) Reset() {
	*x = BatchDeleteEntryRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteEntryRequest) ProtoMessage() {}

func (x *BatchDeleteEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteEntryRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteEntryRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{9}
}

func (x *BatchDeleteEntryRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BatchDeleteEntryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result for each entry ID in the request (order is maintained).
	Results       []*BatchDeleteEntryResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteEntryResponse) Reset() {
	*x = BatchDeleteEntryResponse{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteEntryResponse) ProtoMessage() {}

func (x *BatchDeleteEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteEntryResponse.ProtoReflect.Descriptor instead.
func (*BatchDeleteEntryResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{10}
}

func (x *BatchDeleteEntryResponse) GetResults() []*BatchDeleteEntryResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetAuthorizedEntriesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An output mask indicating which fields are set in the response.
	OutputMask    *types.EntryMask `protobuf:"bytes,1,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthorizedEntriesRequest) Reset() {
	*x = GetAuthorizedEntriesRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthorizedEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizedEntriesRequest) ProtoMessage() {}

func (x *GetAuthorizedEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizedEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetAuthorizedEntriesRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{11}
}

func (x *GetAuthorizedEntriesRequest) GetOutputMask() *types.EntryMask {
	if x != nil {
		return x.OutputMask
	}
	return nil
}

type GetAuthorizedEntriesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The authorized entries.
	Entries       []*types.Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthorizedEntriesResponse) Reset() {
	*x = GetAuthorizedEntriesResponse{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthorizedEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthorizedEntriesResponse) ProtoMessage() {}

func (x *GetAuthorizedEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthorizedEntriesResponse.ProtoReflect.Descriptor instead.
func (*GetAuthorizedEntriesResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{12}
}

func (x *GetAuthorizedEntriesResponse) GetEntries() []*types.Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SyncAuthorizedEntriesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An output mask indicating which fields are set in the response.
	OutputMask *types.EntryMask `protobuf:"bytes,1,opt,name=output_mask,json=outputMask,proto3" json:"output_mask,omitempty"`
	// IDs of the entries to fetch in full. Sent by the client in response to
	// a sparse entry.
	Ids           []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAuthorizedEntriesRequest) Reset() {
	*x = SyncAuthorizedEntriesRequest{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAuthorizedEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAuthorizedEntriesRequest) ProtoMessage() {}

func (x *SyncAuthorizedEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAuthorizedEntriesRequest.ProtoReflect.Descriptor instead.
func (*SyncAuthorizedEntriesRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{13}
}

func (x *SyncAuthorizedEntriesRequest) GetOutputMask() *types.EntryMask {
	if x != nil {
		return x.OutputMask
	}
	return nil
}

func (x *SyncAuthorizedEntriesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SyncAuthorizedEntriesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The revisions of the authorized entries. This field is set when the
	// authorized entry list meets or exceeds the server-determined page size.
	// Callers use it to determine which entries are new/updated that they then
	// request on the stream.
	// See SyncAuthorizedEntries for details.
	EntryRevisions []*EntryRevision `protobuf:"bytes,1,rep,name=entry_revisions,json=entryRevisions,proto3" json:"entry_revisions,omitempty"`
	// The authorized entries. This field is set either 1) on the initial
	// response if the number of authorized entries is less than the page size
	// or 2) in response to the caller requesting the entries after determining
	// they need to details based on entry revisions provided in a previous
	// response.
	// See SyncAuthorizedEntries for details.
	Entries []*types.Entry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	// Whether there are more entries to sync down in this response phase.
	More          bool `protobuf:"varint,3,opt,name=more,proto3" json:"more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAuthorizedEntriesResponse) Reset() {
	*x = SyncAuthorizedEntriesResponse{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAuthorizedEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAuthorizedEntriesResponse) ProtoMessage() {}

func (x *SyncAuthorizedEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAuthorizedEntriesResponse.ProtoReflect.Descriptor instead.
func (*SyncAuthorizedEntriesResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{14}
}

func (x *SyncAuthorizedEntriesResponse) GetEntryRevisions() []*EntryRevision {
	if x != nil {
		return x.EntryRevisions
	}
	return nil
}

func (x *SyncAuthorizedEntriesResponse) GetEntries() []*types.Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *SyncAuthorizedEntriesResponse) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

type EntryRevision struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The entry ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The entry revision number.
	RevisionNumber int64 `protobuf:"varint,2,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"`
	// When the entry was created (seconds since Unix epoch).
	CreatedAt     int64 `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntryRevision) Reset() {
	*x = EntryRevision{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntryRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryRevision) ProtoMessage() {}

func (x *EntryRevision) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryRevision.ProtoReflect.Descriptor instead.
func (*EntryRevision) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{15}
}

func (x *EntryRevision) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntryRevision) GetRevisionNumber() int64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *EntryRevision) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type CountEntriesRequest_Filter struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	BySpiffeId      *types.SPIFFEID           `protobuf:"bytes,1,opt,name=by_spiffe_id,json=bySpiffeId,proto3" json:"by_spiffe_id,omitempty"`
	ByParentId      *types.SPIFFEID           `protobuf:"bytes,2,opt,name=by_parent_id,json=byParentId,proto3" json:"by_parent_id,omitempty"`
	BySelectors     *types.SelectorMatch      `protobuf:"bytes,3,opt,name=by_selectors,json=bySelectors,proto3" json:"by_selectors,omitempty"`
	ByFederatesWith *types.FederatesWithMatch `protobuf:"bytes,4,opt,name=by_federates_with,json=byFederatesWith,proto3" json:"by_federates_with,omitempty"`
	ByHint          *wrapperspb.StringValue   `protobuf:"bytes,5,opt,name=by_hint,json=byHint,proto3" json:"by_hint,omitempty"`
	ByDownstream    *wrapperspb.BoolValue     `protobuf:"bytes,6,opt,name=by_downstream,json=byDownstream,proto3" json:"by_downstream,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CountEntriesRequest_Filter) Reset() {
	*x = CountEntriesRequest_Filter{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountEntriesRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountEntriesRequest_Filter) ProtoMessage() {}

func (x *CountEntriesRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountEntriesRequest_Filter.ProtoReflect.Descriptor instead.
func (*CountEntriesRequest_Filter) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CountEntriesRequest_Filter) GetBySpiffeId() *types.SPIFFEID {
	if x != nil {
		return x.BySpiffeId
	}
	return nil
}

func (x *CountEntriesRequest_Filter) GetByParentId() *types.SPIFFEID {
	if x != nil {
		return x.ByParentId
	}
	return nil
}

func (x *CountEntriesRequest_Filter) GetBySelectors() *types.SelectorMatch {
	if x != nil {
		return x.BySelectors
	}
	return nil
}

func (x *CountEntriesRequest_Filter) GetByFederatesWith() *types.FederatesWithMatch {
	if x != nil {
		return x.ByFederatesWith
	}
	return nil
}

func (x *CountEntriesRequest_Filter) GetByHint() *wrapperspb.StringValue {
	if x != nil {
		return x.ByHint
	}
	return nil
}

func (x *CountEntriesRequest_Filter) GetByDownstream() *wrapperspb.BoolValue {
	if x != nil {
		return x.ByDownstream
	}
	return nil
}

type ListEntriesRequest_Filter struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	BySpiffeId      *types.SPIFFEID           `protobuf:"bytes,1,opt,name=by_spiffe_id,json=bySpiffeId,proto3" json:"by_spiffe_id,omitempty"`
	ByParentId      *types.SPIFFEID           `protobuf:"bytes,2,opt,name=by_parent_id,json=byParentId,proto3" json:"by_parent_id,omitempty"`
	BySelectors     *types.SelectorMatch      `protobuf:"bytes,3,opt,name=by_selectors,json=bySelectors,proto3" json:"by_selectors,omitempty"`
	ByFederatesWith *types.FederatesWithMatch `protobuf:"bytes,4,opt,name=by_federates_with,json=byFederatesWith,proto3" json:"by_federates_with,omitempty"`
	ByHint          *wrapperspb.StringValue   `protobuf:"bytes,5,opt,name=by_hint,json=byHint,proto3" json:"by_hint,omitempty"`
	ByDownstream    *wrapperspb.BoolValue     `protobuf:"bytes,6,opt,name=by_downstream,json=byDownstream,proto3" json:"by_downstream,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListEntriesRequest_Filter) Reset() {
	*x = ListEntriesRequest_Filter{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntriesRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntriesRequest_Filter) ProtoMessage() {}

func (x *ListEntriesRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntriesRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListEntriesRequest_Filter) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListEntriesRequest_Filter) GetBySpiffeId() *types.SPIFFEID {
	if x != nil {
		return x.BySpiffeId
	}
	return nil
}

func (x *ListEntriesRequest_Filter) GetByParentId() *types.SPIFFEID {
	if x != nil {
		return x.ByParentId
	}
	return nil
}

func (x *ListEntriesRequest_Filter) GetBySelectors() *types.SelectorMatch {
	if x != nil {
		return x.BySelectors
	}
	return nil
}

func (x *ListEntriesRequest_Filter) GetByFederatesWith() *types.FederatesWithMatch {
	if x != nil {
		return x.ByFederatesWith
	}
	return nil
}

func (x *ListEntriesRequest_Filter) GetByHint() *wrapperspb.StringValue {
	if x != nil {
		return x.ByHint
	}
	return nil
}

func (x *ListEntriesRequest_Filter) GetByDownstream() *wrapperspb.BoolValue {
	if x != nil {
		return x.ByDownstream
	}
	return nil
}

type BatchCreateEntryResponse_Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The status of creating the entry. If status code will be
	// ALREADY_EXISTS if a similar entry already exists. An entry is
	// similar if it has the same spiffe_id, parent_id, and selectors.
	Status *types.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The entry that was created (.e.g status code is OK) or that already
	// exists (i.e. status code is ALREADY_EXISTS).
	//
	// If the status code is any other value, this field will not be set.
	Entry         *types.Entry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateEntryResponse_Result) Reset() {
	*x = BatchCreateEntryResponse_Result{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateEntryResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateEntryResponse_Result) ProtoMessage() {}

func (x *BatchCreateEntryResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateEntryResponse_Result.ProtoReflect.Descriptor instead.
func (*BatchCreateEntryResponse_Result) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{6, 0}
}

func (x *BatchCreateEntryResponse_Result) GetStatus() *types.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BatchCreateEntryResponse_Result) GetEntry() *types.Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type BatchUpdateEntryResponse_Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The status of creating the entry.
	Status *types.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The entry that was updated. If the status is OK, it will be the
	// entry that was updated. If the status is any other value, this field
	// will not be set.
	Entry         *types.Entry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateEntryResponse_Result) Reset() {
	*x = BatchUpdateEntryResponse_Result{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateEntryResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateEntryResponse_Result) ProtoMessage() {}

func (x *BatchUpdateEntryResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateEntryResponse_Result.ProtoReflect.Descriptor instead.
func (*BatchUpdateEntryResponse_Result) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{8, 0}
}

func (x *BatchUpdateEntryResponse_Result) GetStatus() *types.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BatchUpdateEntryResponse_Result) GetEntry() *types.Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type BatchDeleteEntryResponse_Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The status of creating the entry.
	Status *types.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The ID of the entry that was deleted.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteEntryResponse_Result) Reset() {
	*x = BatchDeleteEntryResponse_Result{}
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteEntryResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteEntryResponse_Result) ProtoMessage() {}

func (x *BatchDeleteEntryResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_server_entry_v1_entry_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteEntryResponse_Result.ProtoReflect.Descriptor instead.
func (*BatchDeleteEntryResponse_Result) Descriptor() ([]byte, []int) {
	return file_spire_api_server_entry_v1_entry_proto_rawDescGZIP(), []int{10, 0}
}

func (x *BatchDeleteEntryResponse_Result) GetStatus() *types.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BatchDeleteEntryResponse_Result) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_spire_api_server_entry_v1_entry_proto protoreflect.FileDescriptor

const file_spire_api_server_entry_v1_entry_proto_rawDesc = "" +
	"\n" +
	"%spire/api/server/entry/v1/entry.proto\x12\x19spire.api.server.entry.v1\x1a\x1bspire/api/types/entry.proto\x1a#spire/api/types/federateswith.proto\x1a\x1espire/api/types/selector.proto\x1a\x1espire/api/types/spiffeid.proto\x1a\x1cspire/api/types/status.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xf5\x03\n" +
	"\x13CountEntriesRequest\x12M\n" +
	"\x06filter\x18\x01 \x01(\v25.spire.api.server.entry.v1.CountEntriesRequest.FilterR\x06filter\x1a\x8e\x03\n" +
	"\x06Filter\x12;\n" +
	"\fby_spiffe_id\x18\x01 \x01(\v2\x19.spire.api.types.SPIFFEIDR\n" +
	"bySpiffeId\x12;\n" +
	"\fby_parent_id\x18\x02 \x01(\v2\x19.spire.api.types.SPIFFEIDR\n" +
	"byParentId\x12A\n" +
	"\fby_selectors\x18\x03 \x01(\v2\x1e.spire.api.types.SelectorMatchR\vbySelectors\x12O\n" +
	"\x11by_federates_with\x18\x04 \x01(\v2#.spire.api.types.FederatesWithMatchR\x0fbyFederatesWith\x125\n" +
	"\aby_hint\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\x06byHint\x12?\n" +
	"\rby_downstream\x18\x06 \x01(\v2\x1a.google.protobuf.BoolValueR\fbyDownstream\",\n" +
	"\x14CountEntriesResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"\xec\x04\n" +
	"\x12ListEntriesRequest\x12L\n" +
	"\x06filter\x18\x01 \x01(\v24.spire.api.server.entry.v1.ListEntriesRequest.FilterR\x06filter\x12;\n" +
	"\voutput_mask\x18\x02 \x01(\v2\x1a.spire.api.types.EntryMaskR\n" +
	"outputMask\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x1a\x8e\x03\n" +
	"\x06Filter\x12;\n" +
	"\fby_spiffe_id\x18\x01 \x01(\v2\x19.spire.api.types.SPIFFEIDR\n" +
	"bySpiffeId\x12;\n" +
	"\fby_parent_id\x18\x02 \x01(\v2\x19.spire.api.types.SPIFFEIDR\n" +
	"byParentId\x12A\n" +
	"\fby_selectors\x18\x03 \x01(\v2\x1e.spire.api.types.SelectorMatchR\vbySelectors\x12O\n" +
	"\x11by_federates_with\x18\x04 \x01(\v2#.spire.api.types.FederatesWithMatchR\x0fbyFederatesWith\x125\n" +
	"\aby_hint\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\x06byHint\x12?\n" +
	"\rby_downstream\x18\x06 \x01(\v2\x1a.google.protobuf.BoolValueR\fbyDownstream\"o\n" +
	"\x13ListEntriesResponse\x120\n" +
	"\aentries\x18\x01 \x03(\v2\x16.spire.api.types.EntryR\aentries\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"^\n" +
	"\x0fGetEntryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12;\n" +
	"\voutput_mask\x18\x02 \x01(\v2\x1a.spire.api.types.EntryMaskR\n" +
	"outputMask\"\x88\x01\n" +
	"\x17BatchCreateEntryRequest\x120\n" +
	"\aentries\x18\x01 \x03(\v2\x16.spire.api.types.EntryR\aentries\x12;\n" +
	"\voutput_mask\x18\x02 \x01(\v2\x1a.spire.api.types.EntryMaskR\n" +
	"outputMask\"\xd9\x01\n" +
	"\x18BatchCreateEntryResponse\x12T\n" +
	"\aresults\x18\x01 \x03(\v2:.spire.api.server.entry.v1.BatchCreateEntryResponse.ResultR\aresults\x1ag\n" +
	"\x06Result\x12/\n" +
	"\x06status\x18\x01 \x01(\v2\x17.spire.api.types.StatusR\x06status\x12,\n" +
	"\x05entry\x18\x02 \x01(\v2\x16.spire.api.types.EntryR\x05entry\"\xc3\x01\n" +
	"\x17BatchUpdateEntryRequest\x120\n" +
	"\aentries\x18\x01 \x03(\v2\x16.spire.api.types.EntryR\aentries\x129\n" +
	"\n" +
	"input_mask\x18\x02 \x01(\v2\x1a.spire.api.types.EntryMaskR\tinputMask\x12;\n" +
	"\voutput_mask\x18\x03 \x01(\v2\x1a.spire.api.types.EntryMaskR\n" +
	"outputMask\"\xd9\x01\n" +
	"\x18BatchUpdateEntryResponse\x12T\n" +
	"\aresults\x18\x01 \x03(\v2:.spire.api.server.entry.v1.BatchUpdateEntryResponse.ResultR\aresults\x1ag\n" +
	"\x06Result\x12/\n" +
	"\x06status\x18\x01 \x01(\v2\x17.spire.api.types.StatusR\x06status\x12,\n" +
	"\x05entry\x18\x02 \x01(\v2\x16.spire.api.types.EntryR\x05entry\"+\n" +
	"\x17BatchDeleteEntryRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"\xbb\x01\n" +
	"\x18BatchDeleteEntryResponse\x12T\n" +
	"\aresults\x18\x01 \x03(\v2:.spire.api.server.entry.v1.BatchDeleteEntryResponse.ResultR\aresults\x1aI\n" +
	"\x06Result\x12/\n" +
	"\x06status\x18\x01 \x01(\v2\x17.spire.api.types.StatusR\x06status\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"Z\n" +
	"\x1bGetAuthorizedEntriesRequest\x12;\n" +
	"\voutput_mask\x18\x01 \x01(\v2\x1a.spire.api.types.EntryMaskR\n" +
	"outputMask\"P\n" +
	"\x1cGetAuthorizedEntriesResponse\x120\n" +
	"\aentries\x18\x01 \x03(\v2\x16.spire.api.types.EntryR\aentries\"m\n" +
	"\x1cSyncAuthorizedEntriesRequest\x12;\n" +
	"\voutput_mask\x18\x01 \x01(\v2\x1a.spire.api.types.EntryMaskR\n" +
	"outputMask\x12\x10\n" +
	"\x03ids\x18\x02 \x03(\tR\x03ids\"\xb8\x01\n" +
	"\x1dSyncAuthorizedEntriesResponse\x12Q\n" +
	"\x0fentry_revisions\x18\x01 \x03(\v2(.spire.api.server.entry.v1.EntryRevisionR\x0eentryRevisions\x120\n" +
	"\aentries\x18\x02 \x03(\v2\x16.spire.api.types.EntryR\aentries\x12\x12\n" +
	"\x04more\x18\x03 \x01(\bR\x04more\"g\n" +
	"\rEntryRevision\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0frevision_number\x18\x02 \x01(\x03R\x0erevisionNumber\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt2\xc8\a\n" +
	"\x05Entry\x12o\n" +
	"\fCountEntries\x12..spire.api.server.entry.v1.CountEntriesRequest\x1a/.spire.api.server.entry.v1.CountEntriesResponse\x12l\n" +
	"\vListEntries\x12-.spire.api.server.entry.v1.ListEntriesRequest\x1a..spire.api.server.entry.v1.ListEntriesResponse\x12N\n" +
	"\bGetEntry\x12*.spire.api.server.entry.v1.GetEntryRequest\x1a\x16.spire.api.types.Entry\x12{\n" +
	"\x10BatchCreateEntry\x122.spire.api.server.entry.v1.BatchCreateEntryRequest\x1a3.spire.api.server.entry.v1.BatchCreateEntryResponse\x12{\n" +
	"\x10BatchUpdateEntry\x122.spire.api.server.entry.v1.BatchUpdateEntryRequest\x1a3.spire.api.server.entry.v1.BatchUpdateEntryResponse\x12{\n" +
	"\x10BatchDeleteEntry\x122.spire.api.server.entry.v1.BatchDeleteEntryRequest\x1a3.spire.api.server.entry.v1.BatchDeleteEntryResponse\x12\x87\x01\n" +
	"\x14GetAuthorizedEntries\x126.spire.api.server.entry.v1.GetAuthorizedEntriesRequest\x1a7.spire.api.server.entry.v1.GetAuthorizedEntriesResponse\x12\x8e\x01\n" +
	"\x15SyncAuthorizedEntries\x127.spire.api.server.entry.v1.SyncAuthorizedEntriesRequest\x1a8.spire.api.server.entry.v1.SyncAuthorizedEntriesResponse(\x010\x01BIZGgithub.com/spiffe/spire-api-sdk/proto/spire/api/server/entry/v1;entryv1b\x06proto3"

var (
	file_spire_api_server_entry_v1_entry_proto_rawDescOnce sync.Once
	file_spire_api_server_entry_v1_entry_proto_rawDescData []byte
)

func file_spire_api_server_entry_v1_entry_proto_rawDescGZIP() []byte {
	file_spire_api_server_entry_v1_entry_proto_rawDescOnce.Do(func() {
		file_spire_api_server_entry_v1_entry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_api_server_entry_v1_entry_proto_rawDesc), len(file_spire_api_server_entry_v1_entry_proto_rawDesc)))
	})
	return file_spire_api_server_entry_v1_entry_proto_rawDescData
}

var file_spire_api_server_entry_v1_entry_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_spire_api_server_entry_v1_entry_proto_goTypes = []any{
	(*CountEntriesRequest)(nil),             // 0: spire.api.server.entry.v1.CountEntriesRequest
	(*CountEntriesResponse)(nil),            // 1: spire.api.server.entry.v1.CountEntriesResponse
	(*ListEntriesRequest)(nil),              // 2: spire.api.server.entry.v1.ListEntriesRequest
	(*ListEntriesResponse)(nil),             // 3: spire.api.server.entry.v1.ListEntriesResponse
	(*GetEntryRequest)(nil),                 // 4: spire.api.server.entry.v1.GetEntryRequest
	(*BatchCreateEntryRequest)(nil),         // 5: spire.api.server.entry.v1.BatchCreateEntryRequest
	(*BatchCreateEntryResponse)(nil),        // 6: spire.api.server.entry.v1.BatchCreateEntryResponse
	(*BatchUpdateEntryRequest)(nil),         // 7: spire.api.server.entry.v1.BatchUpdateEntryRequest
	(*BatchUpdateEntryResponse)(nil),        // 8: spire.api.server.entry.v1.BatchUpdateEntryResponse
	(*BatchDeleteEntryRequest)(nil),         // 9: spire.api.server.entry.v1.BatchDeleteEntryRequest
	(*BatchDeleteEntryResponse)(nil),        // 10: spire.api.server.entry.v1.BatchDeleteEntryResponse
	(*GetAuthorizedEntriesRequest)(nil),     // 11: spire.api.server.entry.v1.GetAuthorizedEntriesRequest
	(*GetAuthorizedEntriesResponse)(nil),    // 12: spire.api.server.entry.v1.GetAuthorizedEntriesResponse
	(*SyncAuthorizedEntriesRequest)(nil),    // 13: spire.api.server.entry.v1.SyncAuthorizedEntriesRequest
	(*SyncAuthorizedEntriesResponse)(nil),   // 14: spire.api.server.entry.v1.SyncAuthorizedEntriesResponse
	(*EntryRevision)(nil),                   // 15: spire.api.server.entry.v1.EntryRevision
	(*CountEntriesRequest_Filter)(nil),      // 16: spire.api.server.entry.v1.CountEntriesRequest.Filter
	(*ListEntriesRequest_Filter)(nil),       // 17: spire.api.server.entry.v1.ListEntriesRequest.Filter
	(*BatchCreateEntryResponse_Result)(nil), // 18: spire.api.server.entry.v1.BatchCreateEntryResponse.Result
	(*BatchUpdateEntryResponse_Result)(nil), // 19: spire.api.server.entry.v1.BatchUpdateEntryResponse.Result
	(*BatchDeleteEntryResponse_Result)(nil), // 20: spire.api.server.entry.v1.BatchDeleteEntryResponse.Result
	(*types.EntryMask)(nil),                 // 21: spire.api.types.EntryMask
	(*types.Entry)(nil),                     // 22: spire.api.types.Entry
	(*types.SPIFFEID)(nil),                  // 23: spire.api.types.SPIFFEID
	(*types.SelectorMatch)(nil),             // 24: spire.api.types.SelectorMatch
	(*types.FederatesWithMatch)(nil),        // 25: spire.api.types.FederatesWithMatch
	(*wrapperspb.StringValue)(nil),          // 26: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),            // 27: google.protobuf.BoolValue
	(*types.Status)(nil),                    // 28: spire.api.types.Status
}
var file_spire_api_server_entry_v1_entry_proto_depIdxs = []int32{
	16, // 0: spire.api.server.entry.v1.CountEntriesRequest.filter:type_name -> spire.api.server.entry.v1.CountEntriesRequest.Filter
	17, // 1: spire.api.server.entry.v1.ListEntriesRequest.filter:type_name -> spire.api.server.entry.v1.ListEntriesRequest.Filter
	21, // 2: spire.api.server.entry.v1.ListEntriesRequest.output_mask:type_name -> spire.api.types.EntryMask
	22, // 3: spire.api.server.entry.v1.ListEntriesResponse.entries:type_name -> spire.api.types.Entry
	21, // 4: spire.api.server.entry.v1.GetEntryRequest.output_mask:type_name -> spire.api.types.EntryMask
	22, // 5: spire.api.server.entry.v1.BatchCreateEntryRequest.entries:type_name -> spire.api.types.Entry
	21, // 6: spire.api.server.entry.v1.BatchCreateEntryRequest.output_mask:type_name -> spire.api.types.EntryMask
	18, // 7: spire.api.server.entry.v1.BatchCreateEntryResponse.results:type_name -> spire.api.server.entry.v1.BatchCreateEntryResponse.Result
	22, // 8: spire.api.server.entry.v1.BatchUpdateEntryRequest.entries:type_name -> spire.api.types.Entry
	21, // 9: spire.api.server.entry.v1.BatchUpdateEntryRequest.input_mask:type_name -> spire.api.types.EntryMask
	21, // 10: spire.api.server.entry.v1.BatchUpdateEntryRequest.output_mask:type_name -> spire.api.types.EntryMask
	19, // 11: spire.api.server.entry.v1.BatchUpdateEntryResponse.results:type_name -> spire.api.server.entry.v1.BatchUpdateEntryResponse.Result
	20, // 12: spire.api.server.entry.v1.BatchDeleteEntryResponse.results:type_name -> spire.api.server.entry.v1.BatchDeleteEntryResponse.Result
	21, // 13: spire.api.server.entry.v1.GetAuthorizedEntriesRequest.output_mask:type_name -> spire.api.types.EntryMask
	22, // 14: spire.api.server.entry.v1.GetAuthorizedEntriesResponse.entries:type_name -> spire.api.types.Entry
	21, // 15: spire.api.server.entry.v1.SyncAuthorizedEntriesRequest.output_mask:type_name -> spire.api.types.EntryMask
	15, // 16: spire.api.server.entry.v1.SyncAuthorizedEntriesResponse.entry_revisions:type_name -> spire.api.server.entry.v1.EntryRevision
	22, // 17: spire.api.server.entry.v1.SyncAuthorizedEntriesResponse.entries:type_name -> spire.api.types.Entry
	23, // 18: spire.api.server.entry.v1.CountEntriesRequest.Filter.by_spiffe_id:type_name -> spire.api.types.SPIFFEID
	23, // 19: spire.api.server.entry.v1.CountEntriesRequest.Filter.by_parent_id:type_name -> spire.api.types.SPIFFEID
	24, // 20: spire.api.server.entry.v1.CountEntriesRequest.Filter.by_selectors:type_name -> spire.api.types.SelectorMatch
	25, // 21: spire.api.server.entry.v1.CountEntriesRequest.Filter.by_federates_with:type_name -> spire.api.types.FederatesWithMatch
	26, // 22: spire.api.server.entry.v1.CountEntriesRequest.Filter.by_hint:type_name -> google.protobuf.StringValue
	27, // 23: spire.api.server.entry.v1.CountEntriesRequest.Filter.by_downstream:type_name -> google.protobuf.BoolValue
	23, // 24: spire.api.server.entry.v1.ListEntriesRequest.Filter.by_spiffe_id:type_name -> spire.api.types.SPIFFEID
	23, // 25: spire.api.server.entry.v1.ListEntriesRequest.Filter.by_parent_id:type_name -> spire.api.types.SPIFFEID
	24, // 26: spire.api.server.entry.v1.ListEntriesRequest.Filter.by_selectors:type_name -> spire.api.types.SelectorMatch
	25, // 27: spire.api.server.entry.v1.ListEntriesRequest.Filter.by_federates_with:type_name -> spire.api.types.FederatesWithMatch
	26, // 28: spire.api.server.entry.v1.ListEntriesRequest.Filter.by_hint:type_name -> google.protobuf.StringValue
	27, // 29: spire.api.server.entry.v1.ListEntriesRequest.Filter.by_downstream:type_name -> google.protobuf.BoolValue
	28, // 30: spire.api.server.entry.v1.BatchCreateEntryResponse.Result.status:type_name -> spire.api.types.Status
	22, // 31: spire.api.server.entry.v1.BatchCreateEntryResponse.Result.entry:type_name -> spire.api.types.Entry
	28, // 32: spire.api.server.entry.v1.BatchUpdateEntryResponse.Result.status:type_name -> spire.api.types.Status
	22, // 33: spire.api.server.entry.v1.BatchUpdateEntryResponse.Result.entry:type_name -> spire.api.types.Entry
	28, // 34: spire.api.server.entry.v1.BatchDeleteEntryResponse.Result.status:type_name -> spire.api.types.Status
	0,  // 35: spire.api.server.entry.v1.Entry.CountEntries:input_type -> spire.api.server.entry.v1.CountEntriesRequest
	2,  // 36: spire.api.server.entry.v1.Entry.ListEntries:input_type -> spire.api.server.entry.v1.ListEntriesRequest
	4,  // 37: spire.api.server.entry.v1.Entry.GetEntry:input_type -> spire.api.server.entry.v1.GetEntryRequest
	5,  // 38: spire.api.server.entry.v1.Entry.BatchCreateEntry:input_type -> spire.api.server.entry.v1.BatchCreateEntryRequest
	7,  // 39: spire.api.server.entry.v1.Entry.BatchUpdateEntry:input_type -> spire.api.server.entry.v1.BatchUpdateEntryRequest
	9,  // 40: spire.api.server.entry.v1.Entry.BatchDeleteEntry:input_type -> spire.api.server.entry.v1.BatchDeleteEntryRequest
	11, // 41: spire.api.server.entry.v1.Entry.GetAuthorizedEntries:input_type -> spire.api.server.entry.v1.GetAuthorizedEntriesRequest
	13, // 42: spire.api.server.entry.v1.Entry.SyncAuthorizedEntries:input_type -> spire.api.server.entry.v1.SyncAuthorizedEntriesRequest
	1,  // 43: spire.api.server.entry.v1.Entry.CountEntries:output_type -> spire.api.server.entry.v1.CountEntriesResponse
	3,  // 44: spire.api.server.entry.v1.Entry.ListEntries:output_type -> spire.api.server.entry.v1.ListEntriesResponse
	22, // 45: spire.api.server.entry.v1.Entry.GetEntry:output_type -> spire.api.types.Entry
	6,  // 46: spire.api.server.entry.v1.Entry.BatchCreateEntry:output_type -> spire.api.server.entry.v1.BatchCreateEntryResponse
	8,  // 47: spire.api.server.entry.v1.Entry.BatchUpdateEntry:output_type -> spire.api.server.entry.v1.BatchUpdateEntryResponse
	10, // 48: spire.api.server.entry.v1.Entry.BatchDeleteEntry:output_type -> spire.api.server.entry.v1.BatchDeleteEntryResponse
	12, // 49: spire.api.server.entry.v1.Entry.GetAuthorizedEntries:output_type -> spire.api.server.entry.v1.GetAuthorizedEntriesResponse
	14, // 50: spire.api.server.entry.v1.Entry.SyncAuthorizedEntries:output_type -> spire.api.server.entry.v1.SyncAuthorizedEntriesResponse
	43, // [43:51] is the sub-list for method output_type
	35, // [35:43] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_spire_api_server_entry_v1_entry_proto_init() }
func file_spire_api_server_entry_v1_entry_proto_init() {
	if File_spire_api_server_entry_v1_entry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_api_server_entry_v1_entry_proto_rawDesc), len(file_spire_api_server_entry_v1_entry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_api_server_entry_v1_entry_proto_goTypes,
		DependencyIndexes: file_spire_api_server_entry_v1_entry_proto_depIdxs,
		MessageInfos:      file_spire_api_server_entry_v1_entry_proto_msgTypes,
	}.Build()
	File_spire_api_server_entry_v1_entry_proto = out.File
	file_spire_api_server_entry_v1_entry_proto_goTypes = nil
	file_spire_api_server_entry_v1_entry_proto_depIdxs = nil
}
