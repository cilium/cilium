// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.30.2
// source: spire/api/agent/delegatedidentity/v1/delegatedidentity.proto

package delegatedidentityv1

import (
	types "github.com/spiffe/spire-api-sdk/proto/spire/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// X.509 SPIFFE Verifiable Identity Document with the private key.
type X509SVIDWithKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The workload X509-SVID.
	X509Svid *types.X509SVID `protobuf:"bytes,1,opt,name=x509_svid,json=x509Svid,proto3" json:"x509_svid,omitempty"`
	// Private key (encoding DER PKCS#8).
	X509SvidKey   []byte `protobuf:"bytes,2,opt,name=x509_svid_key,json=x509SvidKey,proto3" json:"x509_svid_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *X509SVIDWithKey) Reset() {
	*x = X509SVIDWithKey{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *X509SVIDWithKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509SVIDWithKey) ProtoMessage() {}

func (x *X509SVIDWithKey) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509SVIDWithKey.ProtoReflect.Descriptor instead.
func (*X509SVIDWithKey) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{0}
}

func (x *X509SVIDWithKey) GetX509Svid() *types.X509SVID {
	if x != nil {
		return x.X509Svid
	}
	return nil
}

func (x *X509SVIDWithKey) GetX509SvidKey() []byte {
	if x != nil {
		return x.X509SvidKey
	}
	return nil
}

// SubscribeToX509SVIDsRequest is used by clients to subscribe the set of SVIDs that
// any given workload is entitled to. Clients subscribe to a workload's SVIDs by providing
// one-of
//   - a set of selectors describing the workload.
//   - a PID of a workload process.
//
// Specifying both at the same time is not allowed.
//
// Subscribers are expected to ensure that the PID they use is not recycled
// for the lifetime of the stream, and in the event that it is, are expected
// to immediately close the stream.
//
// TODO we should use `oneof` here but you currently cannot use `repeated`
// in a `oneof` without creating and nesting an intermediate `message` type, which would break
// back compat - so we accept both and check for mutual exclusion in the handler
type SubscribeToX509SVIDsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Selectors describing the workload to subscribe to. Mutually exclusive with `pid`.
	Selectors []*types.Selector `protobuf:"bytes,1,rep,name=selectors,proto3" json:"selectors,omitempty"`
	// PID for the workload to subscribe to. Mutually exclusive with `selectors`
	Pid           int32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToX509SVIDsRequest) Reset() {
	*x = SubscribeToX509SVIDsRequest{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToX509SVIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToX509SVIDsRequest) ProtoMessage() {}

func (x *SubscribeToX509SVIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToX509SVIDsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToX509SVIDsRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeToX509SVIDsRequest) GetSelectors() []*types.Selector {
	if x != nil {
		return x.Selectors
	}
	return nil
}

func (x *SubscribeToX509SVIDsRequest) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type SubscribeToX509SVIDsResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	X509Svids []*X509SVIDWithKey     `protobuf:"bytes,1,rep,name=x509_svids,json=x509Svids,proto3" json:"x509_svids,omitempty"`
	// Names of the trust domains that this workload should federates with.
	FederatesWith []string `protobuf:"bytes,2,rep,name=federates_with,json=federatesWith,proto3" json:"federates_with,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToX509SVIDsResponse) Reset() {
	*x = SubscribeToX509SVIDsResponse{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToX509SVIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToX509SVIDsResponse) ProtoMessage() {}

func (x *SubscribeToX509SVIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToX509SVIDsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToX509SVIDsResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeToX509SVIDsResponse) GetX509Svids() []*X509SVIDWithKey {
	if x != nil {
		return x.X509Svids
	}
	return nil
}

func (x *SubscribeToX509SVIDsResponse) GetFederatesWith() []string {
	if x != nil {
		return x.FederatesWith
	}
	return nil
}

type SubscribeToX509BundlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToX509BundlesRequest) Reset() {
	*x = SubscribeToX509BundlesRequest{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToX509BundlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToX509BundlesRequest) ProtoMessage() {}

func (x *SubscribeToX509BundlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToX509BundlesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToX509BundlesRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{3}
}

// SubscribeToX509BundlesResponse contains all bundles that the agent is tracking,
// including the local bundle. When an update occurs, or bundles are added or removed,
// a new response with the full set of bundles is sent.
type SubscribeToX509BundlesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A map keyed by trust domain name, with ASN.1 DER-encoded
	// X.509 CA certificates as the values
	CaCertificates map[string][]byte `protobuf:"bytes,1,rep,name=ca_certificates,json=caCertificates,proto3" json:"ca_certificates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeToX509BundlesResponse) Reset() {
	*x = SubscribeToX509BundlesResponse{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToX509BundlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToX509BundlesResponse) ProtoMessage() {}

func (x *SubscribeToX509BundlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToX509BundlesResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToX509BundlesResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeToX509BundlesResponse) GetCaCertificates() map[string][]byte {
	if x != nil {
		return x.CaCertificates
	}
	return nil
}

// FetchJWTSVIDsRequest is used by clients to fetch a JWT-SVID for a workload.
// Clients may provide one-of
//   - a set of selectors describing the workload.
//   - a PID of a workload process.
//
// Specifying both at the same time is not allowed.
//
// Callers are expected to ensure that the PID they use is not recycled
// until obtaining a response, and in the event that it is, are expected
// to discard the response of this call.
//
// TODO we should use `oneof` here but you currently cannot use `repeated`
// in a `oneof` without creating and nesting an intermediate `message` type, which would break
// back compat - so we accept both and check for mutual exclusion in the handler
type FetchJWTSVIDsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The audience(s) the workload intends to authenticate against.
	Audience []string `protobuf:"bytes,1,rep,name=audience,proto3" json:"audience,omitempty"`
	// Selectors describing the workload to subscribe to. Mutually exclusive with `pid`
	Selectors []*types.Selector `protobuf:"bytes,2,rep,name=selectors,proto3" json:"selectors,omitempty"`
	// PID for the workload to subscribe to. Mutually exclusive with `selectors`.
	Pid           int32 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchJWTSVIDsRequest) Reset() {
	*x = FetchJWTSVIDsRequest{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchJWTSVIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchJWTSVIDsRequest) ProtoMessage() {}

func (x *FetchJWTSVIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchJWTSVIDsRequest.ProtoReflect.Descriptor instead.
func (*FetchJWTSVIDsRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{5}
}

func (x *FetchJWTSVIDsRequest) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *FetchJWTSVIDsRequest) GetSelectors() []*types.Selector {
	if x != nil {
		return x.Selectors
	}
	return nil
}

func (x *FetchJWTSVIDsRequest) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// The FetchJWTSVIDsResponse message conveys JWT-SVIDs.
type FetchJWTSVIDsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The list of returned JWT-SVIDs.
	Svids         []*types.JWTSVID `protobuf:"bytes,1,rep,name=svids,proto3" json:"svids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchJWTSVIDsResponse) Reset() {
	*x = FetchJWTSVIDsResponse{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchJWTSVIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchJWTSVIDsResponse) ProtoMessage() {}

func (x *FetchJWTSVIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchJWTSVIDsResponse.ProtoReflect.Descriptor instead.
func (*FetchJWTSVIDsResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{6}
}

func (x *FetchJWTSVIDsResponse) GetSvids() []*types.JWTSVID {
	if x != nil {
		return x.Svids
	}
	return nil
}

// The SubscribeToJWTBundlesRequest message conveys parameters for requesting JWKS bundles.
// There are currently no such parameters.
type SubscribeToJWTBundlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToJWTBundlesRequest) Reset() {
	*x = SubscribeToJWTBundlesRequest{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToJWTBundlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToJWTBundlesRequest) ProtoMessage() {}

func (x *SubscribeToJWTBundlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToJWTBundlesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToJWTBundlesRequest) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{7}
}

// The SubscribeToJWTBundlesReponse conveys JWKS bundles.
type SubscribeToJWTBundlesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. JWK encoded JWT bundles, keyed by the SPIFFE ID of the trust
	// domain.
	Bundles       map[string][]byte `protobuf:"bytes,1,rep,name=bundles,proto3" json:"bundles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToJWTBundlesResponse) Reset() {
	*x = SubscribeToJWTBundlesResponse{}
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToJWTBundlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToJWTBundlesResponse) ProtoMessage() {}

func (x *SubscribeToJWTBundlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToJWTBundlesResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToJWTBundlesResponse) Descriptor() ([]byte, []int) {
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeToJWTBundlesResponse) GetBundles() map[string][]byte {
	if x != nil {
		return x.Bundles
	}
	return nil
}

var File_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto protoreflect.FileDescriptor

const file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDesc = "" +
	"\n" +
	"<spire/api/agent/delegatedidentity/v1/delegatedidentity.proto\x12$spire.api.agent.delegatedidentity.v1\x1a\x1espire/api/types/selector.proto\x1a\x1espire/api/types/x509svid.proto\x1a\x1dspire/api/types/jwtsvid.proto\"m\n" +
	"\x0fX509SVIDWithKey\x126\n" +
	"\tx509_svid\x18\x01 \x01(\v2\x19.spire.api.types.X509SVIDR\bx509Svid\x12\"\n" +
	"\rx509_svid_key\x18\x02 \x01(\fR\vx509SvidKey\"h\n" +
	"\x1bSubscribeToX509SVIDsRequest\x127\n" +
	"\tselectors\x18\x01 \x03(\v2\x19.spire.api.types.SelectorR\tselectors\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x05R\x03pid\"\x9b\x01\n" +
	"\x1cSubscribeToX509SVIDsResponse\x12T\n" +
	"\n" +
	"x509_svids\x18\x01 \x03(\v25.spire.api.agent.delegatedidentity.v1.X509SVIDWithKeyR\tx509Svids\x12%\n" +
	"\x0efederates_with\x18\x02 \x03(\tR\rfederatesWith\"\x1f\n" +
	"\x1dSubscribeToX509BundlesRequest\"\xe7\x01\n" +
	"\x1eSubscribeToX509BundlesResponse\x12\x81\x01\n" +
	"\x0fca_certificates\x18\x01 \x03(\v2X.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.CaCertificatesEntryR\x0ecaCertificates\x1aA\n" +
	"\x13CaCertificatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"}\n" +
	"\x14FetchJWTSVIDsRequest\x12\x1a\n" +
	"\baudience\x18\x01 \x03(\tR\baudience\x127\n" +
	"\tselectors\x18\x02 \x03(\v2\x19.spire.api.types.SelectorR\tselectors\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\x05R\x03pid\"G\n" +
	"\x15FetchJWTSVIDsResponse\x12.\n" +
	"\x05svids\x18\x01 \x03(\v2\x18.spire.api.types.JWTSVIDR\x05svids\"\x1e\n" +
	"\x1cSubscribeToJWTBundlesRequest\"\xc7\x01\n" +
	"\x1dSubscribeToJWTBundlesResponse\x12j\n" +
	"\abundles\x18\x01 \x03(\v2P.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.BundlesEntryR\abundles\x1a:\n" +
	"\fBundlesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x012\x8d\x05\n" +
	"\x11DelegatedIdentity\x12\x9f\x01\n" +
	"\x14SubscribeToX509SVIDs\x12A.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest\x1aB.spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse0\x01\x12\xa5\x01\n" +
	"\x16SubscribeToX509Bundles\x12C.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest\x1aD.spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse0\x01\x12\x88\x01\n" +
	"\rFetchJWTSVIDs\x12:.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest\x1a;.spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse\x12\xa2\x01\n" +
	"\x15SubscribeToJWTBundles\x12B.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest\x1aC.spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse0\x01B`Z^github.com/spiffe/spire-api-sdk/proto/spire/api/agent/delegatedidentity/v1;delegatedidentityv1b\x06proto3"

var (
	file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescOnce sync.Once
	file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescData []byte
)

func file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescGZIP() []byte {
	file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescOnce.Do(func() {
		file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDesc), len(file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDesc)))
	})
	return file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDescData
}

var file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_goTypes = []any{
	(*X509SVIDWithKey)(nil),                // 0: spire.api.agent.delegatedidentity.v1.X509SVIDWithKey
	(*SubscribeToX509SVIDsRequest)(nil),    // 1: spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest
	(*SubscribeToX509SVIDsResponse)(nil),   // 2: spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse
	(*SubscribeToX509BundlesRequest)(nil),  // 3: spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest
	(*SubscribeToX509BundlesResponse)(nil), // 4: spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse
	(*FetchJWTSVIDsRequest)(nil),           // 5: spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest
	(*FetchJWTSVIDsResponse)(nil),          // 6: spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse
	(*SubscribeToJWTBundlesRequest)(nil),   // 7: spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest
	(*SubscribeToJWTBundlesResponse)(nil),  // 8: spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse
	nil,                                    // 9: spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.CaCertificatesEntry
	nil,                                    // 10: spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.BundlesEntry
	(*types.X509SVID)(nil),                 // 11: spire.api.types.X509SVID
	(*types.Selector)(nil),                 // 12: spire.api.types.Selector
	(*types.JWTSVID)(nil),                  // 13: spire.api.types.JWTSVID
}
var file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_depIdxs = []int32{
	11, // 0: spire.api.agent.delegatedidentity.v1.X509SVIDWithKey.x509_svid:type_name -> spire.api.types.X509SVID
	12, // 1: spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest.selectors:type_name -> spire.api.types.Selector
	0,  // 2: spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse.x509_svids:type_name -> spire.api.agent.delegatedidentity.v1.X509SVIDWithKey
	9,  // 3: spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.ca_certificates:type_name -> spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse.CaCertificatesEntry
	12, // 4: spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest.selectors:type_name -> spire.api.types.Selector
	13, // 5: spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse.svids:type_name -> spire.api.types.JWTSVID
	10, // 6: spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.bundles:type_name -> spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse.BundlesEntry
	1,  // 7: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.SubscribeToX509SVIDs:input_type -> spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsRequest
	3,  // 8: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.SubscribeToX509Bundles:input_type -> spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesRequest
	5,  // 9: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.FetchJWTSVIDs:input_type -> spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsRequest
	7,  // 10: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.SubscribeToJWTBundles:input_type -> spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesRequest
	2,  // 11: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.SubscribeToX509SVIDs:output_type -> spire.api.agent.delegatedidentity.v1.SubscribeToX509SVIDsResponse
	4,  // 12: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.SubscribeToX509Bundles:output_type -> spire.api.agent.delegatedidentity.v1.SubscribeToX509BundlesResponse
	6,  // 13: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.FetchJWTSVIDs:output_type -> spire.api.agent.delegatedidentity.v1.FetchJWTSVIDsResponse
	8,  // 14: spire.api.agent.delegatedidentity.v1.DelegatedIdentity.SubscribeToJWTBundles:output_type -> spire.api.agent.delegatedidentity.v1.SubscribeToJWTBundlesResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_init() }
func file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_init() {
	if File_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDesc), len(file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_goTypes,
		DependencyIndexes: file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_depIdxs,
		MessageInfos:      file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_msgTypes,
	}.Build()
	File_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto = out.File
	file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_goTypes = nil
	file_spire_api_agent_delegatedidentity_v1_delegatedidentity_proto_depIdxs = nil
}
