// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

type AccountAttributeName string

// Enum values for AccountAttributeName
const (
	AccountAttributeNameSupportedPlatforms AccountAttributeName = "supported-platforms"
	AccountAttributeNameDefaultVpc         AccountAttributeName = "default-vpc"
)

func (enum AccountAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AccountAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ActivityStatus string

// Enum values for ActivityStatus
const (
	ActivityStatusError              ActivityStatus = "error"
	ActivityStatusPendingFulfillment ActivityStatus = "pending_fulfillment"
	ActivityStatusPendingTermination ActivityStatus = "pending_termination"
	ActivityStatusFulfilled          ActivityStatus = "fulfilled"
)

func (enum ActivityStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ActivityStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Affinity string

// Enum values for Affinity
const (
	AffinityDefault Affinity = "default"
	AffinityHost    Affinity = "host"
)

func (enum Affinity) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Affinity) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AllocationState string

// Enum values for AllocationState
const (
	AllocationStateAvailable                AllocationState = "available"
	AllocationStateUnderAssessment          AllocationState = "under-assessment"
	AllocationStatePermanentFailure         AllocationState = "permanent-failure"
	AllocationStateReleased                 AllocationState = "released"
	AllocationStateReleasedPermanentFailure AllocationState = "released-permanent-failure"
	AllocationStatePending                  AllocationState = "pending"
)

func (enum AllocationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AllocationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AllocationStrategy string

// Enum values for AllocationStrategy
const (
	AllocationStrategyLowestPrice       AllocationStrategy = "lowestPrice"
	AllocationStrategyDiversified       AllocationStrategy = "diversified"
	AllocationStrategyCapacityOptimized AllocationStrategy = "capacityOptimized"
)

func (enum AllocationStrategy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AllocationStrategy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AllowsMultipleInstanceTypes string

// Enum values for AllowsMultipleInstanceTypes
const (
	AllowsMultipleInstanceTypesOn  AllowsMultipleInstanceTypes = "on"
	AllowsMultipleInstanceTypesOff AllowsMultipleInstanceTypes = "off"
)

func (enum AllowsMultipleInstanceTypes) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AllowsMultipleInstanceTypes) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ArchitectureType string

// Enum values for ArchitectureType
const (
	ArchitectureTypeI386  ArchitectureType = "i386"
	ArchitectureTypeX8664 ArchitectureType = "x86_64"
	ArchitectureTypeArm64 ArchitectureType = "arm64"
)

func (enum ArchitectureType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ArchitectureType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ArchitectureValues string

// Enum values for ArchitectureValues
const (
	ArchitectureValuesI386  ArchitectureValues = "i386"
	ArchitectureValuesX8664 ArchitectureValues = "x86_64"
	ArchitectureValuesArm64 ArchitectureValues = "arm64"
)

func (enum ArchitectureValues) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ArchitectureValues) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AssociatedNetworkType string

// Enum values for AssociatedNetworkType
const (
	AssociatedNetworkTypeVpc AssociatedNetworkType = "vpc"
)

func (enum AssociatedNetworkType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AssociatedNetworkType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AssociationStatusCode string

// Enum values for AssociationStatusCode
const (
	AssociationStatusCodeAssociating       AssociationStatusCode = "associating"
	AssociationStatusCodeAssociated        AssociationStatusCode = "associated"
	AssociationStatusCodeAssociationFailed AssociationStatusCode = "association-failed"
	AssociationStatusCodeDisassociating    AssociationStatusCode = "disassociating"
	AssociationStatusCodeDisassociated     AssociationStatusCode = "disassociated"
)

func (enum AssociationStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AssociationStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AttachmentStatus string

// Enum values for AttachmentStatus
const (
	AttachmentStatusAttaching AttachmentStatus = "attaching"
	AttachmentStatusAttached  AttachmentStatus = "attached"
	AttachmentStatusDetaching AttachmentStatus = "detaching"
	AttachmentStatusDetached  AttachmentStatus = "detached"
)

func (enum AttachmentStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AttachmentStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AutoAcceptSharedAttachmentsValue string

// Enum values for AutoAcceptSharedAttachmentsValue
const (
	AutoAcceptSharedAttachmentsValueEnable  AutoAcceptSharedAttachmentsValue = "enable"
	AutoAcceptSharedAttachmentsValueDisable AutoAcceptSharedAttachmentsValue = "disable"
)

func (enum AutoAcceptSharedAttachmentsValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AutoAcceptSharedAttachmentsValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AutoPlacement string

// Enum values for AutoPlacement
const (
	AutoPlacementOn  AutoPlacement = "on"
	AutoPlacementOff AutoPlacement = "off"
)

func (enum AutoPlacement) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AutoPlacement) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AvailabilityZoneOptInStatus string

// Enum values for AvailabilityZoneOptInStatus
const (
	AvailabilityZoneOptInStatusOptInNotRequired AvailabilityZoneOptInStatus = "opt-in-not-required"
	AvailabilityZoneOptInStatusOptedIn          AvailabilityZoneOptInStatus = "opted-in"
	AvailabilityZoneOptInStatusNotOptedIn       AvailabilityZoneOptInStatus = "not-opted-in"
)

func (enum AvailabilityZoneOptInStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AvailabilityZoneOptInStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type AvailabilityZoneState string

// Enum values for AvailabilityZoneState
const (
	AvailabilityZoneStateAvailable   AvailabilityZoneState = "available"
	AvailabilityZoneStateInformation AvailabilityZoneState = "information"
	AvailabilityZoneStateImpaired    AvailabilityZoneState = "impaired"
	AvailabilityZoneStateUnavailable AvailabilityZoneState = "unavailable"
)

func (enum AvailabilityZoneState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum AvailabilityZoneState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type BatchState string

// Enum values for BatchState
const (
	BatchStateSubmitted            BatchState = "submitted"
	BatchStateActive               BatchState = "active"
	BatchStateCancelled            BatchState = "cancelled"
	BatchStateFailed               BatchState = "failed"
	BatchStateCancelledRunning     BatchState = "cancelled_running"
	BatchStateCancelledTerminating BatchState = "cancelled_terminating"
	BatchStateModifying            BatchState = "modifying"
)

func (enum BatchState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum BatchState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type BundleTaskState string

// Enum values for BundleTaskState
const (
	BundleTaskStatePending            BundleTaskState = "pending"
	BundleTaskStateWaitingForShutdown BundleTaskState = "waiting-for-shutdown"
	BundleTaskStateBundling           BundleTaskState = "bundling"
	BundleTaskStateStoring            BundleTaskState = "storing"
	BundleTaskStateCancelling         BundleTaskState = "cancelling"
	BundleTaskStateComplete           BundleTaskState = "complete"
	BundleTaskStateFailed             BundleTaskState = "failed"
)

func (enum BundleTaskState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum BundleTaskState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ByoipCidrState string

// Enum values for ByoipCidrState
const (
	ByoipCidrStateAdvertised                         ByoipCidrState = "advertised"
	ByoipCidrStateDeprovisioned                      ByoipCidrState = "deprovisioned"
	ByoipCidrStateFailedDeprovision                  ByoipCidrState = "failed-deprovision"
	ByoipCidrStateFailedProvision                    ByoipCidrState = "failed-provision"
	ByoipCidrStatePendingDeprovision                 ByoipCidrState = "pending-deprovision"
	ByoipCidrStatePendingProvision                   ByoipCidrState = "pending-provision"
	ByoipCidrStateProvisioned                        ByoipCidrState = "provisioned"
	ByoipCidrStateProvisionedNotPubliclyAdvertisable ByoipCidrState = "provisioned-not-publicly-advertisable"
)

func (enum ByoipCidrState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ByoipCidrState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CancelBatchErrorCode string

// Enum values for CancelBatchErrorCode
const (
	CancelBatchErrorCodeFleetRequestIdDoesNotExist        CancelBatchErrorCode = "fleetRequestIdDoesNotExist"
	CancelBatchErrorCodeFleetRequestIdMalformed           CancelBatchErrorCode = "fleetRequestIdMalformed"
	CancelBatchErrorCodeFleetRequestNotInCancellableState CancelBatchErrorCode = "fleetRequestNotInCancellableState"
	CancelBatchErrorCodeUnexpectedError                   CancelBatchErrorCode = "unexpectedError"
)

func (enum CancelBatchErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CancelBatchErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CancelSpotInstanceRequestState string

// Enum values for CancelSpotInstanceRequestState
const (
	CancelSpotInstanceRequestStateActive    CancelSpotInstanceRequestState = "active"
	CancelSpotInstanceRequestStateOpen      CancelSpotInstanceRequestState = "open"
	CancelSpotInstanceRequestStateClosed    CancelSpotInstanceRequestState = "closed"
	CancelSpotInstanceRequestStateCancelled CancelSpotInstanceRequestState = "cancelled"
	CancelSpotInstanceRequestStateCompleted CancelSpotInstanceRequestState = "completed"
)

func (enum CancelSpotInstanceRequestState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CancelSpotInstanceRequestState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CapacityReservationInstancePlatform string

// Enum values for CapacityReservationInstancePlatform
const (
	CapacityReservationInstancePlatformLinuxUnix                      CapacityReservationInstancePlatform = "Linux/UNIX"
	CapacityReservationInstancePlatformRedHatEnterpriseLinux          CapacityReservationInstancePlatform = "Red Hat Enterprise Linux"
	CapacityReservationInstancePlatformSuselinux                      CapacityReservationInstancePlatform = "SUSE Linux"
	CapacityReservationInstancePlatformWindows                        CapacityReservationInstancePlatform = "Windows"
	CapacityReservationInstancePlatformWindowswithSqlserver           CapacityReservationInstancePlatform = "Windows with SQL Server"
	CapacityReservationInstancePlatformWindowswithSqlserverEnterprise CapacityReservationInstancePlatform = "Windows with SQL Server Enterprise"
	CapacityReservationInstancePlatformWindowswithSqlserverStandard   CapacityReservationInstancePlatform = "Windows with SQL Server Standard"
	CapacityReservationInstancePlatformWindowswithSqlserverWeb        CapacityReservationInstancePlatform = "Windows with SQL Server Web"
	CapacityReservationInstancePlatformLinuxwithSqlserverStandard     CapacityReservationInstancePlatform = "Linux with SQL Server Standard"
	CapacityReservationInstancePlatformLinuxwithSqlserverWeb          CapacityReservationInstancePlatform = "Linux with SQL Server Web"
	CapacityReservationInstancePlatformLinuxwithSqlserverEnterprise   CapacityReservationInstancePlatform = "Linux with SQL Server Enterprise"
)

func (enum CapacityReservationInstancePlatform) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CapacityReservationInstancePlatform) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CapacityReservationPreference string

// Enum values for CapacityReservationPreference
const (
	CapacityReservationPreferenceOpen CapacityReservationPreference = "open"
	CapacityReservationPreferenceNone CapacityReservationPreference = "none"
)

func (enum CapacityReservationPreference) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CapacityReservationPreference) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CapacityReservationState string

// Enum values for CapacityReservationState
const (
	CapacityReservationStateActive    CapacityReservationState = "active"
	CapacityReservationStateExpired   CapacityReservationState = "expired"
	CapacityReservationStateCancelled CapacityReservationState = "cancelled"
	CapacityReservationStatePending   CapacityReservationState = "pending"
	CapacityReservationStateFailed    CapacityReservationState = "failed"
)

func (enum CapacityReservationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CapacityReservationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CapacityReservationTenancy string

// Enum values for CapacityReservationTenancy
const (
	CapacityReservationTenancyDefault   CapacityReservationTenancy = "default"
	CapacityReservationTenancyDedicated CapacityReservationTenancy = "dedicated"
)

func (enum CapacityReservationTenancy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CapacityReservationTenancy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CertificateRevocationListStatusCode string

// Enum values for CertificateRevocationListStatusCode
const (
	CertificateRevocationListStatusCodePending CertificateRevocationListStatusCode = "pending"
	CertificateRevocationListStatusCodeActive  CertificateRevocationListStatusCode = "active"
)

func (enum CertificateRevocationListStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CertificateRevocationListStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConnectionNotificationState string

// Enum values for ConnectionNotificationState
const (
	ConnectionNotificationStateEnabled  ConnectionNotificationState = "Enabled"
	ConnectionNotificationStateDisabled ConnectionNotificationState = "Disabled"
)

func (enum ConnectionNotificationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConnectionNotificationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConnectionNotificationType string

// Enum values for ConnectionNotificationType
const (
	ConnectionNotificationTypeTopic ConnectionNotificationType = "Topic"
)

func (enum ConnectionNotificationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConnectionNotificationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ContainerFormat string

// Enum values for ContainerFormat
const (
	ContainerFormatOva ContainerFormat = "ova"
)

func (enum ContainerFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ContainerFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ConversionTaskState string

// Enum values for ConversionTaskState
const (
	ConversionTaskStateActive     ConversionTaskState = "active"
	ConversionTaskStateCancelling ConversionTaskState = "cancelling"
	ConversionTaskStateCancelled  ConversionTaskState = "cancelled"
	ConversionTaskStateCompleted  ConversionTaskState = "completed"
)

func (enum ConversionTaskState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ConversionTaskState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CopyTagsFromSource string

// Enum values for CopyTagsFromSource
const (
	CopyTagsFromSourceVolume CopyTagsFromSource = "volume"
)

func (enum CopyTagsFromSource) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CopyTagsFromSource) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type CurrencyCodeValues string

// Enum values for CurrencyCodeValues
const (
	CurrencyCodeValuesUsd CurrencyCodeValues = "USD"
)

func (enum CurrencyCodeValues) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum CurrencyCodeValues) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DatafeedSubscriptionState string

// Enum values for DatafeedSubscriptionState
const (
	DatafeedSubscriptionStateActive   DatafeedSubscriptionState = "Active"
	DatafeedSubscriptionStateInactive DatafeedSubscriptionState = "Inactive"
)

func (enum DatafeedSubscriptionState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DatafeedSubscriptionState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DefaultRouteTableAssociationValue string

// Enum values for DefaultRouteTableAssociationValue
const (
	DefaultRouteTableAssociationValueEnable  DefaultRouteTableAssociationValue = "enable"
	DefaultRouteTableAssociationValueDisable DefaultRouteTableAssociationValue = "disable"
)

func (enum DefaultRouteTableAssociationValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DefaultRouteTableAssociationValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DefaultRouteTablePropagationValue string

// Enum values for DefaultRouteTablePropagationValue
const (
	DefaultRouteTablePropagationValueEnable  DefaultRouteTablePropagationValue = "enable"
	DefaultRouteTablePropagationValueDisable DefaultRouteTablePropagationValue = "disable"
)

func (enum DefaultRouteTablePropagationValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DefaultRouteTablePropagationValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DefaultTargetCapacityType string

// Enum values for DefaultTargetCapacityType
const (
	DefaultTargetCapacityTypeSpot     DefaultTargetCapacityType = "spot"
	DefaultTargetCapacityTypeOnDemand DefaultTargetCapacityType = "on-demand"
)

func (enum DefaultTargetCapacityType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DefaultTargetCapacityType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DeleteFleetErrorCode string

// Enum values for DeleteFleetErrorCode
const (
	DeleteFleetErrorCodeFleetIdDoesNotExist      DeleteFleetErrorCode = "fleetIdDoesNotExist"
	DeleteFleetErrorCodeFleetIdMalformed         DeleteFleetErrorCode = "fleetIdMalformed"
	DeleteFleetErrorCodeFleetNotInDeletableState DeleteFleetErrorCode = "fleetNotInDeletableState"
	DeleteFleetErrorCodeUnexpectedError          DeleteFleetErrorCode = "unexpectedError"
)

func (enum DeleteFleetErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DeleteFleetErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DeleteQueuedReservedInstancesErrorCode string

// Enum values for DeleteQueuedReservedInstancesErrorCode
const (
	DeleteQueuedReservedInstancesErrorCodeReservedInstancesIdInvalid        DeleteQueuedReservedInstancesErrorCode = "reserved-instances-id-invalid"
	DeleteQueuedReservedInstancesErrorCodeReservedInstancesNotInQueuedState DeleteQueuedReservedInstancesErrorCode = "reserved-instances-not-in-queued-state"
	DeleteQueuedReservedInstancesErrorCodeUnexpectedError                   DeleteQueuedReservedInstancesErrorCode = "unexpected-error"
)

func (enum DeleteQueuedReservedInstancesErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DeleteQueuedReservedInstancesErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DeviceType string

// Enum values for DeviceType
const (
	DeviceTypeEbs           DeviceType = "ebs"
	DeviceTypeInstanceStore DeviceType = "instance-store"
)

func (enum DeviceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DeviceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DiskImageFormat string

// Enum values for DiskImageFormat
const (
	DiskImageFormatVmdk DiskImageFormat = "VMDK"
	DiskImageFormatRaw  DiskImageFormat = "RAW"
	DiskImageFormatVhd  DiskImageFormat = "VHD"
)

func (enum DiskImageFormat) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DiskImageFormat) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DiskType string

// Enum values for DiskType
const (
	DiskTypeHdd DiskType = "hdd"
	DiskTypeSsd DiskType = "ssd"
)

func (enum DiskType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DiskType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DnsNameState string

// Enum values for DnsNameState
const (
	DnsNameStatePendingVerification DnsNameState = "pendingVerification"
	DnsNameStateVerified            DnsNameState = "verified"
	DnsNameStateFailed              DnsNameState = "failed"
)

func (enum DnsNameState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DnsNameState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DnsSupportValue string

// Enum values for DnsSupportValue
const (
	DnsSupportValueEnable  DnsSupportValue = "enable"
	DnsSupportValueDisable DnsSupportValue = "disable"
)

func (enum DnsSupportValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DnsSupportValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type DomainType string

// Enum values for DomainType
const (
	DomainTypeVpc      DomainType = "vpc"
	DomainTypeStandard DomainType = "standard"
)

func (enum DomainType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum DomainType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EbsEncryptionSupport string

// Enum values for EbsEncryptionSupport
const (
	EbsEncryptionSupportUnsupported EbsEncryptionSupport = "unsupported"
	EbsEncryptionSupportSupported   EbsEncryptionSupport = "supported"
)

func (enum EbsEncryptionSupport) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EbsEncryptionSupport) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EbsNvmeSupport string

// Enum values for EbsNvmeSupport
const (
	EbsNvmeSupportUnsupported EbsNvmeSupport = "unsupported"
	EbsNvmeSupportSupported   EbsNvmeSupport = "supported"
	EbsNvmeSupportRequired    EbsNvmeSupport = "required"
)

func (enum EbsNvmeSupport) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EbsNvmeSupport) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EbsOptimizedSupport string

// Enum values for EbsOptimizedSupport
const (
	EbsOptimizedSupportUnsupported EbsOptimizedSupport = "unsupported"
	EbsOptimizedSupportSupported   EbsOptimizedSupport = "supported"
	EbsOptimizedSupportDefault     EbsOptimizedSupport = "default"
)

func (enum EbsOptimizedSupport) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EbsOptimizedSupport) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ElasticGpuState string

// Enum values for ElasticGpuState
const (
	ElasticGpuStateAttached ElasticGpuState = "ATTACHED"
)

func (enum ElasticGpuState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ElasticGpuState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ElasticGpuStatus string

// Enum values for ElasticGpuStatus
const (
	ElasticGpuStatusOk       ElasticGpuStatus = "OK"
	ElasticGpuStatusImpaired ElasticGpuStatus = "IMPAIRED"
)

func (enum ElasticGpuStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ElasticGpuStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EnaSupport string

// Enum values for EnaSupport
const (
	EnaSupportUnsupported EnaSupport = "unsupported"
	EnaSupportSupported   EnaSupport = "supported"
	EnaSupportRequired    EnaSupport = "required"
)

func (enum EnaSupport) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EnaSupport) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EndDateType string

// Enum values for EndDateType
const (
	EndDateTypeUnlimited EndDateType = "unlimited"
	EndDateTypeLimited   EndDateType = "limited"
)

func (enum EndDateType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EndDateType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EventCode string

// Enum values for EventCode
const (
	EventCodeInstanceReboot     EventCode = "instance-reboot"
	EventCodeSystemReboot       EventCode = "system-reboot"
	EventCodeSystemMaintenance  EventCode = "system-maintenance"
	EventCodeInstanceRetirement EventCode = "instance-retirement"
	EventCodeInstanceStop       EventCode = "instance-stop"
)

func (enum EventCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EventCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type EventType string

// Enum values for EventType
const (
	EventTypeInstanceChange     EventType = "instanceChange"
	EventTypeFleetRequestChange EventType = "fleetRequestChange"
	EventTypeError              EventType = "error"
	EventTypeInformation        EventType = "information"
)

func (enum EventType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum EventType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ExcessCapacityTerminationPolicy string

// Enum values for ExcessCapacityTerminationPolicy
const (
	ExcessCapacityTerminationPolicyNoTermination ExcessCapacityTerminationPolicy = "noTermination"
	ExcessCapacityTerminationPolicyDefault       ExcessCapacityTerminationPolicy = "default"
)

func (enum ExcessCapacityTerminationPolicy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ExcessCapacityTerminationPolicy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ExportEnvironment string

// Enum values for ExportEnvironment
const (
	ExportEnvironmentCitrix    ExportEnvironment = "citrix"
	ExportEnvironmentVmware    ExportEnvironment = "vmware"
	ExportEnvironmentMicrosoft ExportEnvironment = "microsoft"
)

func (enum ExportEnvironment) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ExportEnvironment) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ExportTaskState string

// Enum values for ExportTaskState
const (
	ExportTaskStateActive     ExportTaskState = "active"
	ExportTaskStateCancelling ExportTaskState = "cancelling"
	ExportTaskStateCancelled  ExportTaskState = "cancelled"
	ExportTaskStateCompleted  ExportTaskState = "completed"
)

func (enum ExportTaskState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ExportTaskState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FastSnapshotRestoreStateCode string

// Enum values for FastSnapshotRestoreStateCode
const (
	FastSnapshotRestoreStateCodeEnabling   FastSnapshotRestoreStateCode = "enabling"
	FastSnapshotRestoreStateCodeOptimizing FastSnapshotRestoreStateCode = "optimizing"
	FastSnapshotRestoreStateCodeEnabled    FastSnapshotRestoreStateCode = "enabled"
	FastSnapshotRestoreStateCodeDisabling  FastSnapshotRestoreStateCode = "disabling"
	FastSnapshotRestoreStateCodeDisabled   FastSnapshotRestoreStateCode = "disabled"
)

func (enum FastSnapshotRestoreStateCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FastSnapshotRestoreStateCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetActivityStatus string

// Enum values for FleetActivityStatus
const (
	FleetActivityStatusError              FleetActivityStatus = "error"
	FleetActivityStatusPendingFulfillment FleetActivityStatus = "pending_fulfillment"
	FleetActivityStatusPendingTermination FleetActivityStatus = "pending_termination"
	FleetActivityStatusFulfilled          FleetActivityStatus = "fulfilled"
)

func (enum FleetActivityStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetActivityStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetCapacityReservationUsageStrategy string

// Enum values for FleetCapacityReservationUsageStrategy
const (
	FleetCapacityReservationUsageStrategyUseCapacityReservationsFirst FleetCapacityReservationUsageStrategy = "use-capacity-reservations-first"
)

func (enum FleetCapacityReservationUsageStrategy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetCapacityReservationUsageStrategy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetEventType string

// Enum values for FleetEventType
const (
	FleetEventTypeInstanceChange FleetEventType = "instance-change"
	FleetEventTypeFleetChange    FleetEventType = "fleet-change"
	FleetEventTypeServiceError   FleetEventType = "service-error"
)

func (enum FleetEventType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetEventType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetExcessCapacityTerminationPolicy string

// Enum values for FleetExcessCapacityTerminationPolicy
const (
	FleetExcessCapacityTerminationPolicyNoTermination FleetExcessCapacityTerminationPolicy = "no-termination"
	FleetExcessCapacityTerminationPolicyTermination   FleetExcessCapacityTerminationPolicy = "termination"
)

func (enum FleetExcessCapacityTerminationPolicy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetExcessCapacityTerminationPolicy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetOnDemandAllocationStrategy string

// Enum values for FleetOnDemandAllocationStrategy
const (
	FleetOnDemandAllocationStrategyLowestPrice FleetOnDemandAllocationStrategy = "lowest-price"
	FleetOnDemandAllocationStrategyPrioritized FleetOnDemandAllocationStrategy = "prioritized"
)

func (enum FleetOnDemandAllocationStrategy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetOnDemandAllocationStrategy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetStateCode string

// Enum values for FleetStateCode
const (
	FleetStateCodeSubmitted          FleetStateCode = "submitted"
	FleetStateCodeActive             FleetStateCode = "active"
	FleetStateCodeDeleted            FleetStateCode = "deleted"
	FleetStateCodeFailed             FleetStateCode = "failed"
	FleetStateCodeDeletedRunning     FleetStateCode = "deleted_running"
	FleetStateCodeDeletedTerminating FleetStateCode = "deleted_terminating"
	FleetStateCodeModifying          FleetStateCode = "modifying"
)

func (enum FleetStateCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetStateCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FleetType string

// Enum values for FleetType
const (
	FleetTypeRequest  FleetType = "request"
	FleetTypeMaintain FleetType = "maintain"
	FleetTypeInstant  FleetType = "instant"
)

func (enum FleetType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FleetType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FlowLogsResourceType string

// Enum values for FlowLogsResourceType
const (
	FlowLogsResourceTypeVpc              FlowLogsResourceType = "VPC"
	FlowLogsResourceTypeSubnet           FlowLogsResourceType = "Subnet"
	FlowLogsResourceTypeNetworkInterface FlowLogsResourceType = "NetworkInterface"
)

func (enum FlowLogsResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FlowLogsResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FpgaImageAttributeName string

// Enum values for FpgaImageAttributeName
const (
	FpgaImageAttributeNameDescription    FpgaImageAttributeName = "description"
	FpgaImageAttributeNameName           FpgaImageAttributeName = "name"
	FpgaImageAttributeNameLoadPermission FpgaImageAttributeName = "loadPermission"
	FpgaImageAttributeNameProductCodes   FpgaImageAttributeName = "productCodes"
)

func (enum FpgaImageAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FpgaImageAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type FpgaImageStateCode string

// Enum values for FpgaImageStateCode
const (
	FpgaImageStateCodePending     FpgaImageStateCode = "pending"
	FpgaImageStateCodeFailed      FpgaImageStateCode = "failed"
	FpgaImageStateCodeAvailable   FpgaImageStateCode = "available"
	FpgaImageStateCodeUnavailable FpgaImageStateCode = "unavailable"
)

func (enum FpgaImageStateCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum FpgaImageStateCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type GatewayType string

// Enum values for GatewayType
const (
	GatewayTypeIpsec1 GatewayType = "ipsec.1"
)

func (enum GatewayType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum GatewayType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HostRecovery string

// Enum values for HostRecovery
const (
	HostRecoveryOn  HostRecovery = "on"
	HostRecoveryOff HostRecovery = "off"
)

func (enum HostRecovery) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HostRecovery) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HostTenancy string

// Enum values for HostTenancy
const (
	HostTenancyDedicated HostTenancy = "dedicated"
	HostTenancyHost      HostTenancy = "host"
)

func (enum HostTenancy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HostTenancy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HttpTokensState string

// Enum values for HttpTokensState
const (
	HttpTokensStateOptional HttpTokensState = "optional"
	HttpTokensStateRequired HttpTokensState = "required"
)

func (enum HttpTokensState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HttpTokensState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type HypervisorType string

// Enum values for HypervisorType
const (
	HypervisorTypeOvm HypervisorType = "ovm"
	HypervisorTypeXen HypervisorType = "xen"
)

func (enum HypervisorType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum HypervisorType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type IamInstanceProfileAssociationState string

// Enum values for IamInstanceProfileAssociationState
const (
	IamInstanceProfileAssociationStateAssociating    IamInstanceProfileAssociationState = "associating"
	IamInstanceProfileAssociationStateAssociated     IamInstanceProfileAssociationState = "associated"
	IamInstanceProfileAssociationStateDisassociating IamInstanceProfileAssociationState = "disassociating"
	IamInstanceProfileAssociationStateDisassociated  IamInstanceProfileAssociationState = "disassociated"
)

func (enum IamInstanceProfileAssociationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum IamInstanceProfileAssociationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageAttributeName string

// Enum values for ImageAttributeName
const (
	ImageAttributeNameDescription        ImageAttributeName = "description"
	ImageAttributeNameKernel             ImageAttributeName = "kernel"
	ImageAttributeNameRamdisk            ImageAttributeName = "ramdisk"
	ImageAttributeNameLaunchPermission   ImageAttributeName = "launchPermission"
	ImageAttributeNameProductCodes       ImageAttributeName = "productCodes"
	ImageAttributeNameBlockDeviceMapping ImageAttributeName = "blockDeviceMapping"
	ImageAttributeNameSriovNetSupport    ImageAttributeName = "sriovNetSupport"
)

func (enum ImageAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageState string

// Enum values for ImageState
const (
	ImageStatePending      ImageState = "pending"
	ImageStateAvailable    ImageState = "available"
	ImageStateInvalid      ImageState = "invalid"
	ImageStateDeregistered ImageState = "deregistered"
	ImageStateTransient    ImageState = "transient"
	ImageStateFailed       ImageState = "failed"
	ImageStateError        ImageState = "error"
)

func (enum ImageState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ImageTypeValues string

// Enum values for ImageTypeValues
const (
	ImageTypeValuesMachine ImageTypeValues = "machine"
	ImageTypeValuesKernel  ImageTypeValues = "kernel"
	ImageTypeValuesRamdisk ImageTypeValues = "ramdisk"
)

func (enum ImageTypeValues) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ImageTypeValues) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceAttributeName string

// Enum values for InstanceAttributeName
const (
	InstanceAttributeNameInstanceType                      InstanceAttributeName = "instanceType"
	InstanceAttributeNameKernel                            InstanceAttributeName = "kernel"
	InstanceAttributeNameRamdisk                           InstanceAttributeName = "ramdisk"
	InstanceAttributeNameUserData                          InstanceAttributeName = "userData"
	InstanceAttributeNameDisableApiTermination             InstanceAttributeName = "disableApiTermination"
	InstanceAttributeNameInstanceInitiatedShutdownBehavior InstanceAttributeName = "instanceInitiatedShutdownBehavior"
	InstanceAttributeNameRootDeviceName                    InstanceAttributeName = "rootDeviceName"
	InstanceAttributeNameBlockDeviceMapping                InstanceAttributeName = "blockDeviceMapping"
	InstanceAttributeNameProductCodes                      InstanceAttributeName = "productCodes"
	InstanceAttributeNameSourceDestCheck                   InstanceAttributeName = "sourceDestCheck"
	InstanceAttributeNameGroupSet                          InstanceAttributeName = "groupSet"
	InstanceAttributeNameEbsOptimized                      InstanceAttributeName = "ebsOptimized"
	InstanceAttributeNameSriovNetSupport                   InstanceAttributeName = "sriovNetSupport"
	InstanceAttributeNameEnaSupport                        InstanceAttributeName = "enaSupport"
)

func (enum InstanceAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceHealthStatus string

// Enum values for InstanceHealthStatus
const (
	InstanceHealthStatusHealthy   InstanceHealthStatus = "healthy"
	InstanceHealthStatusUnhealthy InstanceHealthStatus = "unhealthy"
)

func (enum InstanceHealthStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceHealthStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceInterruptionBehavior string

// Enum values for InstanceInterruptionBehavior
const (
	InstanceInterruptionBehaviorHibernate InstanceInterruptionBehavior = "hibernate"
	InstanceInterruptionBehaviorStop      InstanceInterruptionBehavior = "stop"
	InstanceInterruptionBehaviorTerminate InstanceInterruptionBehavior = "terminate"
)

func (enum InstanceInterruptionBehavior) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceInterruptionBehavior) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceLifecycle string

// Enum values for InstanceLifecycle
const (
	InstanceLifecycleSpot     InstanceLifecycle = "spot"
	InstanceLifecycleOnDemand InstanceLifecycle = "on-demand"
)

func (enum InstanceLifecycle) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceLifecycle) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceLifecycleType string

// Enum values for InstanceLifecycleType
const (
	InstanceLifecycleTypeSpot      InstanceLifecycleType = "spot"
	InstanceLifecycleTypeScheduled InstanceLifecycleType = "scheduled"
)

func (enum InstanceLifecycleType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceLifecycleType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceMatchCriteria string

// Enum values for InstanceMatchCriteria
const (
	InstanceMatchCriteriaOpen     InstanceMatchCriteria = "open"
	InstanceMatchCriteriaTargeted InstanceMatchCriteria = "targeted"
)

func (enum InstanceMatchCriteria) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceMatchCriteria) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceMetadataEndpointState string

// Enum values for InstanceMetadataEndpointState
const (
	InstanceMetadataEndpointStateDisabled InstanceMetadataEndpointState = "disabled"
	InstanceMetadataEndpointStateEnabled  InstanceMetadataEndpointState = "enabled"
)

func (enum InstanceMetadataEndpointState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceMetadataEndpointState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceMetadataOptionsState string

// Enum values for InstanceMetadataOptionsState
const (
	InstanceMetadataOptionsStatePending InstanceMetadataOptionsState = "pending"
	InstanceMetadataOptionsStateApplied InstanceMetadataOptionsState = "applied"
)

func (enum InstanceMetadataOptionsState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceMetadataOptionsState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceStateName string

// Enum values for InstanceStateName
const (
	InstanceStateNamePending      InstanceStateName = "pending"
	InstanceStateNameRunning      InstanceStateName = "running"
	InstanceStateNameShuttingDown InstanceStateName = "shutting-down"
	InstanceStateNameTerminated   InstanceStateName = "terminated"
	InstanceStateNameStopping     InstanceStateName = "stopping"
	InstanceStateNameStopped      InstanceStateName = "stopped"
)

func (enum InstanceStateName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceStateName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceType string

// Enum values for InstanceType
const (
	InstanceTypeT1Micro      InstanceType = "t1.micro"
	InstanceTypeT2Nano       InstanceType = "t2.nano"
	InstanceTypeT2Micro      InstanceType = "t2.micro"
	InstanceTypeT2Small      InstanceType = "t2.small"
	InstanceTypeT2Medium     InstanceType = "t2.medium"
	InstanceTypeT2Large      InstanceType = "t2.large"
	InstanceTypeT2Xlarge     InstanceType = "t2.xlarge"
	InstanceTypeT22xlarge    InstanceType = "t2.2xlarge"
	InstanceTypeT3Nano       InstanceType = "t3.nano"
	InstanceTypeT3Micro      InstanceType = "t3.micro"
	InstanceTypeT3Small      InstanceType = "t3.small"
	InstanceTypeT3Medium     InstanceType = "t3.medium"
	InstanceTypeT3Large      InstanceType = "t3.large"
	InstanceTypeT3Xlarge     InstanceType = "t3.xlarge"
	InstanceTypeT32xlarge    InstanceType = "t3.2xlarge"
	InstanceTypeT3aNano      InstanceType = "t3a.nano"
	InstanceTypeT3aMicro     InstanceType = "t3a.micro"
	InstanceTypeT3aSmall     InstanceType = "t3a.small"
	InstanceTypeT3aMedium    InstanceType = "t3a.medium"
	InstanceTypeT3aLarge     InstanceType = "t3a.large"
	InstanceTypeT3aXlarge    InstanceType = "t3a.xlarge"
	InstanceTypeT3a2xlarge   InstanceType = "t3a.2xlarge"
	InstanceTypeM1Small      InstanceType = "m1.small"
	InstanceTypeM1Medium     InstanceType = "m1.medium"
	InstanceTypeM1Large      InstanceType = "m1.large"
	InstanceTypeM1Xlarge     InstanceType = "m1.xlarge"
	InstanceTypeM3Medium     InstanceType = "m3.medium"
	InstanceTypeM3Large      InstanceType = "m3.large"
	InstanceTypeM3Xlarge     InstanceType = "m3.xlarge"
	InstanceTypeM32xlarge    InstanceType = "m3.2xlarge"
	InstanceTypeM4Large      InstanceType = "m4.large"
	InstanceTypeM4Xlarge     InstanceType = "m4.xlarge"
	InstanceTypeM42xlarge    InstanceType = "m4.2xlarge"
	InstanceTypeM44xlarge    InstanceType = "m4.4xlarge"
	InstanceTypeM410xlarge   InstanceType = "m4.10xlarge"
	InstanceTypeM416xlarge   InstanceType = "m4.16xlarge"
	InstanceTypeM2Xlarge     InstanceType = "m2.xlarge"
	InstanceTypeM22xlarge    InstanceType = "m2.2xlarge"
	InstanceTypeM24xlarge    InstanceType = "m2.4xlarge"
	InstanceTypeCr18xlarge   InstanceType = "cr1.8xlarge"
	InstanceTypeR3Large      InstanceType = "r3.large"
	InstanceTypeR3Xlarge     InstanceType = "r3.xlarge"
	InstanceTypeR32xlarge    InstanceType = "r3.2xlarge"
	InstanceTypeR34xlarge    InstanceType = "r3.4xlarge"
	InstanceTypeR38xlarge    InstanceType = "r3.8xlarge"
	InstanceTypeR4Large      InstanceType = "r4.large"
	InstanceTypeR4Xlarge     InstanceType = "r4.xlarge"
	InstanceTypeR42xlarge    InstanceType = "r4.2xlarge"
	InstanceTypeR44xlarge    InstanceType = "r4.4xlarge"
	InstanceTypeR48xlarge    InstanceType = "r4.8xlarge"
	InstanceTypeR416xlarge   InstanceType = "r4.16xlarge"
	InstanceTypeR5Large      InstanceType = "r5.large"
	InstanceTypeR5Xlarge     InstanceType = "r5.xlarge"
	InstanceTypeR52xlarge    InstanceType = "r5.2xlarge"
	InstanceTypeR54xlarge    InstanceType = "r5.4xlarge"
	InstanceTypeR58xlarge    InstanceType = "r5.8xlarge"
	InstanceTypeR512xlarge   InstanceType = "r5.12xlarge"
	InstanceTypeR516xlarge   InstanceType = "r5.16xlarge"
	InstanceTypeR524xlarge   InstanceType = "r5.24xlarge"
	InstanceTypeR5Metal      InstanceType = "r5.metal"
	InstanceTypeR5aLarge     InstanceType = "r5a.large"
	InstanceTypeR5aXlarge    InstanceType = "r5a.xlarge"
	InstanceTypeR5a2xlarge   InstanceType = "r5a.2xlarge"
	InstanceTypeR5a4xlarge   InstanceType = "r5a.4xlarge"
	InstanceTypeR5a8xlarge   InstanceType = "r5a.8xlarge"
	InstanceTypeR5a12xlarge  InstanceType = "r5a.12xlarge"
	InstanceTypeR5a16xlarge  InstanceType = "r5a.16xlarge"
	InstanceTypeR5a24xlarge  InstanceType = "r5a.24xlarge"
	InstanceTypeR5dLarge     InstanceType = "r5d.large"
	InstanceTypeR5dXlarge    InstanceType = "r5d.xlarge"
	InstanceTypeR5d2xlarge   InstanceType = "r5d.2xlarge"
	InstanceTypeR5d4xlarge   InstanceType = "r5d.4xlarge"
	InstanceTypeR5d8xlarge   InstanceType = "r5d.8xlarge"
	InstanceTypeR5d12xlarge  InstanceType = "r5d.12xlarge"
	InstanceTypeR5d16xlarge  InstanceType = "r5d.16xlarge"
	InstanceTypeR5d24xlarge  InstanceType = "r5d.24xlarge"
	InstanceTypeR5dMetal     InstanceType = "r5d.metal"
	InstanceTypeR5adLarge    InstanceType = "r5ad.large"
	InstanceTypeR5adXlarge   InstanceType = "r5ad.xlarge"
	InstanceTypeR5ad2xlarge  InstanceType = "r5ad.2xlarge"
	InstanceTypeR5ad4xlarge  InstanceType = "r5ad.4xlarge"
	InstanceTypeR5ad8xlarge  InstanceType = "r5ad.8xlarge"
	InstanceTypeR5ad12xlarge InstanceType = "r5ad.12xlarge"
	InstanceTypeR5ad16xlarge InstanceType = "r5ad.16xlarge"
	InstanceTypeR5ad24xlarge InstanceType = "r5ad.24xlarge"
	InstanceTypeR6gMetal     InstanceType = "r6g.metal"
	InstanceTypeR6gMedium    InstanceType = "r6g.medium"
	InstanceTypeR6gLarge     InstanceType = "r6g.large"
	InstanceTypeR6gXlarge    InstanceType = "r6g.xlarge"
	InstanceTypeR6g2xlarge   InstanceType = "r6g.2xlarge"
	InstanceTypeR6g4xlarge   InstanceType = "r6g.4xlarge"
	InstanceTypeR6g8xlarge   InstanceType = "r6g.8xlarge"
	InstanceTypeR6g12xlarge  InstanceType = "r6g.12xlarge"
	InstanceTypeR6g16xlarge  InstanceType = "r6g.16xlarge"
	InstanceTypeX116xlarge   InstanceType = "x1.16xlarge"
	InstanceTypeX132xlarge   InstanceType = "x1.32xlarge"
	InstanceTypeX1eXlarge    InstanceType = "x1e.xlarge"
	InstanceTypeX1e2xlarge   InstanceType = "x1e.2xlarge"
	InstanceTypeX1e4xlarge   InstanceType = "x1e.4xlarge"
	InstanceTypeX1e8xlarge   InstanceType = "x1e.8xlarge"
	InstanceTypeX1e16xlarge  InstanceType = "x1e.16xlarge"
	InstanceTypeX1e32xlarge  InstanceType = "x1e.32xlarge"
	InstanceTypeI2Xlarge     InstanceType = "i2.xlarge"
	InstanceTypeI22xlarge    InstanceType = "i2.2xlarge"
	InstanceTypeI24xlarge    InstanceType = "i2.4xlarge"
	InstanceTypeI28xlarge    InstanceType = "i2.8xlarge"
	InstanceTypeI3Large      InstanceType = "i3.large"
	InstanceTypeI3Xlarge     InstanceType = "i3.xlarge"
	InstanceTypeI32xlarge    InstanceType = "i3.2xlarge"
	InstanceTypeI34xlarge    InstanceType = "i3.4xlarge"
	InstanceTypeI38xlarge    InstanceType = "i3.8xlarge"
	InstanceTypeI316xlarge   InstanceType = "i3.16xlarge"
	InstanceTypeI3Metal      InstanceType = "i3.metal"
	InstanceTypeI3enLarge    InstanceType = "i3en.large"
	InstanceTypeI3enXlarge   InstanceType = "i3en.xlarge"
	InstanceTypeI3en2xlarge  InstanceType = "i3en.2xlarge"
	InstanceTypeI3en3xlarge  InstanceType = "i3en.3xlarge"
	InstanceTypeI3en6xlarge  InstanceType = "i3en.6xlarge"
	InstanceTypeI3en12xlarge InstanceType = "i3en.12xlarge"
	InstanceTypeI3en24xlarge InstanceType = "i3en.24xlarge"
	InstanceTypeI3enMetal    InstanceType = "i3en.metal"
	InstanceTypeHi14xlarge   InstanceType = "hi1.4xlarge"
	InstanceTypeHs18xlarge   InstanceType = "hs1.8xlarge"
	InstanceTypeC1Medium     InstanceType = "c1.medium"
	InstanceTypeC1Xlarge     InstanceType = "c1.xlarge"
	InstanceTypeC3Large      InstanceType = "c3.large"
	InstanceTypeC3Xlarge     InstanceType = "c3.xlarge"
	InstanceTypeC32xlarge    InstanceType = "c3.2xlarge"
	InstanceTypeC34xlarge    InstanceType = "c3.4xlarge"
	InstanceTypeC38xlarge    InstanceType = "c3.8xlarge"
	InstanceTypeC4Large      InstanceType = "c4.large"
	InstanceTypeC4Xlarge     InstanceType = "c4.xlarge"
	InstanceTypeC42xlarge    InstanceType = "c4.2xlarge"
	InstanceTypeC44xlarge    InstanceType = "c4.4xlarge"
	InstanceTypeC48xlarge    InstanceType = "c4.8xlarge"
	InstanceTypeC5Large      InstanceType = "c5.large"
	InstanceTypeC5Xlarge     InstanceType = "c5.xlarge"
	InstanceTypeC52xlarge    InstanceType = "c5.2xlarge"
	InstanceTypeC54xlarge    InstanceType = "c5.4xlarge"
	InstanceTypeC59xlarge    InstanceType = "c5.9xlarge"
	InstanceTypeC512xlarge   InstanceType = "c5.12xlarge"
	InstanceTypeC518xlarge   InstanceType = "c5.18xlarge"
	InstanceTypeC524xlarge   InstanceType = "c5.24xlarge"
	InstanceTypeC5Metal      InstanceType = "c5.metal"
	InstanceTypeC5aLarge     InstanceType = "c5a.large"
	InstanceTypeC5aXlarge    InstanceType = "c5a.xlarge"
	InstanceTypeC5a2xlarge   InstanceType = "c5a.2xlarge"
	InstanceTypeC5a4xlarge   InstanceType = "c5a.4xlarge"
	InstanceTypeC5a8xlarge   InstanceType = "c5a.8xlarge"
	InstanceTypeC5a12xlarge  InstanceType = "c5a.12xlarge"
	InstanceTypeC5a16xlarge  InstanceType = "c5a.16xlarge"
	InstanceTypeC5a24xlarge  InstanceType = "c5a.24xlarge"
	InstanceTypeC5dLarge     InstanceType = "c5d.large"
	InstanceTypeC5dXlarge    InstanceType = "c5d.xlarge"
	InstanceTypeC5d2xlarge   InstanceType = "c5d.2xlarge"
	InstanceTypeC5d4xlarge   InstanceType = "c5d.4xlarge"
	InstanceTypeC5d9xlarge   InstanceType = "c5d.9xlarge"
	InstanceTypeC5d12xlarge  InstanceType = "c5d.12xlarge"
	InstanceTypeC5d18xlarge  InstanceType = "c5d.18xlarge"
	InstanceTypeC5d24xlarge  InstanceType = "c5d.24xlarge"
	InstanceTypeC5dMetal     InstanceType = "c5d.metal"
	InstanceTypeC5nLarge     InstanceType = "c5n.large"
	InstanceTypeC5nXlarge    InstanceType = "c5n.xlarge"
	InstanceTypeC5n2xlarge   InstanceType = "c5n.2xlarge"
	InstanceTypeC5n4xlarge   InstanceType = "c5n.4xlarge"
	InstanceTypeC5n9xlarge   InstanceType = "c5n.9xlarge"
	InstanceTypeC5n18xlarge  InstanceType = "c5n.18xlarge"
	InstanceTypeC6gMetal     InstanceType = "c6g.metal"
	InstanceTypeC6gMedium    InstanceType = "c6g.medium"
	InstanceTypeC6gLarge     InstanceType = "c6g.large"
	InstanceTypeC6gXlarge    InstanceType = "c6g.xlarge"
	InstanceTypeC6g2xlarge   InstanceType = "c6g.2xlarge"
	InstanceTypeC6g4xlarge   InstanceType = "c6g.4xlarge"
	InstanceTypeC6g8xlarge   InstanceType = "c6g.8xlarge"
	InstanceTypeC6g12xlarge  InstanceType = "c6g.12xlarge"
	InstanceTypeC6g16xlarge  InstanceType = "c6g.16xlarge"
	InstanceTypeCc14xlarge   InstanceType = "cc1.4xlarge"
	InstanceTypeCc28xlarge   InstanceType = "cc2.8xlarge"
	InstanceTypeG22xlarge    InstanceType = "g2.2xlarge"
	InstanceTypeG28xlarge    InstanceType = "g2.8xlarge"
	InstanceTypeG34xlarge    InstanceType = "g3.4xlarge"
	InstanceTypeG38xlarge    InstanceType = "g3.8xlarge"
	InstanceTypeG316xlarge   InstanceType = "g3.16xlarge"
	InstanceTypeG3sXlarge    InstanceType = "g3s.xlarge"
	InstanceTypeG4dnXlarge   InstanceType = "g4dn.xlarge"
	InstanceTypeG4dn2xlarge  InstanceType = "g4dn.2xlarge"
	InstanceTypeG4dn4xlarge  InstanceType = "g4dn.4xlarge"
	InstanceTypeG4dn8xlarge  InstanceType = "g4dn.8xlarge"
	InstanceTypeG4dn12xlarge InstanceType = "g4dn.12xlarge"
	InstanceTypeG4dn16xlarge InstanceType = "g4dn.16xlarge"
	InstanceTypeG4dnMetal    InstanceType = "g4dn.metal"
	InstanceTypeCg14xlarge   InstanceType = "cg1.4xlarge"
	InstanceTypeP2Xlarge     InstanceType = "p2.xlarge"
	InstanceTypeP28xlarge    InstanceType = "p2.8xlarge"
	InstanceTypeP216xlarge   InstanceType = "p2.16xlarge"
	InstanceTypeP32xlarge    InstanceType = "p3.2xlarge"
	InstanceTypeP38xlarge    InstanceType = "p3.8xlarge"
	InstanceTypeP316xlarge   InstanceType = "p3.16xlarge"
	InstanceTypeP3dn24xlarge InstanceType = "p3dn.24xlarge"
	InstanceTypeD2Xlarge     InstanceType = "d2.xlarge"
	InstanceTypeD22xlarge    InstanceType = "d2.2xlarge"
	InstanceTypeD24xlarge    InstanceType = "d2.4xlarge"
	InstanceTypeD28xlarge    InstanceType = "d2.8xlarge"
	InstanceTypeF12xlarge    InstanceType = "f1.2xlarge"
	InstanceTypeF14xlarge    InstanceType = "f1.4xlarge"
	InstanceTypeF116xlarge   InstanceType = "f1.16xlarge"
	InstanceTypeM5Large      InstanceType = "m5.large"
	InstanceTypeM5Xlarge     InstanceType = "m5.xlarge"
	InstanceTypeM52xlarge    InstanceType = "m5.2xlarge"
	InstanceTypeM54xlarge    InstanceType = "m5.4xlarge"
	InstanceTypeM58xlarge    InstanceType = "m5.8xlarge"
	InstanceTypeM512xlarge   InstanceType = "m5.12xlarge"
	InstanceTypeM516xlarge   InstanceType = "m5.16xlarge"
	InstanceTypeM524xlarge   InstanceType = "m5.24xlarge"
	InstanceTypeM5Metal      InstanceType = "m5.metal"
	InstanceTypeM5aLarge     InstanceType = "m5a.large"
	InstanceTypeM5aXlarge    InstanceType = "m5a.xlarge"
	InstanceTypeM5a2xlarge   InstanceType = "m5a.2xlarge"
	InstanceTypeM5a4xlarge   InstanceType = "m5a.4xlarge"
	InstanceTypeM5a8xlarge   InstanceType = "m5a.8xlarge"
	InstanceTypeM5a12xlarge  InstanceType = "m5a.12xlarge"
	InstanceTypeM5a16xlarge  InstanceType = "m5a.16xlarge"
	InstanceTypeM5a24xlarge  InstanceType = "m5a.24xlarge"
	InstanceTypeM5dLarge     InstanceType = "m5d.large"
	InstanceTypeM5dXlarge    InstanceType = "m5d.xlarge"
	InstanceTypeM5d2xlarge   InstanceType = "m5d.2xlarge"
	InstanceTypeM5d4xlarge   InstanceType = "m5d.4xlarge"
	InstanceTypeM5d8xlarge   InstanceType = "m5d.8xlarge"
	InstanceTypeM5d12xlarge  InstanceType = "m5d.12xlarge"
	InstanceTypeM5d16xlarge  InstanceType = "m5d.16xlarge"
	InstanceTypeM5d24xlarge  InstanceType = "m5d.24xlarge"
	InstanceTypeM5dMetal     InstanceType = "m5d.metal"
	InstanceTypeM5adLarge    InstanceType = "m5ad.large"
	InstanceTypeM5adXlarge   InstanceType = "m5ad.xlarge"
	InstanceTypeM5ad2xlarge  InstanceType = "m5ad.2xlarge"
	InstanceTypeM5ad4xlarge  InstanceType = "m5ad.4xlarge"
	InstanceTypeM5ad8xlarge  InstanceType = "m5ad.8xlarge"
	InstanceTypeM5ad12xlarge InstanceType = "m5ad.12xlarge"
	InstanceTypeM5ad16xlarge InstanceType = "m5ad.16xlarge"
	InstanceTypeM5ad24xlarge InstanceType = "m5ad.24xlarge"
	InstanceTypeH12xlarge    InstanceType = "h1.2xlarge"
	InstanceTypeH14xlarge    InstanceType = "h1.4xlarge"
	InstanceTypeH18xlarge    InstanceType = "h1.8xlarge"
	InstanceTypeH116xlarge   InstanceType = "h1.16xlarge"
	InstanceTypeZ1dLarge     InstanceType = "z1d.large"
	InstanceTypeZ1dXlarge    InstanceType = "z1d.xlarge"
	InstanceTypeZ1d2xlarge   InstanceType = "z1d.2xlarge"
	InstanceTypeZ1d3xlarge   InstanceType = "z1d.3xlarge"
	InstanceTypeZ1d6xlarge   InstanceType = "z1d.6xlarge"
	InstanceTypeZ1d12xlarge  InstanceType = "z1d.12xlarge"
	InstanceTypeZ1dMetal     InstanceType = "z1d.metal"
	InstanceTypeU6tb1Metal   InstanceType = "u-6tb1.metal"
	InstanceTypeU9tb1Metal   InstanceType = "u-9tb1.metal"
	InstanceTypeU12tb1Metal  InstanceType = "u-12tb1.metal"
	InstanceTypeU18tb1Metal  InstanceType = "u-18tb1.metal"
	InstanceTypeU24tb1Metal  InstanceType = "u-24tb1.metal"
	InstanceTypeA1Medium     InstanceType = "a1.medium"
	InstanceTypeA1Large      InstanceType = "a1.large"
	InstanceTypeA1Xlarge     InstanceType = "a1.xlarge"
	InstanceTypeA12xlarge    InstanceType = "a1.2xlarge"
	InstanceTypeA14xlarge    InstanceType = "a1.4xlarge"
	InstanceTypeA1Metal      InstanceType = "a1.metal"
	InstanceTypeM5dnLarge    InstanceType = "m5dn.large"
	InstanceTypeM5dnXlarge   InstanceType = "m5dn.xlarge"
	InstanceTypeM5dn2xlarge  InstanceType = "m5dn.2xlarge"
	InstanceTypeM5dn4xlarge  InstanceType = "m5dn.4xlarge"
	InstanceTypeM5dn8xlarge  InstanceType = "m5dn.8xlarge"
	InstanceTypeM5dn12xlarge InstanceType = "m5dn.12xlarge"
	InstanceTypeM5dn16xlarge InstanceType = "m5dn.16xlarge"
	InstanceTypeM5dn24xlarge InstanceType = "m5dn.24xlarge"
	InstanceTypeM5nLarge     InstanceType = "m5n.large"
	InstanceTypeM5nXlarge    InstanceType = "m5n.xlarge"
	InstanceTypeM5n2xlarge   InstanceType = "m5n.2xlarge"
	InstanceTypeM5n4xlarge   InstanceType = "m5n.4xlarge"
	InstanceTypeM5n8xlarge   InstanceType = "m5n.8xlarge"
	InstanceTypeM5n12xlarge  InstanceType = "m5n.12xlarge"
	InstanceTypeM5n16xlarge  InstanceType = "m5n.16xlarge"
	InstanceTypeM5n24xlarge  InstanceType = "m5n.24xlarge"
	InstanceTypeR5dnLarge    InstanceType = "r5dn.large"
	InstanceTypeR5dnXlarge   InstanceType = "r5dn.xlarge"
	InstanceTypeR5dn2xlarge  InstanceType = "r5dn.2xlarge"
	InstanceTypeR5dn4xlarge  InstanceType = "r5dn.4xlarge"
	InstanceTypeR5dn8xlarge  InstanceType = "r5dn.8xlarge"
	InstanceTypeR5dn12xlarge InstanceType = "r5dn.12xlarge"
	InstanceTypeR5dn16xlarge InstanceType = "r5dn.16xlarge"
	InstanceTypeR5dn24xlarge InstanceType = "r5dn.24xlarge"
	InstanceTypeR5nLarge     InstanceType = "r5n.large"
	InstanceTypeR5nXlarge    InstanceType = "r5n.xlarge"
	InstanceTypeR5n2xlarge   InstanceType = "r5n.2xlarge"
	InstanceTypeR5n4xlarge   InstanceType = "r5n.4xlarge"
	InstanceTypeR5n8xlarge   InstanceType = "r5n.8xlarge"
	InstanceTypeR5n12xlarge  InstanceType = "r5n.12xlarge"
	InstanceTypeR5n16xlarge  InstanceType = "r5n.16xlarge"
	InstanceTypeR5n24xlarge  InstanceType = "r5n.24xlarge"
	InstanceTypeInf1Xlarge   InstanceType = "inf1.xlarge"
	InstanceTypeInf12xlarge  InstanceType = "inf1.2xlarge"
	InstanceTypeInf16xlarge  InstanceType = "inf1.6xlarge"
	InstanceTypeInf124xlarge InstanceType = "inf1.24xlarge"
	InstanceTypeM6gMetal     InstanceType = "m6g.metal"
	InstanceTypeM6gMedium    InstanceType = "m6g.medium"
	InstanceTypeM6gLarge     InstanceType = "m6g.large"
	InstanceTypeM6gXlarge    InstanceType = "m6g.xlarge"
	InstanceTypeM6g2xlarge   InstanceType = "m6g.2xlarge"
	InstanceTypeM6g4xlarge   InstanceType = "m6g.4xlarge"
	InstanceTypeM6g8xlarge   InstanceType = "m6g.8xlarge"
	InstanceTypeM6g12xlarge  InstanceType = "m6g.12xlarge"
	InstanceTypeM6g16xlarge  InstanceType = "m6g.16xlarge"
)

func (enum InstanceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InstanceTypeHypervisor string

// Enum values for InstanceTypeHypervisor
const (
	InstanceTypeHypervisorNitro InstanceTypeHypervisor = "nitro"
	InstanceTypeHypervisorXen   InstanceTypeHypervisor = "xen"
)

func (enum InstanceTypeHypervisor) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InstanceTypeHypervisor) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type InterfacePermissionType string

// Enum values for InterfacePermissionType
const (
	InterfacePermissionTypeInstanceAttach InterfacePermissionType = "INSTANCE-ATTACH"
	InterfacePermissionTypeEipAssociate   InterfacePermissionType = "EIP-ASSOCIATE"
)

func (enum InterfacePermissionType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum InterfacePermissionType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Ipv6SupportValue string

// Enum values for Ipv6SupportValue
const (
	Ipv6SupportValueEnable  Ipv6SupportValue = "enable"
	Ipv6SupportValueDisable Ipv6SupportValue = "disable"
)

func (enum Ipv6SupportValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Ipv6SupportValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LaunchTemplateErrorCode string

// Enum values for LaunchTemplateErrorCode
const (
	LaunchTemplateErrorCodeLaunchTemplateIdDoesNotExist      LaunchTemplateErrorCode = "launchTemplateIdDoesNotExist"
	LaunchTemplateErrorCodeLaunchTemplateIdMalformed         LaunchTemplateErrorCode = "launchTemplateIdMalformed"
	LaunchTemplateErrorCodeLaunchTemplateNameDoesNotExist    LaunchTemplateErrorCode = "launchTemplateNameDoesNotExist"
	LaunchTemplateErrorCodeLaunchTemplateNameMalformed       LaunchTemplateErrorCode = "launchTemplateNameMalformed"
	LaunchTemplateErrorCodeLaunchTemplateVersionDoesNotExist LaunchTemplateErrorCode = "launchTemplateVersionDoesNotExist"
	LaunchTemplateErrorCodeUnexpectedError                   LaunchTemplateErrorCode = "unexpectedError"
)

func (enum LaunchTemplateErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LaunchTemplateErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LaunchTemplateHttpTokensState string

// Enum values for LaunchTemplateHttpTokensState
const (
	LaunchTemplateHttpTokensStateOptional LaunchTemplateHttpTokensState = "optional"
	LaunchTemplateHttpTokensStateRequired LaunchTemplateHttpTokensState = "required"
)

func (enum LaunchTemplateHttpTokensState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LaunchTemplateHttpTokensState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LaunchTemplateInstanceMetadataEndpointState string

// Enum values for LaunchTemplateInstanceMetadataEndpointState
const (
	LaunchTemplateInstanceMetadataEndpointStateDisabled LaunchTemplateInstanceMetadataEndpointState = "disabled"
	LaunchTemplateInstanceMetadataEndpointStateEnabled  LaunchTemplateInstanceMetadataEndpointState = "enabled"
)

func (enum LaunchTemplateInstanceMetadataEndpointState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LaunchTemplateInstanceMetadataEndpointState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LaunchTemplateInstanceMetadataOptionsState string

// Enum values for LaunchTemplateInstanceMetadataOptionsState
const (
	LaunchTemplateInstanceMetadataOptionsStatePending LaunchTemplateInstanceMetadataOptionsState = "pending"
	LaunchTemplateInstanceMetadataOptionsStateApplied LaunchTemplateInstanceMetadataOptionsState = "applied"
)

func (enum LaunchTemplateInstanceMetadataOptionsState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LaunchTemplateInstanceMetadataOptionsState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ListingState string

// Enum values for ListingState
const (
	ListingStateAvailable ListingState = "available"
	ListingStateSold      ListingState = "sold"
	ListingStateCancelled ListingState = "cancelled"
	ListingStatePending   ListingState = "pending"
)

func (enum ListingState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ListingState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ListingStatus string

// Enum values for ListingStatus
const (
	ListingStatusActive    ListingStatus = "active"
	ListingStatusPending   ListingStatus = "pending"
	ListingStatusCancelled ListingStatus = "cancelled"
	ListingStatusClosed    ListingStatus = "closed"
)

func (enum ListingStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ListingStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LocalGatewayRouteState string

// Enum values for LocalGatewayRouteState
const (
	LocalGatewayRouteStatePending   LocalGatewayRouteState = "pending"
	LocalGatewayRouteStateActive    LocalGatewayRouteState = "active"
	LocalGatewayRouteStateBlackhole LocalGatewayRouteState = "blackhole"
	LocalGatewayRouteStateDeleting  LocalGatewayRouteState = "deleting"
	LocalGatewayRouteStateDeleted   LocalGatewayRouteState = "deleted"
)

func (enum LocalGatewayRouteState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LocalGatewayRouteState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LocalGatewayRouteType string

// Enum values for LocalGatewayRouteType
const (
	LocalGatewayRouteTypeStatic     LocalGatewayRouteType = "static"
	LocalGatewayRouteTypePropagated LocalGatewayRouteType = "propagated"
)

func (enum LocalGatewayRouteType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LocalGatewayRouteType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LocationType string

// Enum values for LocationType
const (
	LocationTypeRegion             LocationType = "region"
	LocationTypeAvailabilityZone   LocationType = "availability-zone"
	LocationTypeAvailabilityZoneId LocationType = "availability-zone-id"
)

func (enum LocationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LocationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type LogDestinationType string

// Enum values for LogDestinationType
const (
	LogDestinationTypeCloudWatchLogs LogDestinationType = "cloud-watch-logs"
	LogDestinationTypeS3             LogDestinationType = "s3"
)

func (enum LogDestinationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum LogDestinationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MarketType string

// Enum values for MarketType
const (
	MarketTypeSpot MarketType = "spot"
)

func (enum MarketType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MarketType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MembershipType string

// Enum values for MembershipType
const (
	MembershipTypeStatic MembershipType = "static"
	MembershipTypeIgmp   MembershipType = "igmp"
)

func (enum MembershipType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MembershipType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ModifyAvailabilityZoneOptInStatus string

// Enum values for ModifyAvailabilityZoneOptInStatus
const (
	ModifyAvailabilityZoneOptInStatusOptedIn    ModifyAvailabilityZoneOptInStatus = "opted-in"
	ModifyAvailabilityZoneOptInStatusNotOptedIn ModifyAvailabilityZoneOptInStatus = "not-opted-in"
)

func (enum ModifyAvailabilityZoneOptInStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ModifyAvailabilityZoneOptInStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MonitoringState string

// Enum values for MonitoringState
const (
	MonitoringStateDisabled  MonitoringState = "disabled"
	MonitoringStateDisabling MonitoringState = "disabling"
	MonitoringStateEnabled   MonitoringState = "enabled"
	MonitoringStatePending   MonitoringState = "pending"
)

func (enum MonitoringState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MonitoringState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MoveStatus string

// Enum values for MoveStatus
const (
	MoveStatusMovingToVpc        MoveStatus = "movingToVpc"
	MoveStatusRestoringToClassic MoveStatus = "restoringToClassic"
)

func (enum MoveStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MoveStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type MulticastSupportValue string

// Enum values for MulticastSupportValue
const (
	MulticastSupportValueEnable  MulticastSupportValue = "enable"
	MulticastSupportValueDisable MulticastSupportValue = "disable"
)

func (enum MulticastSupportValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum MulticastSupportValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NatGatewayState string

// Enum values for NatGatewayState
const (
	NatGatewayStatePending   NatGatewayState = "pending"
	NatGatewayStateFailed    NatGatewayState = "failed"
	NatGatewayStateAvailable NatGatewayState = "available"
	NatGatewayStateDeleting  NatGatewayState = "deleting"
	NatGatewayStateDeleted   NatGatewayState = "deleted"
)

func (enum NatGatewayState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NatGatewayState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NetworkInterfaceAttribute string

// Enum values for NetworkInterfaceAttribute
const (
	NetworkInterfaceAttributeDescription     NetworkInterfaceAttribute = "description"
	NetworkInterfaceAttributeGroupSet        NetworkInterfaceAttribute = "groupSet"
	NetworkInterfaceAttributeSourceDestCheck NetworkInterfaceAttribute = "sourceDestCheck"
	NetworkInterfaceAttributeAttachment      NetworkInterfaceAttribute = "attachment"
)

func (enum NetworkInterfaceAttribute) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NetworkInterfaceAttribute) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NetworkInterfaceCreationType string

// Enum values for NetworkInterfaceCreationType
const (
	NetworkInterfaceCreationTypeEfa NetworkInterfaceCreationType = "efa"
)

func (enum NetworkInterfaceCreationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NetworkInterfaceCreationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NetworkInterfacePermissionStateCode string

// Enum values for NetworkInterfacePermissionStateCode
const (
	NetworkInterfacePermissionStateCodePending  NetworkInterfacePermissionStateCode = "pending"
	NetworkInterfacePermissionStateCodeGranted  NetworkInterfacePermissionStateCode = "granted"
	NetworkInterfacePermissionStateCodeRevoking NetworkInterfacePermissionStateCode = "revoking"
	NetworkInterfacePermissionStateCodeRevoked  NetworkInterfacePermissionStateCode = "revoked"
)

func (enum NetworkInterfacePermissionStateCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NetworkInterfacePermissionStateCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NetworkInterfaceStatus string

// Enum values for NetworkInterfaceStatus
const (
	NetworkInterfaceStatusAvailable  NetworkInterfaceStatus = "available"
	NetworkInterfaceStatusAssociated NetworkInterfaceStatus = "associated"
	NetworkInterfaceStatusAttaching  NetworkInterfaceStatus = "attaching"
	NetworkInterfaceStatusInUse      NetworkInterfaceStatus = "in-use"
	NetworkInterfaceStatusDetaching  NetworkInterfaceStatus = "detaching"
)

func (enum NetworkInterfaceStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NetworkInterfaceStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type NetworkInterfaceType string

// Enum values for NetworkInterfaceType
const (
	NetworkInterfaceTypeInterface  NetworkInterfaceType = "interface"
	NetworkInterfaceTypeNatGateway NetworkInterfaceType = "natGateway"
	NetworkInterfaceTypeEfa        NetworkInterfaceType = "efa"
)

func (enum NetworkInterfaceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum NetworkInterfaceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OfferingClassType string

// Enum values for OfferingClassType
const (
	OfferingClassTypeStandard    OfferingClassType = "standard"
	OfferingClassTypeConvertible OfferingClassType = "convertible"
)

func (enum OfferingClassType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OfferingClassType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OfferingTypeValues string

// Enum values for OfferingTypeValues
const (
	OfferingTypeValuesHeavyUtilization  OfferingTypeValues = "Heavy Utilization"
	OfferingTypeValuesMediumUtilization OfferingTypeValues = "Medium Utilization"
	OfferingTypeValuesLightUtilization  OfferingTypeValues = "Light Utilization"
	OfferingTypeValuesNoUpfront         OfferingTypeValues = "No Upfront"
	OfferingTypeValuesPartialUpfront    OfferingTypeValues = "Partial Upfront"
	OfferingTypeValuesAllUpfront        OfferingTypeValues = "All Upfront"
)

func (enum OfferingTypeValues) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OfferingTypeValues) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OnDemandAllocationStrategy string

// Enum values for OnDemandAllocationStrategy
const (
	OnDemandAllocationStrategyLowestPrice OnDemandAllocationStrategy = "lowestPrice"
	OnDemandAllocationStrategyPrioritized OnDemandAllocationStrategy = "prioritized"
)

func (enum OnDemandAllocationStrategy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OnDemandAllocationStrategy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type OperationType string

// Enum values for OperationType
const (
	OperationTypeAdd    OperationType = "add"
	OperationTypeRemove OperationType = "remove"
)

func (enum OperationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum OperationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PaymentOption string

// Enum values for PaymentOption
const (
	PaymentOptionAllUpfront     PaymentOption = "AllUpfront"
	PaymentOptionPartialUpfront PaymentOption = "PartialUpfront"
	PaymentOptionNoUpfront      PaymentOption = "NoUpfront"
)

func (enum PaymentOption) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PaymentOption) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PermissionGroup string

// Enum values for PermissionGroup
const (
	PermissionGroupAll PermissionGroup = "all"
)

func (enum PermissionGroup) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PermissionGroup) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PlacementGroupState string

// Enum values for PlacementGroupState
const (
	PlacementGroupStatePending   PlacementGroupState = "pending"
	PlacementGroupStateAvailable PlacementGroupState = "available"
	PlacementGroupStateDeleting  PlacementGroupState = "deleting"
	PlacementGroupStateDeleted   PlacementGroupState = "deleted"
)

func (enum PlacementGroupState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PlacementGroupState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PlacementGroupStrategy string

// Enum values for PlacementGroupStrategy
const (
	PlacementGroupStrategyCluster   PlacementGroupStrategy = "cluster"
	PlacementGroupStrategyPartition PlacementGroupStrategy = "partition"
	PlacementGroupStrategySpread    PlacementGroupStrategy = "spread"
)

func (enum PlacementGroupStrategy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PlacementGroupStrategy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PlacementStrategy string

// Enum values for PlacementStrategy
const (
	PlacementStrategyCluster   PlacementStrategy = "cluster"
	PlacementStrategySpread    PlacementStrategy = "spread"
	PlacementStrategyPartition PlacementStrategy = "partition"
)

func (enum PlacementStrategy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PlacementStrategy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PlatformValues string

// Enum values for PlatformValues
const (
	PlatformValuesWindows PlatformValues = "Windows"
)

func (enum PlatformValues) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PlatformValues) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PrefixListState string

// Enum values for PrefixListState
const (
	PrefixListStateCreateInProgress  PrefixListState = "create-in-progress"
	PrefixListStateCreateComplete    PrefixListState = "create-complete"
	PrefixListStateCreateFailed      PrefixListState = "create-failed"
	PrefixListStateModifyInProgress  PrefixListState = "modify-in-progress"
	PrefixListStateModifyComplete    PrefixListState = "modify-complete"
	PrefixListStateModifyFailed      PrefixListState = "modify-failed"
	PrefixListStateRestoreInProgress PrefixListState = "restore-in-progress"
	PrefixListStateRestoreComplete   PrefixListState = "restore-complete"
	PrefixListStateRestoreFailed     PrefixListState = "restore-failed"
	PrefixListStateDeleteInProgress  PrefixListState = "delete-in-progress"
	PrefixListStateDeleteComplete    PrefixListState = "delete-complete"
	PrefixListStateDeleteFailed      PrefixListState = "delete-failed"
)

func (enum PrefixListState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PrefixListState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type PrincipalType string

// Enum values for PrincipalType
const (
	PrincipalTypeAll              PrincipalType = "All"
	PrincipalTypeService          PrincipalType = "Service"
	PrincipalTypeOrganizationUnit PrincipalType = "OrganizationUnit"
	PrincipalTypeAccount          PrincipalType = "Account"
	PrincipalTypeUser             PrincipalType = "User"
	PrincipalTypeRole             PrincipalType = "Role"
)

func (enum PrincipalType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum PrincipalType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ProductCodeValues string

// Enum values for ProductCodeValues
const (
	ProductCodeValuesDevpay      ProductCodeValues = "devpay"
	ProductCodeValuesMarketplace ProductCodeValues = "marketplace"
)

func (enum ProductCodeValues) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ProductCodeValues) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RIProductDescription string

// Enum values for RIProductDescription
const (
	RIProductDescriptionLinuxUnix          RIProductDescription = "Linux/UNIX"
	RIProductDescriptionLinuxUnixamazonVpc RIProductDescription = "Linux/UNIX (Amazon VPC)"
	RIProductDescriptionWindows            RIProductDescription = "Windows"
	RIProductDescriptionWindowsAmazonVpc   RIProductDescription = "Windows (Amazon VPC)"
)

func (enum RIProductDescription) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RIProductDescription) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RecurringChargeFrequency string

// Enum values for RecurringChargeFrequency
const (
	RecurringChargeFrequencyHourly RecurringChargeFrequency = "Hourly"
)

func (enum RecurringChargeFrequency) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RecurringChargeFrequency) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReportInstanceReasonCodes string

// Enum values for ReportInstanceReasonCodes
const (
	ReportInstanceReasonCodesInstanceStuckInState     ReportInstanceReasonCodes = "instance-stuck-in-state"
	ReportInstanceReasonCodesUnresponsive             ReportInstanceReasonCodes = "unresponsive"
	ReportInstanceReasonCodesNotAcceptingCredentials  ReportInstanceReasonCodes = "not-accepting-credentials"
	ReportInstanceReasonCodesPasswordNotAvailable     ReportInstanceReasonCodes = "password-not-available"
	ReportInstanceReasonCodesPerformanceNetwork       ReportInstanceReasonCodes = "performance-network"
	ReportInstanceReasonCodesPerformanceInstanceStore ReportInstanceReasonCodes = "performance-instance-store"
	ReportInstanceReasonCodesPerformanceEbsVolume     ReportInstanceReasonCodes = "performance-ebs-volume"
	ReportInstanceReasonCodesPerformanceOther         ReportInstanceReasonCodes = "performance-other"
	ReportInstanceReasonCodesOther                    ReportInstanceReasonCodes = "other"
)

func (enum ReportInstanceReasonCodes) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReportInstanceReasonCodes) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReportStatusType string

// Enum values for ReportStatusType
const (
	ReportStatusTypeOk       ReportStatusType = "ok"
	ReportStatusTypeImpaired ReportStatusType = "impaired"
)

func (enum ReportStatusType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReportStatusType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReservationState string

// Enum values for ReservationState
const (
	ReservationStatePaymentPending ReservationState = "payment-pending"
	ReservationStatePaymentFailed  ReservationState = "payment-failed"
	ReservationStateActive         ReservationState = "active"
	ReservationStateRetired        ReservationState = "retired"
)

func (enum ReservationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReservationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ReservedInstanceState string

// Enum values for ReservedInstanceState
const (
	ReservedInstanceStatePaymentPending ReservedInstanceState = "payment-pending"
	ReservedInstanceStateActive         ReservedInstanceState = "active"
	ReservedInstanceStatePaymentFailed  ReservedInstanceState = "payment-failed"
	ReservedInstanceStateRetired        ReservedInstanceState = "retired"
	ReservedInstanceStateQueued         ReservedInstanceState = "queued"
	ReservedInstanceStateQueuedDeleted  ReservedInstanceState = "queued-deleted"
)

func (enum ReservedInstanceState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ReservedInstanceState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResetFpgaImageAttributeName string

// Enum values for ResetFpgaImageAttributeName
const (
	ResetFpgaImageAttributeNameLoadPermission ResetFpgaImageAttributeName = "loadPermission"
)

func (enum ResetFpgaImageAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResetFpgaImageAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResetImageAttributeName string

// Enum values for ResetImageAttributeName
const (
	ResetImageAttributeNameLaunchPermission ResetImageAttributeName = "launchPermission"
)

func (enum ResetImageAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResetImageAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ResourceType string

// Enum values for ResourceType
const (
	ResourceTypeClientVpnEndpoint                    ResourceType = "client-vpn-endpoint"
	ResourceTypeCustomerGateway                      ResourceType = "customer-gateway"
	ResourceTypeDedicatedHost                        ResourceType = "dedicated-host"
	ResourceTypeDhcpOptions                          ResourceType = "dhcp-options"
	ResourceTypeElasticIp                            ResourceType = "elastic-ip"
	ResourceTypeElasticGpu                           ResourceType = "elastic-gpu"
	ResourceTypeExportImageTask                      ResourceType = "export-image-task"
	ResourceTypeExportInstanceTask                   ResourceType = "export-instance-task"
	ResourceTypeFleet                                ResourceType = "fleet"
	ResourceTypeFpgaImage                            ResourceType = "fpga-image"
	ResourceTypeHostReservation                      ResourceType = "host-reservation"
	ResourceTypeImage                                ResourceType = "image"
	ResourceTypeImportImageTask                      ResourceType = "import-image-task"
	ResourceTypeImportSnapshotTask                   ResourceType = "import-snapshot-task"
	ResourceTypeInstance                             ResourceType = "instance"
	ResourceTypeInternetGateway                      ResourceType = "internet-gateway"
	ResourceTypeKeyPair                              ResourceType = "key-pair"
	ResourceTypeLaunchTemplate                       ResourceType = "launch-template"
	ResourceTypeLocalGatewayRouteTableVpcAssociation ResourceType = "local-gateway-route-table-vpc-association"
	ResourceTypeNatgateway                           ResourceType = "natgateway"
	ResourceTypeNetworkAcl                           ResourceType = "network-acl"
	ResourceTypeNetworkInterface                     ResourceType = "network-interface"
	ResourceTypePlacementGroup                       ResourceType = "placement-group"
	ResourceTypeReservedInstances                    ResourceType = "reserved-instances"
	ResourceTypeRouteTable                           ResourceType = "route-table"
	ResourceTypeSecurityGroup                        ResourceType = "security-group"
	ResourceTypeSnapshot                             ResourceType = "snapshot"
	ResourceTypeSpotFleetRequest                     ResourceType = "spot-fleet-request"
	ResourceTypeSpotInstancesRequest                 ResourceType = "spot-instances-request"
	ResourceTypeSubnet                               ResourceType = "subnet"
	ResourceTypeTrafficMirrorFilter                  ResourceType = "traffic-mirror-filter"
	ResourceTypeTrafficMirrorSession                 ResourceType = "traffic-mirror-session"
	ResourceTypeTrafficMirrorTarget                  ResourceType = "traffic-mirror-target"
	ResourceTypeTransitGateway                       ResourceType = "transit-gateway"
	ResourceTypeTransitGatewayAttachment             ResourceType = "transit-gateway-attachment"
	ResourceTypeTransitGatewayMulticastDomain        ResourceType = "transit-gateway-multicast-domain"
	ResourceTypeTransitGatewayRouteTable             ResourceType = "transit-gateway-route-table"
	ResourceTypeVolume                               ResourceType = "volume"
	ResourceTypeVpc                                  ResourceType = "vpc"
	ResourceTypeVpcPeeringConnection                 ResourceType = "vpc-peering-connection"
	ResourceTypeVpnConnection                        ResourceType = "vpn-connection"
	ResourceTypeVpnGateway                           ResourceType = "vpn-gateway"
	ResourceTypeVpcFlowLog                           ResourceType = "vpc-flow-log"
)

func (enum ResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RootDeviceType string

// Enum values for RootDeviceType
const (
	RootDeviceTypeEbs           RootDeviceType = "ebs"
	RootDeviceTypeInstanceStore RootDeviceType = "instance-store"
)

func (enum RootDeviceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RootDeviceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RouteOrigin string

// Enum values for RouteOrigin
const (
	RouteOriginCreateRouteTable          RouteOrigin = "CreateRouteTable"
	RouteOriginCreateRoute               RouteOrigin = "CreateRoute"
	RouteOriginEnableVgwRoutePropagation RouteOrigin = "EnableVgwRoutePropagation"
)

func (enum RouteOrigin) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RouteOrigin) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RouteState string

// Enum values for RouteState
const (
	RouteStateActive    RouteState = "active"
	RouteStateBlackhole RouteState = "blackhole"
)

func (enum RouteState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RouteState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RouteTableAssociationStateCode string

// Enum values for RouteTableAssociationStateCode
const (
	RouteTableAssociationStateCodeAssociating    RouteTableAssociationStateCode = "associating"
	RouteTableAssociationStateCodeAssociated     RouteTableAssociationStateCode = "associated"
	RouteTableAssociationStateCodeDisassociating RouteTableAssociationStateCode = "disassociating"
	RouteTableAssociationStateCodeDisassociated  RouteTableAssociationStateCode = "disassociated"
	RouteTableAssociationStateCodeFailed         RouteTableAssociationStateCode = "failed"
)

func (enum RouteTableAssociationStateCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RouteTableAssociationStateCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type RuleAction string

// Enum values for RuleAction
const (
	RuleActionAllow RuleAction = "allow"
	RuleActionDeny  RuleAction = "deny"
)

func (enum RuleAction) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum RuleAction) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Scope string

// Enum values for Scope
const (
	ScopeAvailabilityZone Scope = "Availability Zone"
	ScopeRegion           Scope = "Region"
)

func (enum Scope) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Scope) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ServiceState string

// Enum values for ServiceState
const (
	ServiceStatePending   ServiceState = "Pending"
	ServiceStateAvailable ServiceState = "Available"
	ServiceStateDeleting  ServiceState = "Deleting"
	ServiceStateDeleted   ServiceState = "Deleted"
	ServiceStateFailed    ServiceState = "Failed"
)

func (enum ServiceState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ServiceState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ServiceType string

// Enum values for ServiceType
const (
	ServiceTypeInterface ServiceType = "Interface"
	ServiceTypeGateway   ServiceType = "Gateway"
)

func (enum ServiceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ServiceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type ShutdownBehavior string

// Enum values for ShutdownBehavior
const (
	ShutdownBehaviorStop      ShutdownBehavior = "stop"
	ShutdownBehaviorTerminate ShutdownBehavior = "terminate"
)

func (enum ShutdownBehavior) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum ShutdownBehavior) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SnapshotAttributeName string

// Enum values for SnapshotAttributeName
const (
	SnapshotAttributeNameProductCodes           SnapshotAttributeName = "productCodes"
	SnapshotAttributeNameCreateVolumePermission SnapshotAttributeName = "createVolumePermission"
)

func (enum SnapshotAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SnapshotAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SnapshotState string

// Enum values for SnapshotState
const (
	SnapshotStatePending   SnapshotState = "pending"
	SnapshotStateCompleted SnapshotState = "completed"
	SnapshotStateError     SnapshotState = "error"
)

func (enum SnapshotState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SnapshotState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SpotAllocationStrategy string

// Enum values for SpotAllocationStrategy
const (
	SpotAllocationStrategyLowestPrice       SpotAllocationStrategy = "lowest-price"
	SpotAllocationStrategyDiversified       SpotAllocationStrategy = "diversified"
	SpotAllocationStrategyCapacityOptimized SpotAllocationStrategy = "capacity-optimized"
)

func (enum SpotAllocationStrategy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SpotAllocationStrategy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SpotInstanceInterruptionBehavior string

// Enum values for SpotInstanceInterruptionBehavior
const (
	SpotInstanceInterruptionBehaviorHibernate SpotInstanceInterruptionBehavior = "hibernate"
	SpotInstanceInterruptionBehaviorStop      SpotInstanceInterruptionBehavior = "stop"
	SpotInstanceInterruptionBehaviorTerminate SpotInstanceInterruptionBehavior = "terminate"
)

func (enum SpotInstanceInterruptionBehavior) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SpotInstanceInterruptionBehavior) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SpotInstanceState string

// Enum values for SpotInstanceState
const (
	SpotInstanceStateOpen      SpotInstanceState = "open"
	SpotInstanceStateActive    SpotInstanceState = "active"
	SpotInstanceStateClosed    SpotInstanceState = "closed"
	SpotInstanceStateCancelled SpotInstanceState = "cancelled"
	SpotInstanceStateFailed    SpotInstanceState = "failed"
)

func (enum SpotInstanceState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SpotInstanceState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SpotInstanceType string

// Enum values for SpotInstanceType
const (
	SpotInstanceTypeOneTime    SpotInstanceType = "one-time"
	SpotInstanceTypePersistent SpotInstanceType = "persistent"
)

func (enum SpotInstanceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SpotInstanceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type State string

// Enum values for State
const (
	StatePendingAcceptance State = "PendingAcceptance"
	StatePending           State = "Pending"
	StateAvailable         State = "Available"
	StateDeleting          State = "Deleting"
	StateDeleted           State = "Deleted"
	StateRejected          State = "Rejected"
	StateFailed            State = "Failed"
	StateExpired           State = "Expired"
)

func (enum State) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum State) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Status string

// Enum values for Status
const (
	StatusMoveInProgress Status = "MoveInProgress"
	StatusInVpc          Status = "InVpc"
	StatusInClassic      Status = "InClassic"
)

func (enum Status) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Status) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StatusName string

// Enum values for StatusName
const (
	StatusNameReachability StatusName = "reachability"
)

func (enum StatusName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StatusName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type StatusType string

// Enum values for StatusType
const (
	StatusTypePassed           StatusType = "passed"
	StatusTypeFailed           StatusType = "failed"
	StatusTypeInsufficientData StatusType = "insufficient-data"
	StatusTypeInitializing     StatusType = "initializing"
)

func (enum StatusType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum StatusType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SubnetCidrBlockStateCode string

// Enum values for SubnetCidrBlockStateCode
const (
	SubnetCidrBlockStateCodeAssociating    SubnetCidrBlockStateCode = "associating"
	SubnetCidrBlockStateCodeAssociated     SubnetCidrBlockStateCode = "associated"
	SubnetCidrBlockStateCodeDisassociating SubnetCidrBlockStateCode = "disassociating"
	SubnetCidrBlockStateCodeDisassociated  SubnetCidrBlockStateCode = "disassociated"
	SubnetCidrBlockStateCodeFailing        SubnetCidrBlockStateCode = "failing"
	SubnetCidrBlockStateCodeFailed         SubnetCidrBlockStateCode = "failed"
)

func (enum SubnetCidrBlockStateCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SubnetCidrBlockStateCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SubnetState string

// Enum values for SubnetState
const (
	SubnetStatePending   SubnetState = "pending"
	SubnetStateAvailable SubnetState = "available"
)

func (enum SubnetState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SubnetState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type SummaryStatus string

// Enum values for SummaryStatus
const (
	SummaryStatusOk               SummaryStatus = "ok"
	SummaryStatusImpaired         SummaryStatus = "impaired"
	SummaryStatusInsufficientData SummaryStatus = "insufficient-data"
	SummaryStatusNotApplicable    SummaryStatus = "not-applicable"
	SummaryStatusInitializing     SummaryStatus = "initializing"
)

func (enum SummaryStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum SummaryStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TelemetryStatus string

// Enum values for TelemetryStatus
const (
	TelemetryStatusUp   TelemetryStatus = "UP"
	TelemetryStatusDown TelemetryStatus = "DOWN"
)

func (enum TelemetryStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TelemetryStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type Tenancy string

// Enum values for Tenancy
const (
	TenancyDefault   Tenancy = "default"
	TenancyDedicated Tenancy = "dedicated"
	TenancyHost      Tenancy = "host"
)

func (enum Tenancy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum Tenancy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TrafficDirection string

// Enum values for TrafficDirection
const (
	TrafficDirectionIngress TrafficDirection = "ingress"
	TrafficDirectionEgress  TrafficDirection = "egress"
)

func (enum TrafficDirection) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TrafficDirection) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TrafficMirrorFilterRuleField string

// Enum values for TrafficMirrorFilterRuleField
const (
	TrafficMirrorFilterRuleFieldDestinationPortRange TrafficMirrorFilterRuleField = "destination-port-range"
	TrafficMirrorFilterRuleFieldSourcePortRange      TrafficMirrorFilterRuleField = "source-port-range"
	TrafficMirrorFilterRuleFieldProtocol             TrafficMirrorFilterRuleField = "protocol"
	TrafficMirrorFilterRuleFieldDescription          TrafficMirrorFilterRuleField = "description"
)

func (enum TrafficMirrorFilterRuleField) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TrafficMirrorFilterRuleField) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TrafficMirrorNetworkService string

// Enum values for TrafficMirrorNetworkService
const (
	TrafficMirrorNetworkServiceAmazonDns TrafficMirrorNetworkService = "amazon-dns"
)

func (enum TrafficMirrorNetworkService) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TrafficMirrorNetworkService) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TrafficMirrorRuleAction string

// Enum values for TrafficMirrorRuleAction
const (
	TrafficMirrorRuleActionAccept TrafficMirrorRuleAction = "accept"
	TrafficMirrorRuleActionReject TrafficMirrorRuleAction = "reject"
)

func (enum TrafficMirrorRuleAction) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TrafficMirrorRuleAction) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TrafficMirrorSessionField string

// Enum values for TrafficMirrorSessionField
const (
	TrafficMirrorSessionFieldPacketLength     TrafficMirrorSessionField = "packet-length"
	TrafficMirrorSessionFieldDescription      TrafficMirrorSessionField = "description"
	TrafficMirrorSessionFieldVirtualNetworkId TrafficMirrorSessionField = "virtual-network-id"
)

func (enum TrafficMirrorSessionField) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TrafficMirrorSessionField) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TrafficMirrorTargetType string

// Enum values for TrafficMirrorTargetType
const (
	TrafficMirrorTargetTypeNetworkInterface    TrafficMirrorTargetType = "network-interface"
	TrafficMirrorTargetTypeNetworkLoadBalancer TrafficMirrorTargetType = "network-load-balancer"
)

func (enum TrafficMirrorTargetType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TrafficMirrorTargetType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TrafficType string

// Enum values for TrafficType
const (
	TrafficTypeAccept TrafficType = "ACCEPT"
	TrafficTypeReject TrafficType = "REJECT"
	TrafficTypeAll    TrafficType = "ALL"
)

func (enum TrafficType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TrafficType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayAssociationState string

// Enum values for TransitGatewayAssociationState
const (
	TransitGatewayAssociationStateAssociating    TransitGatewayAssociationState = "associating"
	TransitGatewayAssociationStateAssociated     TransitGatewayAssociationState = "associated"
	TransitGatewayAssociationStateDisassociating TransitGatewayAssociationState = "disassociating"
	TransitGatewayAssociationStateDisassociated  TransitGatewayAssociationState = "disassociated"
)

func (enum TransitGatewayAssociationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayAssociationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayAttachmentResourceType string

// Enum values for TransitGatewayAttachmentResourceType
const (
	TransitGatewayAttachmentResourceTypeVpc                  TransitGatewayAttachmentResourceType = "vpc"
	TransitGatewayAttachmentResourceTypeVpn                  TransitGatewayAttachmentResourceType = "vpn"
	TransitGatewayAttachmentResourceTypeDirectConnectGateway TransitGatewayAttachmentResourceType = "direct-connect-gateway"
	TransitGatewayAttachmentResourceTypeTgwPeering           TransitGatewayAttachmentResourceType = "tgw-peering"
)

func (enum TransitGatewayAttachmentResourceType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayAttachmentResourceType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayAttachmentState string

// Enum values for TransitGatewayAttachmentState
const (
	TransitGatewayAttachmentStateInitiating        TransitGatewayAttachmentState = "initiating"
	TransitGatewayAttachmentStatePendingAcceptance TransitGatewayAttachmentState = "pendingAcceptance"
	TransitGatewayAttachmentStateRollingBack       TransitGatewayAttachmentState = "rollingBack"
	TransitGatewayAttachmentStatePending           TransitGatewayAttachmentState = "pending"
	TransitGatewayAttachmentStateAvailable         TransitGatewayAttachmentState = "available"
	TransitGatewayAttachmentStateModifying         TransitGatewayAttachmentState = "modifying"
	TransitGatewayAttachmentStateDeleting          TransitGatewayAttachmentState = "deleting"
	TransitGatewayAttachmentStateDeleted           TransitGatewayAttachmentState = "deleted"
	TransitGatewayAttachmentStateFailed            TransitGatewayAttachmentState = "failed"
	TransitGatewayAttachmentStateRejected          TransitGatewayAttachmentState = "rejected"
	TransitGatewayAttachmentStateRejecting         TransitGatewayAttachmentState = "rejecting"
	TransitGatewayAttachmentStateFailing           TransitGatewayAttachmentState = "failing"
)

func (enum TransitGatewayAttachmentState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayAttachmentState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayMulitcastDomainAssociationState string

// Enum values for TransitGatewayMulitcastDomainAssociationState
const (
	TransitGatewayMulitcastDomainAssociationStateAssociating    TransitGatewayMulitcastDomainAssociationState = "associating"
	TransitGatewayMulitcastDomainAssociationStateAssociated     TransitGatewayMulitcastDomainAssociationState = "associated"
	TransitGatewayMulitcastDomainAssociationStateDisassociating TransitGatewayMulitcastDomainAssociationState = "disassociating"
	TransitGatewayMulitcastDomainAssociationStateDisassociated  TransitGatewayMulitcastDomainAssociationState = "disassociated"
)

func (enum TransitGatewayMulitcastDomainAssociationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayMulitcastDomainAssociationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayMulticastDomainState string

// Enum values for TransitGatewayMulticastDomainState
const (
	TransitGatewayMulticastDomainStatePending   TransitGatewayMulticastDomainState = "pending"
	TransitGatewayMulticastDomainStateAvailable TransitGatewayMulticastDomainState = "available"
	TransitGatewayMulticastDomainStateDeleting  TransitGatewayMulticastDomainState = "deleting"
	TransitGatewayMulticastDomainStateDeleted   TransitGatewayMulticastDomainState = "deleted"
)

func (enum TransitGatewayMulticastDomainState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayMulticastDomainState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayPropagationState string

// Enum values for TransitGatewayPropagationState
const (
	TransitGatewayPropagationStateEnabling  TransitGatewayPropagationState = "enabling"
	TransitGatewayPropagationStateEnabled   TransitGatewayPropagationState = "enabled"
	TransitGatewayPropagationStateDisabling TransitGatewayPropagationState = "disabling"
	TransitGatewayPropagationStateDisabled  TransitGatewayPropagationState = "disabled"
)

func (enum TransitGatewayPropagationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayPropagationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayRouteState string

// Enum values for TransitGatewayRouteState
const (
	TransitGatewayRouteStatePending   TransitGatewayRouteState = "pending"
	TransitGatewayRouteStateActive    TransitGatewayRouteState = "active"
	TransitGatewayRouteStateBlackhole TransitGatewayRouteState = "blackhole"
	TransitGatewayRouteStateDeleting  TransitGatewayRouteState = "deleting"
	TransitGatewayRouteStateDeleted   TransitGatewayRouteState = "deleted"
)

func (enum TransitGatewayRouteState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayRouteState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayRouteTableState string

// Enum values for TransitGatewayRouteTableState
const (
	TransitGatewayRouteTableStatePending   TransitGatewayRouteTableState = "pending"
	TransitGatewayRouteTableStateAvailable TransitGatewayRouteTableState = "available"
	TransitGatewayRouteTableStateDeleting  TransitGatewayRouteTableState = "deleting"
	TransitGatewayRouteTableStateDeleted   TransitGatewayRouteTableState = "deleted"
)

func (enum TransitGatewayRouteTableState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayRouteTableState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayRouteType string

// Enum values for TransitGatewayRouteType
const (
	TransitGatewayRouteTypeStatic     TransitGatewayRouteType = "static"
	TransitGatewayRouteTypePropagated TransitGatewayRouteType = "propagated"
)

func (enum TransitGatewayRouteType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayRouteType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransitGatewayState string

// Enum values for TransitGatewayState
const (
	TransitGatewayStatePending   TransitGatewayState = "pending"
	TransitGatewayStateAvailable TransitGatewayState = "available"
	TransitGatewayStateModifying TransitGatewayState = "modifying"
	TransitGatewayStateDeleting  TransitGatewayState = "deleting"
	TransitGatewayStateDeleted   TransitGatewayState = "deleted"
)

func (enum TransitGatewayState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransitGatewayState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type TransportProtocol string

// Enum values for TransportProtocol
const (
	TransportProtocolTcp TransportProtocol = "tcp"
	TransportProtocolUdp TransportProtocol = "udp"
)

func (enum TransportProtocol) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum TransportProtocol) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UnlimitedSupportedInstanceFamily string

// Enum values for UnlimitedSupportedInstanceFamily
const (
	UnlimitedSupportedInstanceFamilyT2  UnlimitedSupportedInstanceFamily = "t2"
	UnlimitedSupportedInstanceFamilyT3  UnlimitedSupportedInstanceFamily = "t3"
	UnlimitedSupportedInstanceFamilyT3a UnlimitedSupportedInstanceFamily = "t3a"
)

func (enum UnlimitedSupportedInstanceFamily) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UnlimitedSupportedInstanceFamily) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UnsuccessfulInstanceCreditSpecificationErrorCode string

// Enum values for UnsuccessfulInstanceCreditSpecificationErrorCode
const (
	UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdMalformed              UnsuccessfulInstanceCreditSpecificationErrorCode = "InvalidInstanceID.Malformed"
	UnsuccessfulInstanceCreditSpecificationErrorCodeInvalidInstanceIdNotFound               UnsuccessfulInstanceCreditSpecificationErrorCode = "InvalidInstanceID.NotFound"
	UnsuccessfulInstanceCreditSpecificationErrorCodeIncorrectInstanceState                  UnsuccessfulInstanceCreditSpecificationErrorCode = "IncorrectInstanceState"
	UnsuccessfulInstanceCreditSpecificationErrorCodeInstanceCreditSpecificationNotSupported UnsuccessfulInstanceCreditSpecificationErrorCode = "InstanceCreditSpecification.NotSupported"
)

func (enum UnsuccessfulInstanceCreditSpecificationErrorCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UnsuccessfulInstanceCreditSpecificationErrorCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type UsageClassType string

// Enum values for UsageClassType
const (
	UsageClassTypeSpot     UsageClassType = "spot"
	UsageClassTypeOnDemand UsageClassType = "on-demand"
)

func (enum UsageClassType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum UsageClassType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VirtualizationType string

// Enum values for VirtualizationType
const (
	VirtualizationTypeHvm         VirtualizationType = "hvm"
	VirtualizationTypeParavirtual VirtualizationType = "paravirtual"
)

func (enum VirtualizationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VirtualizationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VolumeAttachmentState string

// Enum values for VolumeAttachmentState
const (
	VolumeAttachmentStateAttaching VolumeAttachmentState = "attaching"
	VolumeAttachmentStateAttached  VolumeAttachmentState = "attached"
	VolumeAttachmentStateDetaching VolumeAttachmentState = "detaching"
	VolumeAttachmentStateDetached  VolumeAttachmentState = "detached"
	VolumeAttachmentStateBusy      VolumeAttachmentState = "busy"
)

func (enum VolumeAttachmentState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VolumeAttachmentState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VolumeAttributeName string

// Enum values for VolumeAttributeName
const (
	VolumeAttributeNameAutoEnableIo VolumeAttributeName = "autoEnableIO"
	VolumeAttributeNameProductCodes VolumeAttributeName = "productCodes"
)

func (enum VolumeAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VolumeAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VolumeModificationState string

// Enum values for VolumeModificationState
const (
	VolumeModificationStateModifying  VolumeModificationState = "modifying"
	VolumeModificationStateOptimizing VolumeModificationState = "optimizing"
	VolumeModificationStateCompleted  VolumeModificationState = "completed"
	VolumeModificationStateFailed     VolumeModificationState = "failed"
)

func (enum VolumeModificationState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VolumeModificationState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VolumeState string

// Enum values for VolumeState
const (
	VolumeStateCreating  VolumeState = "creating"
	VolumeStateAvailable VolumeState = "available"
	VolumeStateInUse     VolumeState = "in-use"
	VolumeStateDeleting  VolumeState = "deleting"
	VolumeStateDeleted   VolumeState = "deleted"
	VolumeStateError     VolumeState = "error"
)

func (enum VolumeState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VolumeState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VolumeStatusInfoStatus string

// Enum values for VolumeStatusInfoStatus
const (
	VolumeStatusInfoStatusOk               VolumeStatusInfoStatus = "ok"
	VolumeStatusInfoStatusImpaired         VolumeStatusInfoStatus = "impaired"
	VolumeStatusInfoStatusInsufficientData VolumeStatusInfoStatus = "insufficient-data"
)

func (enum VolumeStatusInfoStatus) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VolumeStatusInfoStatus) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VolumeStatusName string

// Enum values for VolumeStatusName
const (
	VolumeStatusNameIoEnabled     VolumeStatusName = "io-enabled"
	VolumeStatusNameIoPerformance VolumeStatusName = "io-performance"
)

func (enum VolumeStatusName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VolumeStatusName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VolumeType string

// Enum values for VolumeType
const (
	VolumeTypeStandard VolumeType = "standard"
	VolumeTypeIo1      VolumeType = "io1"
	VolumeTypeGp2      VolumeType = "gp2"
	VolumeTypeSc1      VolumeType = "sc1"
	VolumeTypeSt1      VolumeType = "st1"
)

func (enum VolumeType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VolumeType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpcAttributeName string

// Enum values for VpcAttributeName
const (
	VpcAttributeNameEnableDnsSupport   VpcAttributeName = "enableDnsSupport"
	VpcAttributeNameEnableDnsHostnames VpcAttributeName = "enableDnsHostnames"
)

func (enum VpcAttributeName) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpcAttributeName) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpcCidrBlockStateCode string

// Enum values for VpcCidrBlockStateCode
const (
	VpcCidrBlockStateCodeAssociating    VpcCidrBlockStateCode = "associating"
	VpcCidrBlockStateCodeAssociated     VpcCidrBlockStateCode = "associated"
	VpcCidrBlockStateCodeDisassociating VpcCidrBlockStateCode = "disassociating"
	VpcCidrBlockStateCodeDisassociated  VpcCidrBlockStateCode = "disassociated"
	VpcCidrBlockStateCodeFailing        VpcCidrBlockStateCode = "failing"
	VpcCidrBlockStateCodeFailed         VpcCidrBlockStateCode = "failed"
)

func (enum VpcCidrBlockStateCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpcCidrBlockStateCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpcEndpointType string

// Enum values for VpcEndpointType
const (
	VpcEndpointTypeInterface VpcEndpointType = "Interface"
	VpcEndpointTypeGateway   VpcEndpointType = "Gateway"
)

func (enum VpcEndpointType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpcEndpointType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpcPeeringConnectionStateReasonCode string

// Enum values for VpcPeeringConnectionStateReasonCode
const (
	VpcPeeringConnectionStateReasonCodeInitiatingRequest VpcPeeringConnectionStateReasonCode = "initiating-request"
	VpcPeeringConnectionStateReasonCodePendingAcceptance VpcPeeringConnectionStateReasonCode = "pending-acceptance"
	VpcPeeringConnectionStateReasonCodeActive            VpcPeeringConnectionStateReasonCode = "active"
	VpcPeeringConnectionStateReasonCodeDeleted           VpcPeeringConnectionStateReasonCode = "deleted"
	VpcPeeringConnectionStateReasonCodeRejected          VpcPeeringConnectionStateReasonCode = "rejected"
	VpcPeeringConnectionStateReasonCodeFailed            VpcPeeringConnectionStateReasonCode = "failed"
	VpcPeeringConnectionStateReasonCodeExpired           VpcPeeringConnectionStateReasonCode = "expired"
	VpcPeeringConnectionStateReasonCodeProvisioning      VpcPeeringConnectionStateReasonCode = "provisioning"
	VpcPeeringConnectionStateReasonCodeDeleting          VpcPeeringConnectionStateReasonCode = "deleting"
)

func (enum VpcPeeringConnectionStateReasonCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpcPeeringConnectionStateReasonCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpcState string

// Enum values for VpcState
const (
	VpcStatePending   VpcState = "pending"
	VpcStateAvailable VpcState = "available"
)

func (enum VpcState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpcState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpcTenancy string

// Enum values for VpcTenancy
const (
	VpcTenancyDefault VpcTenancy = "default"
)

func (enum VpcTenancy) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpcTenancy) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnAuthenticationType string

// Enum values for VpnAuthenticationType
const (
	VpnAuthenticationTypeCertificateAuthentication      VpnAuthenticationType = "certificate-authentication"
	VpnAuthenticationTypeDirectoryServiceAuthentication VpnAuthenticationType = "directory-service-authentication"
	VpnAuthenticationTypeFederatedAuthentication        VpnAuthenticationType = "federated-authentication"
)

func (enum VpnAuthenticationType) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnAuthenticationType) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnAuthorizationRuleStatusCode string

// Enum values for VpnAuthorizationRuleStatusCode
const (
	VpnAuthorizationRuleStatusCodeAuthorizing VpnAuthorizationRuleStatusCode = "authorizing"
	VpnAuthorizationRuleStatusCodeActive      VpnAuthorizationRuleStatusCode = "active"
	VpnAuthorizationRuleStatusCodeFailed      VpnAuthorizationRuleStatusCode = "failed"
	VpnAuthorizationRuleStatusCodeRevoking    VpnAuthorizationRuleStatusCode = "revoking"
)

func (enum VpnAuthorizationRuleStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnAuthorizationRuleStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnConnectionStatusCode string

// Enum values for VpnConnectionStatusCode
const (
	VpnConnectionStatusCodeActive            VpnConnectionStatusCode = "active"
	VpnConnectionStatusCodeFailedToTerminate VpnConnectionStatusCode = "failed-to-terminate"
	VpnConnectionStatusCodeTerminating       VpnConnectionStatusCode = "terminating"
	VpnConnectionStatusCodeTerminated        VpnConnectionStatusCode = "terminated"
)

func (enum VpnConnectionStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnConnectionStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnEcmpSupportValue string

// Enum values for VpnEcmpSupportValue
const (
	VpnEcmpSupportValueEnable  VpnEcmpSupportValue = "enable"
	VpnEcmpSupportValueDisable VpnEcmpSupportValue = "disable"
)

func (enum VpnEcmpSupportValue) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnEcmpSupportValue) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnEndpointStatusCode string

// Enum values for VpnEndpointStatusCode
const (
	VpnEndpointStatusCodePendingAssociate VpnEndpointStatusCode = "pending-associate"
	VpnEndpointStatusCodeAvailable        VpnEndpointStatusCode = "available"
	VpnEndpointStatusCodeDeleting         VpnEndpointStatusCode = "deleting"
	VpnEndpointStatusCodeDeleted          VpnEndpointStatusCode = "deleted"
)

func (enum VpnEndpointStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnEndpointStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnProtocol string

// Enum values for VpnProtocol
const (
	VpnProtocolOpenvpn VpnProtocol = "openvpn"
)

func (enum VpnProtocol) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnProtocol) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnRouteStatusCode string

// Enum values for VpnRouteStatusCode
const (
	VpnRouteStatusCodeCreating VpnRouteStatusCode = "creating"
	VpnRouteStatusCodeActive   VpnRouteStatusCode = "active"
	VpnRouteStatusCodeFailed   VpnRouteStatusCode = "failed"
	VpnRouteStatusCodeDeleting VpnRouteStatusCode = "deleting"
)

func (enum VpnRouteStatusCode) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnRouteStatusCode) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnState string

// Enum values for VpnState
const (
	VpnStatePending   VpnState = "pending"
	VpnStateAvailable VpnState = "available"
	VpnStateDeleting  VpnState = "deleting"
	VpnStateDeleted   VpnState = "deleted"
)

func (enum VpnState) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnState) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}

type VpnStaticRouteSource string

// Enum values for VpnStaticRouteSource
const (
	VpnStaticRouteSourceStatic VpnStaticRouteSource = "Static"
)

func (enum VpnStaticRouteSource) MarshalValue() (string, error) {
	return string(enum), nil
}

func (enum VpnStaticRouteSource) MarshalValueBuf(b []byte) ([]byte, error) {
	b = b[0:0]
	return append(b, enum...), nil
}
