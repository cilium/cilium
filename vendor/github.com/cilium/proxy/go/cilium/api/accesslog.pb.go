// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: cilium/api/accesslog.proto

package cilium

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HttpProtocol int32

const (
	HttpProtocol_HTTP10 HttpProtocol = 0
	HttpProtocol_HTTP11 HttpProtocol = 1
	HttpProtocol_HTTP2  HttpProtocol = 2
)

// Enum value maps for HttpProtocol.
var (
	HttpProtocol_name = map[int32]string{
		0: "HTTP10",
		1: "HTTP11",
		2: "HTTP2",
	}
	HttpProtocol_value = map[string]int32{
		"HTTP10": 0,
		"HTTP11": 1,
		"HTTP2":  2,
	}
)

func (x HttpProtocol) Enum() *HttpProtocol {
	p := new(HttpProtocol)
	*p = x
	return p
}

func (x HttpProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_cilium_api_accesslog_proto_enumTypes[0].Descriptor()
}

func (HttpProtocol) Type() protoreflect.EnumType {
	return &file_cilium_api_accesslog_proto_enumTypes[0]
}

func (x HttpProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpProtocol.Descriptor instead.
func (HttpProtocol) EnumDescriptor() ([]byte, []int) {
	return file_cilium_api_accesslog_proto_rawDescGZIP(), []int{0}
}

type EntryType int32

const (
	EntryType_Request  EntryType = 0
	EntryType_Response EntryType = 1
	EntryType_Denied   EntryType = 2
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0: "Request",
		1: "Response",
		2: "Denied",
	}
	EntryType_value = map[string]int32{
		"Request":  0,
		"Response": 1,
		"Denied":   2,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_cilium_api_accesslog_proto_enumTypes[1].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_cilium_api_accesslog_proto_enumTypes[1]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_cilium_api_accesslog_proto_rawDescGZIP(), []int{1}
}

type KeyValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_cilium_api_accesslog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_cilium_api_accesslog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_cilium_api_accesslog_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type HttpLogEntry struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	HttpProtocol HttpProtocol           `protobuf:"varint,1,opt,name=http_protocol,json=httpProtocol,proto3,enum=cilium.HttpProtocol" json:"http_protocol,omitempty"`
	// Request info that is also retained for the response
	Scheme string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"` // Envoy "x-forwarded-proto", e.g., "http", "https"
	Host   string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`     // Envoy ":authority" header
	Path   string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`     // Envoy ":path" header
	Method string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"` // Envoy ":method" header
	// Request or response headers not included above
	Headers []*KeyValue `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty"`
	// Response info
	Status uint32 `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"` // Envoy ":status" header, zero for request
	// missing_headers includes both headers that were added to the
	// request, and headers that were merely logged as missing
	MissingHeaders []*KeyValue `protobuf:"bytes,8,rep,name=missing_headers,json=missingHeaders,proto3" json:"missing_headers,omitempty"`
	// rejected_headers includes headers that were flagged as unallowed,
	// which may have been removed, or merely logged and the request still
	// allowed, or the request may have been dropped due to them.
	RejectedHeaders []*KeyValue `protobuf:"bytes,9,rep,name=rejected_headers,json=rejectedHeaders,proto3" json:"rejected_headers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HttpLogEntry) Reset() {
	*x = HttpLogEntry{}
	mi := &file_cilium_api_accesslog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLogEntry) ProtoMessage() {}

func (x *HttpLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cilium_api_accesslog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLogEntry.ProtoReflect.Descriptor instead.
func (*HttpLogEntry) Descriptor() ([]byte, []int) {
	return file_cilium_api_accesslog_proto_rawDescGZIP(), []int{1}
}

func (x *HttpLogEntry) GetHttpProtocol() HttpProtocol {
	if x != nil {
		return x.HttpProtocol
	}
	return HttpProtocol_HTTP10
}

func (x *HttpLogEntry) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *HttpLogEntry) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *HttpLogEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HttpLogEntry) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpLogEntry) GetHeaders() []*KeyValue {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpLogEntry) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *HttpLogEntry) GetMissingHeaders() []*KeyValue {
	if x != nil {
		return x.MissingHeaders
	}
	return nil
}

func (x *HttpLogEntry) GetRejectedHeaders() []*KeyValue {
	if x != nil {
		return x.RejectedHeaders
	}
	return nil
}

type KafkaLogEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// correlation_id is a user-supplied integer value that will be passed
	// back with the response
	CorrelationId int32 `protobuf:"varint,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// error_code is the Kafka error code being returned
	// Ref. https://kafka.apache.org/protocol#protocol_error_codes
	ErrorCode int32 `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// api_version of the Kafka api used
	// Ref. https://kafka.apache.org/protocol#protocol_compatibility
	ApiVersion int32 `protobuf:"varint,3,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// api_key for Kafka message
	// Reference: https://kafka.apache.org/protocol#protocol_api_keys
	ApiKey int32 `protobuf:"varint,4,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	// Topics of the request
	// Optional, as not all messages have topics (ex. LeaveGroup, Heartbeat)
	Topics        []string `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaLogEntry) Reset() {
	*x = KafkaLogEntry{}
	mi := &file_cilium_api_accesslog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaLogEntry) ProtoMessage() {}

func (x *KafkaLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cilium_api_accesslog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaLogEntry.ProtoReflect.Descriptor instead.
func (*KafkaLogEntry) Descriptor() ([]byte, []int) {
	return file_cilium_api_accesslog_proto_rawDescGZIP(), []int{2}
}

func (x *KafkaLogEntry) GetCorrelationId() int32 {
	if x != nil {
		return x.CorrelationId
	}
	return 0
}

func (x *KafkaLogEntry) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *KafkaLogEntry) GetApiVersion() int32 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *KafkaLogEntry) GetApiKey() int32 {
	if x != nil {
		return x.ApiKey
	}
	return 0
}

func (x *KafkaLogEntry) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type L7LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proto         string                 `protobuf:"bytes,1,opt,name=proto,proto3" json:"proto,omitempty"`
	Fields        map[string]string      `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *L7LogEntry) Reset() {
	*x = L7LogEntry{}
	mi := &file_cilium_api_accesslog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *L7LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L7LogEntry) ProtoMessage() {}

func (x *L7LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cilium_api_accesslog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L7LogEntry.ProtoReflect.Descriptor instead.
func (*L7LogEntry) Descriptor() ([]byte, []int) {
	return file_cilium_api_accesslog_proto_rawDescGZIP(), []int{3}
}

func (x *L7LogEntry) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *L7LogEntry) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type LogEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The time that Cilium filter captured this log entry,
	// in, nanoseconds since 1/1/1970.
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 'true' if the request was received by an ingress listener,
	// 'false' if received by an egress listener
	IsIngress bool      `protobuf:"varint,15,opt,name=is_ingress,json=isIngress,proto3" json:"is_ingress,omitempty"`
	EntryType EntryType `protobuf:"varint,3,opt,name=entry_type,json=entryType,proto3,enum=cilium.EntryType" json:"entry_type,omitempty"`
	// Cilium network policy resource name
	PolicyName string `protobuf:"bytes,4,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// proxy_id identifies the listener this message relates to,
	// as configured via the bpf_metadata listener filter
	ProxyId uint32 `protobuf:"varint,17,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	// Cilium rule reference
	CiliumRuleRef string `protobuf:"bytes,5,opt,name=cilium_rule_ref,json=ciliumRuleRef,proto3" json:"cilium_rule_ref,omitempty"`
	// Cilium security ID of the source and destination
	SourceSecurityId      uint32 `protobuf:"varint,6,opt,name=source_security_id,json=sourceSecurityId,proto3" json:"source_security_id,omitempty"`
	DestinationSecurityId uint32 `protobuf:"varint,16,opt,name=destination_security_id,json=destinationSecurityId,proto3" json:"destination_security_id,omitempty"`
	// These fields record the original source and destination addresses,
	// stored in ipv4:port or [ipv6]:port format.
	SourceAddress      string `protobuf:"bytes,7,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	DestinationAddress string `protobuf:"bytes,8,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	// Types that are valid to be assigned to L7:
	//
	//	*LogEntry_Http
	//	*LogEntry_Kafka
	//	*LogEntry_GenericL7
	L7            isLogEntry_L7 `protobuf_oneof:"l7"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_cilium_api_accesslog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cilium_api_accesslog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_cilium_api_accesslog_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEntry) GetIsIngress() bool {
	if x != nil {
		return x.IsIngress
	}
	return false
}

func (x *LogEntry) GetEntryType() EntryType {
	if x != nil {
		return x.EntryType
	}
	return EntryType_Request
}

func (x *LogEntry) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *LogEntry) GetProxyId() uint32 {
	if x != nil {
		return x.ProxyId
	}
	return 0
}

func (x *LogEntry) GetCiliumRuleRef() string {
	if x != nil {
		return x.CiliumRuleRef
	}
	return ""
}

func (x *LogEntry) GetSourceSecurityId() uint32 {
	if x != nil {
		return x.SourceSecurityId
	}
	return 0
}

func (x *LogEntry) GetDestinationSecurityId() uint32 {
	if x != nil {
		return x.DestinationSecurityId
	}
	return 0
}

func (x *LogEntry) GetSourceAddress() string {
	if x != nil {
		return x.SourceAddress
	}
	return ""
}

func (x *LogEntry) GetDestinationAddress() string {
	if x != nil {
		return x.DestinationAddress
	}
	return ""
}

func (x *LogEntry) GetL7() isLogEntry_L7 {
	if x != nil {
		return x.L7
	}
	return nil
}

func (x *LogEntry) GetHttp() *HttpLogEntry {
	if x != nil {
		if x, ok := x.L7.(*LogEntry_Http); ok {
			return x.Http
		}
	}
	return nil
}

func (x *LogEntry) GetKafka() *KafkaLogEntry {
	if x != nil {
		if x, ok := x.L7.(*LogEntry_Kafka); ok {
			return x.Kafka
		}
	}
	return nil
}

func (x *LogEntry) GetGenericL7() *L7LogEntry {
	if x != nil {
		if x, ok := x.L7.(*LogEntry_GenericL7); ok {
			return x.GenericL7
		}
	}
	return nil
}

type isLogEntry_L7 interface {
	isLogEntry_L7()
}

type LogEntry_Http struct {
	Http *HttpLogEntry `protobuf:"bytes,100,opt,name=http,proto3,oneof"`
}

type LogEntry_Kafka struct {
	Kafka *KafkaLogEntry `protobuf:"bytes,101,opt,name=kafka,proto3,oneof"`
}

type LogEntry_GenericL7 struct {
	GenericL7 *L7LogEntry `protobuf:"bytes,102,opt,name=generic_l7,json=genericL7,proto3,oneof"`
}

func (*LogEntry_Http) isLogEntry_L7() {}

func (*LogEntry_Kafka) isLogEntry_L7() {}

func (*LogEntry_GenericL7) isLogEntry_L7() {}

var File_cilium_api_accesslog_proto protoreflect.FileDescriptor

const file_cilium_api_accesslog_proto_rawDesc = "" +
	"\n" +
	"\x1acilium/api/accesslog.proto\x12\x06cilium\"2\n" +
	"\bKeyValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xdd\x02\n" +
	"\fHttpLogEntry\x129\n" +
	"\rhttp_protocol\x18\x01 \x01(\x0e2\x14.cilium.HttpProtocolR\fhttpProtocol\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12\x16\n" +
	"\x06method\x18\x05 \x01(\tR\x06method\x12*\n" +
	"\aheaders\x18\x06 \x03(\v2\x10.cilium.KeyValueR\aheaders\x12\x16\n" +
	"\x06status\x18\a \x01(\rR\x06status\x129\n" +
	"\x0fmissing_headers\x18\b \x03(\v2\x10.cilium.KeyValueR\x0emissingHeaders\x12;\n" +
	"\x10rejected_headers\x18\t \x03(\v2\x10.cilium.KeyValueR\x0frejectedHeaders\"\xa7\x01\n" +
	"\rKafkaLogEntry\x12%\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\x05R\rcorrelationId\x12\x1d\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x05R\terrorCode\x12\x1f\n" +
	"\vapi_version\x18\x03 \x01(\x05R\n" +
	"apiVersion\x12\x17\n" +
	"\aapi_key\x18\x04 \x01(\x05R\x06apiKey\x12\x16\n" +
	"\x06topics\x18\x05 \x03(\tR\x06topics\"\x95\x01\n" +
	"\n" +
	"L7LogEntry\x12\x14\n" +
	"\x05proto\x18\x01 \x01(\tR\x05proto\x126\n" +
	"\x06fields\x18\x02 \x03(\v2\x1e.cilium.L7LogEntry.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb1\x04\n" +
	"\bLogEntry\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12\x1d\n" +
	"\n" +
	"is_ingress\x18\x0f \x01(\bR\tisIngress\x120\n" +
	"\n" +
	"entry_type\x18\x03 \x01(\x0e2\x11.cilium.EntryTypeR\tentryType\x12\x1f\n" +
	"\vpolicy_name\x18\x04 \x01(\tR\n" +
	"policyName\x12\x19\n" +
	"\bproxy_id\x18\x11 \x01(\rR\aproxyId\x12&\n" +
	"\x0fcilium_rule_ref\x18\x05 \x01(\tR\rciliumRuleRef\x12,\n" +
	"\x12source_security_id\x18\x06 \x01(\rR\x10sourceSecurityId\x126\n" +
	"\x17destination_security_id\x18\x10 \x01(\rR\x15destinationSecurityId\x12%\n" +
	"\x0esource_address\x18\a \x01(\tR\rsourceAddress\x12/\n" +
	"\x13destination_address\x18\b \x01(\tR\x12destinationAddress\x12*\n" +
	"\x04http\x18d \x01(\v2\x14.cilium.HttpLogEntryH\x00R\x04http\x12-\n" +
	"\x05kafka\x18e \x01(\v2\x15.cilium.KafkaLogEntryH\x00R\x05kafka\x123\n" +
	"\n" +
	"generic_l7\x18f \x01(\v2\x12.cilium.L7LogEntryH\x00R\tgenericL7B\x04\n" +
	"\x02l7*1\n" +
	"\fHttpProtocol\x12\n" +
	"\n" +
	"\x06HTTP10\x10\x00\x12\n" +
	"\n" +
	"\x06HTTP11\x10\x01\x12\t\n" +
	"\x05HTTP2\x10\x02*2\n" +
	"\tEntryType\x12\v\n" +
	"\aRequest\x10\x00\x12\f\n" +
	"\bResponse\x10\x01\x12\n" +
	"\n" +
	"\x06Denied\x10\x02B.Z,github.com/cilium/proxy/go/cilium/api;ciliumb\x06proto3"

var (
	file_cilium_api_accesslog_proto_rawDescOnce sync.Once
	file_cilium_api_accesslog_proto_rawDescData []byte
)

func file_cilium_api_accesslog_proto_rawDescGZIP() []byte {
	file_cilium_api_accesslog_proto_rawDescOnce.Do(func() {
		file_cilium_api_accesslog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cilium_api_accesslog_proto_rawDesc), len(file_cilium_api_accesslog_proto_rawDesc)))
	})
	return file_cilium_api_accesslog_proto_rawDescData
}

var file_cilium_api_accesslog_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cilium_api_accesslog_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cilium_api_accesslog_proto_goTypes = []any{
	(HttpProtocol)(0),     // 0: cilium.HttpProtocol
	(EntryType)(0),        // 1: cilium.EntryType
	(*KeyValue)(nil),      // 2: cilium.KeyValue
	(*HttpLogEntry)(nil),  // 3: cilium.HttpLogEntry
	(*KafkaLogEntry)(nil), // 4: cilium.KafkaLogEntry
	(*L7LogEntry)(nil),    // 5: cilium.L7LogEntry
	(*LogEntry)(nil),      // 6: cilium.LogEntry
	nil,                   // 7: cilium.L7LogEntry.FieldsEntry
}
var file_cilium_api_accesslog_proto_depIdxs = []int32{
	0, // 0: cilium.HttpLogEntry.http_protocol:type_name -> cilium.HttpProtocol
	2, // 1: cilium.HttpLogEntry.headers:type_name -> cilium.KeyValue
	2, // 2: cilium.HttpLogEntry.missing_headers:type_name -> cilium.KeyValue
	2, // 3: cilium.HttpLogEntry.rejected_headers:type_name -> cilium.KeyValue
	7, // 4: cilium.L7LogEntry.fields:type_name -> cilium.L7LogEntry.FieldsEntry
	1, // 5: cilium.LogEntry.entry_type:type_name -> cilium.EntryType
	3, // 6: cilium.LogEntry.http:type_name -> cilium.HttpLogEntry
	4, // 7: cilium.LogEntry.kafka:type_name -> cilium.KafkaLogEntry
	5, // 8: cilium.LogEntry.generic_l7:type_name -> cilium.L7LogEntry
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_cilium_api_accesslog_proto_init() }
func file_cilium_api_accesslog_proto_init() {
	if File_cilium_api_accesslog_proto != nil {
		return
	}
	file_cilium_api_accesslog_proto_msgTypes[4].OneofWrappers = []any{
		(*LogEntry_Http)(nil),
		(*LogEntry_Kafka)(nil),
		(*LogEntry_GenericL7)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cilium_api_accesslog_proto_rawDesc), len(file_cilium_api_accesslog_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cilium_api_accesslog_proto_goTypes,
		DependencyIndexes: file_cilium_api_accesslog_proto_depIdxs,
		EnumInfos:         file_cilium_api_accesslog_proto_enumTypes,
		MessageInfos:      file_cilium_api_accesslog_proto_msgTypes,
	}.Build()
	File_cilium_api_accesslog_proto = out.File
	file_cilium_api_accesslog_proto_goTypes = nil
	file_cilium_api_accesslog_proto_depIdxs = nil
}
