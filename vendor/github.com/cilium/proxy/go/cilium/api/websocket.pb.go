// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: cilium/api/websocket.proto

package cilium

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebSocketClient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path to the unix domain socket for the cilium access log, if any.
	AccessLogPath string `protobuf:"bytes,1,opt,name=access_log_path,json=accessLogPath,proto3" json:"access_log_path,omitempty"`
	// Host header value, required.
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// Path value. Defaults to "/".
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// sec-websocket-key value to use, defaults to a random key.
	Key string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Websocket version, defaults to "13".
	Version string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Origin header, if any.
	Origin string `protobuf:"bytes,6,opt,name=origin,proto3" json:"origin,omitempty"`
	// Websocket handshake timeout, default is 5 seconds.
	HandshakeTimeout *durationpb.Duration `protobuf:"bytes,7,opt,name=handshake_timeout,json=handshakeTimeout,proto3" json:"handshake_timeout,omitempty"`
	// ping interval, default is 0 (disabled).
	// Connection is assumed dead if response is not received before the next ping is to be sent.
	PingInterval *durationpb.Duration `protobuf:"bytes,8,opt,name=ping_interval,json=pingInterval,proto3" json:"ping_interval,omitempty"`
	// ping only on when idle on both directions.
	// ping_interval must be non-zero when this is true.
	PingWhenIdle  bool `protobuf:"varint,9,opt,name=ping_when_idle,json=pingWhenIdle,proto3" json:"ping_when_idle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketClient) Reset() {
	*x = WebSocketClient{}
	mi := &file_cilium_api_websocket_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketClient) ProtoMessage() {}

func (x *WebSocketClient) ProtoReflect() protoreflect.Message {
	mi := &file_cilium_api_websocket_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketClient.ProtoReflect.Descriptor instead.
func (*WebSocketClient) Descriptor() ([]byte, []int) {
	return file_cilium_api_websocket_proto_rawDescGZIP(), []int{0}
}

func (x *WebSocketClient) GetAccessLogPath() string {
	if x != nil {
		return x.AccessLogPath
	}
	return ""
}

func (x *WebSocketClient) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *WebSocketClient) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebSocketClient) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebSocketClient) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WebSocketClient) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *WebSocketClient) GetHandshakeTimeout() *durationpb.Duration {
	if x != nil {
		return x.HandshakeTimeout
	}
	return nil
}

func (x *WebSocketClient) GetPingInterval() *durationpb.Duration {
	if x != nil {
		return x.PingInterval
	}
	return nil
}

func (x *WebSocketClient) GetPingWhenIdle() bool {
	if x != nil {
		return x.PingWhenIdle
	}
	return false
}

type WebSocketServer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path to the unix domain socket for the cilium access log, if any.
	AccessLogPath string `protobuf:"bytes,1,opt,name=access_log_path,json=accessLogPath,proto3" json:"access_log_path,omitempty"`
	// Expected host header value, if any.
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// Expected path value, if any.
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// sec-websocket-key value to expect, if any.
	Key string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Websocket version, ignored if omitted.
	Version string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Origin header, if any. Origin header is not allowed if omitted.
	Origin string `protobuf:"bytes,6,opt,name=origin,proto3" json:"origin,omitempty"`
	// Websocket handshake timeout, default is 5 seconds.
	HandshakeTimeout *durationpb.Duration `protobuf:"bytes,7,opt,name=handshake_timeout,json=handshakeTimeout,proto3" json:"handshake_timeout,omitempty"`
	// ping interval, default is 0 (disabled).
	// Connection is assumed dead if response is not received before the next ping is to be sent.
	PingInterval *durationpb.Duration `protobuf:"bytes,8,opt,name=ping_interval,json=pingInterval,proto3" json:"ping_interval,omitempty"`
	// ping only on when idle on both directions.
	// ping_interval must be non-zero when this is true.
	PingWhenIdle  bool `protobuf:"varint,9,opt,name=ping_when_idle,json=pingWhenIdle,proto3" json:"ping_when_idle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketServer) Reset() {
	*x = WebSocketServer{}
	mi := &file_cilium_api_websocket_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketServer) ProtoMessage() {}

func (x *WebSocketServer) ProtoReflect() protoreflect.Message {
	mi := &file_cilium_api_websocket_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketServer.ProtoReflect.Descriptor instead.
func (*WebSocketServer) Descriptor() ([]byte, []int) {
	return file_cilium_api_websocket_proto_rawDescGZIP(), []int{1}
}

func (x *WebSocketServer) GetAccessLogPath() string {
	if x != nil {
		return x.AccessLogPath
	}
	return ""
}

func (x *WebSocketServer) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *WebSocketServer) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebSocketServer) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebSocketServer) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WebSocketServer) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *WebSocketServer) GetHandshakeTimeout() *durationpb.Duration {
	if x != nil {
		return x.HandshakeTimeout
	}
	return nil
}

func (x *WebSocketServer) GetPingInterval() *durationpb.Duration {
	if x != nil {
		return x.PingInterval
	}
	return nil
}

func (x *WebSocketServer) GetPingWhenIdle() bool {
	if x != nil {
		return x.PingWhenIdle
	}
	return false
}

var File_cilium_api_websocket_proto protoreflect.FileDescriptor

const file_cilium_api_websocket_proto_rawDesc = "" +
	"\n" +
	"\x1acilium/api/websocket.proto\x12\x06cilium\x1a\x1egoogle/protobuf/duration.proto\x1a\x17validate/validate.proto\"\xdc\x02\n" +
	"\x0fWebSocketClient\x12&\n" +
	"\x0faccess_log_path\x18\x01 \x01(\tR\raccessLogPath\x12\x1b\n" +
	"\x04host\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x02R\x04host\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\x12\x16\n" +
	"\x06origin\x18\x06 \x01(\tR\x06origin\x12F\n" +
	"\x11handshake_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x10handshakeTimeout\x12>\n" +
	"\rping_interval\x18\b \x01(\v2\x19.google.protobuf.DurationR\fpingInterval\x12$\n" +
	"\x0eping_when_idle\x18\t \x01(\bR\fpingWhenIdle\"\xd3\x02\n" +
	"\x0fWebSocketServer\x12&\n" +
	"\x0faccess_log_path\x18\x01 \x01(\tR\raccessLogPath\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\x12\x16\n" +
	"\x06origin\x18\x06 \x01(\tR\x06origin\x12F\n" +
	"\x11handshake_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x10handshakeTimeout\x12>\n" +
	"\rping_interval\x18\b \x01(\v2\x19.google.protobuf.DurationR\fpingInterval\x12$\n" +
	"\x0eping_when_idle\x18\t \x01(\bR\fpingWhenIdleB.Z,github.com/cilium/proxy/go/cilium/api;ciliumb\x06proto3"

var (
	file_cilium_api_websocket_proto_rawDescOnce sync.Once
	file_cilium_api_websocket_proto_rawDescData []byte
)

func file_cilium_api_websocket_proto_rawDescGZIP() []byte {
	file_cilium_api_websocket_proto_rawDescOnce.Do(func() {
		file_cilium_api_websocket_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cilium_api_websocket_proto_rawDesc), len(file_cilium_api_websocket_proto_rawDesc)))
	})
	return file_cilium_api_websocket_proto_rawDescData
}

var file_cilium_api_websocket_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cilium_api_websocket_proto_goTypes = []any{
	(*WebSocketClient)(nil),     // 0: cilium.WebSocketClient
	(*WebSocketServer)(nil),     // 1: cilium.WebSocketServer
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
}
var file_cilium_api_websocket_proto_depIdxs = []int32{
	2, // 0: cilium.WebSocketClient.handshake_timeout:type_name -> google.protobuf.Duration
	2, // 1: cilium.WebSocketClient.ping_interval:type_name -> google.protobuf.Duration
	2, // 2: cilium.WebSocketServer.handshake_timeout:type_name -> google.protobuf.Duration
	2, // 3: cilium.WebSocketServer.ping_interval:type_name -> google.protobuf.Duration
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cilium_api_websocket_proto_init() }
func file_cilium_api_websocket_proto_init() {
	if File_cilium_api_websocket_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cilium_api_websocket_proto_rawDesc), len(file_cilium_api_websocket_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cilium_api_websocket_proto_goTypes,
		DependencyIndexes: file_cilium_api_websocket_proto_depIdxs,
		MessageInfos:      file_cilium_api_websocket_proto_msgTypes,
	}.Build()
	File_cilium_api_websocket_proto = out.File
	file_cilium_api_websocket_proto_goTypes = nil
	file_cilium_api_websocket_proto_depIdxs = nil
}
