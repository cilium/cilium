// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cilium/api/l7policy.proto

package cilium

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L7Policy struct {
	// Path to the unix domain socket for the cilium access log.
	AccessLogPath string `protobuf:"bytes,1,opt,name=access_log_path,json=accessLogPath,proto3" json:"access_log_path,omitempty"`
	// Cilium endpoint security policy to enforce.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// HTTP response body message for 403 status code.
	// If empty, "Access denied" will be used.
	Denied_403Body string `protobuf:"bytes,3,opt,name=denied_403_body,json=denied403Body,proto3" json:"denied_403_body,omitempty"`
	// 'true' if the filter is on ingress listener, 'false' for egress listener.
	// Value from the listener filter will be used if not specified here.
	IsIngress            *wrappers.BoolValue `protobuf:"bytes,4,opt,name=is_ingress,json=isIngress,proto3" json:"is_ingress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *L7Policy) Reset()         { *m = L7Policy{} }
func (m *L7Policy) String() string { return proto.CompactTextString(m) }
func (*L7Policy) ProtoMessage()    {}
func (*L7Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0b0655f707d1794, []int{0}
}

func (m *L7Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L7Policy.Unmarshal(m, b)
}
func (m *L7Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L7Policy.Marshal(b, m, deterministic)
}
func (m *L7Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L7Policy.Merge(m, src)
}
func (m *L7Policy) XXX_Size() int {
	return xxx_messageInfo_L7Policy.Size(m)
}
func (m *L7Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_L7Policy.DiscardUnknown(m)
}

var xxx_messageInfo_L7Policy proto.InternalMessageInfo

func (m *L7Policy) GetAccessLogPath() string {
	if m != nil {
		return m.AccessLogPath
	}
	return ""
}

func (m *L7Policy) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *L7Policy) GetDenied_403Body() string {
	if m != nil {
		return m.Denied_403Body
	}
	return ""
}

func (m *L7Policy) GetIsIngress() *wrappers.BoolValue {
	if m != nil {
		return m.IsIngress
	}
	return nil
}

func init() {
	proto.RegisterType((*L7Policy)(nil), "cilium.L7Policy")
}

func init() { proto.RegisterFile("cilium/api/l7policy.proto", fileDescriptor_b0b0655f707d1794) }

var fileDescriptor_b0b0655f707d1794 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8e, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x89, 0x4a, 0xb1, 0x5b, 0x44, 0xc8, 0x29, 0xf6, 0xa0, 0xc5, 0x83, 0xf4, 0x94, 0x14,
	0x53, 0x28, 0x5e, 0x7b, 0x13, 0x8a, 0x94, 0x1e, 0xbc, 0x2e, 0x93, 0xec, 0xb8, 0x19, 0xd8, 0x64,
	0x96, 0xdd, 0x04, 0xc9, 0x1f, 0xf3, 0xf7, 0x89, 0x3b, 0x78, 0xfd, 0xde, 0x37, 0x6f, 0x9e, 0x7a,
	0x68, 0xc9, 0xd1, 0xd4, 0x57, 0xe0, 0xa9, 0x72, 0x07, 0xcf, 0x8e, 0xda, 0xb9, 0xf4, 0x81, 0x47,
	0xce, 0x17, 0x12, 0xad, 0x1f, 0x2d, 0xb3, 0x75, 0x58, 0x25, 0xda, 0x4c, 0x5f, 0xd5, 0x77, 0x00,
	0xef, 0x31, 0x44, 0xf1, 0x9e, 0x7f, 0x32, 0x75, 0x7b, 0x3a, 0x9c, 0xd3, 0x69, 0xfe, 0xa2, 0xee,
	0xa1, 0x6d, 0x31, 0x46, 0xed, 0xd8, 0x6a, 0x0f, 0x63, 0x57, 0x64, 0x9b, 0x6c, 0xbb, 0xbc, 0xdc,
	0x09, 0x3e, 0xb1, 0x3d, 0xc3, 0xd8, 0xe5, 0x4f, 0x6a, 0x25, 0xcf, 0xf4, 0x00, 0x3d, 0x16, 0x57,
	0xc9, 0x51, 0x82, 0x3e, 0xa0, 0xc7, 0xbf, 0x22, 0x83, 0x03, 0xa1, 0xd1, 0xfb, 0x5d, 0xad, 0x1b,
	0x36, 0x73, 0x71, 0x2d, 0x45, 0x82, 0xf7, 0xbb, 0xfa, 0xc8, 0x66, 0xce, 0xdf, 0x94, 0xa2, 0xa8,
	0x69, 0xb0, 0x01, 0x63, 0x2c, 0x6e, 0x36, 0xd9, 0x76, 0xf5, 0xba, 0x2e, 0x65, 0x72, 0xf9, 0x3f,
	0xb9, 0x3c, 0x32, 0xbb, 0x4f, 0x70, 0x13, 0x5e, 0x96, 0x14, 0xdf, 0x45, 0x6e, 0x16, 0x29, 0xae,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x30, 0x6d, 0x95, 0xf7, 0x04, 0x01, 0x00, 0x00,
}
