// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/api/v2/lds.proto

package envoy_api_v2

import (
	context "context"
	fmt "fmt"
	_ "github.com/cilium/proxy/go/envoy/annotations"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// [#not-implemented-hide:] Not configuration. Workaround c++ protobuf issue with importing
// services: https://github.com/google/protobuf/issues/4221 and protoxform to upgrade the file.
type LdsDummy struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdsDummy) Reset()         { *m = LdsDummy{} }
func (m *LdsDummy) String() string { return proto.CompactTextString(m) }
func (*LdsDummy) ProtoMessage()    {}
func (*LdsDummy) Descriptor() ([]byte, []int) {
	return fileDescriptor_34e2cd84a105bcd1, []int{0}
}

func (m *LdsDummy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdsDummy.Unmarshal(m, b)
}
func (m *LdsDummy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdsDummy.Marshal(b, m, deterministic)
}
func (m *LdsDummy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdsDummy.Merge(m, src)
}
func (m *LdsDummy) XXX_Size() int {
	return xxx_messageInfo_LdsDummy.Size(m)
}
func (m *LdsDummy) XXX_DiscardUnknown() {
	xxx_messageInfo_LdsDummy.DiscardUnknown(m)
}

var xxx_messageInfo_LdsDummy proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LdsDummy)(nil), "envoy.api.v2.LdsDummy")
}

func init() { proto.RegisterFile("envoy/api/v2/lds.proto", fileDescriptor_34e2cd84a105bcd1) }

var fileDescriptor_34e2cd84a105bcd1 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0x6f, 0xb9, 0xb9, 0x17, 0x33, 0x31, 0x98, 0x34, 0x51, 0xa4, 0x20, 0x1a, 0x74, 0x41,
	0x5c, 0xb4, 0x06, 0x76, 0x2c, 0x09, 0x71, 0xc5, 0x82, 0xc8, 0xc6, 0xed, 0xd0, 0x1e, 0x71, 0x92,
	0xb6, 0x33, 0xce, 0x4c, 0xab, 0x8d, 0x3b, 0x57, 0xc6, 0x8d, 0x0b, 0x13, 0xe3, 0x03, 0xf8, 0x46,
	0xbe, 0x82, 0x4f, 0x20, 0x7b, 0x63, 0x98, 0x76, 0xc0, 0x21, 0xc1, 0x95, 0xbb, 0xb6, 0xbf, 0xef,
	0x7c, 0xe7, 0xcf, 0x57, 0xb4, 0x03, 0x71, 0x4a, 0x33, 0x0f, 0x33, 0xe2, 0xa5, 0x1d, 0x2f, 0x0c,
	0x84, 0xcb, 0x38, 0x95, 0xd4, 0xde, 0x54, 0xdf, 0x5d, 0xcc, 0x88, 0x9b, 0x76, 0x9c, 0x86, 0xa1,
	0x0a, 0x88, 0xf0, 0x69, 0x0a, 0x3c, 0xcb, 0xb5, 0x4e, 0x63, 0x4a, 0xe9, 0x34, 0x04, 0x85, 0x71,
	0x1c, 0x53, 0x89, 0x25, 0xa1, 0x71, 0xe1, 0xe4, 0x34, 0x0b, 0xaa, 0xde, 0x26, 0xc9, 0x85, 0x17,
	0x24, 0x5c, 0x09, 0xd6, 0xf1, 0x6b, 0x8e, 0x19, 0x03, 0xae, 0xeb, 0x0f, 0x8a, 0xde, 0x4b, 0x63,
	0x8f, 0x83, 0xa0, 0x09, 0xf7, 0x41, 0x3b, 0x24, 0x01, 0xc3, 0x86, 0x20, 0x22, 0x53, 0x8e, 0xa5,
	0xe6, 0xd5, 0x14, 0x87, 0x24, 0xc0, 0x12, 0x3c, 0xfd, 0x50, 0x80, 0xba, 0xb9, 0x3c, 0x11, 0x12,
	0x62, 0xe0, 0x39, 0x6c, 0x21, 0xb4, 0x31, 0x0c, 0xc4, 0x20, 0x89, 0xa2, 0xac, 0x33, 0x2b, 0xa1,
	0xdd, 0x61, 0x81, 0x07, 0x7a, 0xfb, 0x31, 0xf0, 0x94, 0xf8, 0x60, 0x63, 0x54, 0x19, 0x40, 0x28,
	0xb1, 0x16, 0x08, 0xfb, 0xd0, 0xfd, 0x7e, 0x3d, 0x57, 0xd1, 0x45, 0xd9, 0x19, 0x5c, 0x25, 0x20,
	0xa4, 0x73, 0xf4, 0xb3, 0x48, 0x30, 0x1a, 0x0b, 0x68, 0xfd, 0x69, 0x5b, 0x27, 0x96, 0x7d, 0x8e,
	0xb6, 0xc6, 0x92, 0x03, 0x8e, 0x96, 0x3d, 0x9a, 0x2b, 0xe5, 0xab, 0xf6, 0xfb, 0x6b, 0xb9, 0xe1,
	0x7c, 0x8b, 0x2a, 0xa7, 0x20, 0xfd, 0xcb, 0x5f, 0x34, 0x6e, 0xdf, 0xbd, 0xbd, 0x3f, 0x95, 0x6a,
	0xad, 0xaa, 0xf1, 0xaf, 0xf4, 0xf4, 0x79, 0x85, 0xc2, 0x7f, 0x7b, 0xd6, 0xb1, 0xb3, 0xf7, 0xf0,
	0xfa, 0x3c, 0x2b, 0x57, 0xd1, 0xb6, 0xe1, 0xa8, 0x47, 0xe9, 0x0f, 0x3f, 0x5e, 0x3e, 0x1f, 0xff,
	0xd5, 0xed, 0x5a, 0x8e, 0x45, 0x7e, 0x6f, 0x77, 0x91, 0x53, 0xda, 0x45, 0x0e, 0xa1, 0xf9, 0x38,
	0x8c, 0xd3, 0x9b, 0xcc, 0x98, 0xac, 0x3f, 0x8f, 0x6f, 0x34, 0x8f, 0x72, 0x64, 0xdd, 0x5b, 0xd6,
	0xa8, 0x3c, 0xf9, 0xaf, 0x82, 0xed, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xcb, 0x0a, 0x07,
	0xf4, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ListenerDiscoveryServiceClient is the client API for ListenerDiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ListenerDiscoveryServiceClient interface {
	DeltaListeners(ctx context.Context, opts ...grpc.CallOption) (ListenerDiscoveryService_DeltaListenersClient, error)
	StreamListeners(ctx context.Context, opts ...grpc.CallOption) (ListenerDiscoveryService_StreamListenersClient, error)
	FetchListeners(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error)
}

type listenerDiscoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewListenerDiscoveryServiceClient(cc *grpc.ClientConn) ListenerDiscoveryServiceClient {
	return &listenerDiscoveryServiceClient{cc}
}

func (c *listenerDiscoveryServiceClient) DeltaListeners(ctx context.Context, opts ...grpc.CallOption) (ListenerDiscoveryService_DeltaListenersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ListenerDiscoveryService_serviceDesc.Streams[0], "/envoy.api.v2.ListenerDiscoveryService/DeltaListeners", opts...)
	if err != nil {
		return nil, err
	}
	x := &listenerDiscoveryServiceDeltaListenersClient{stream}
	return x, nil
}

type ListenerDiscoveryService_DeltaListenersClient interface {
	Send(*DeltaDiscoveryRequest) error
	Recv() (*DeltaDiscoveryResponse, error)
	grpc.ClientStream
}

type listenerDiscoveryServiceDeltaListenersClient struct {
	grpc.ClientStream
}

func (x *listenerDiscoveryServiceDeltaListenersClient) Send(m *DeltaDiscoveryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *listenerDiscoveryServiceDeltaListenersClient) Recv() (*DeltaDiscoveryResponse, error) {
	m := new(DeltaDiscoveryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *listenerDiscoveryServiceClient) StreamListeners(ctx context.Context, opts ...grpc.CallOption) (ListenerDiscoveryService_StreamListenersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ListenerDiscoveryService_serviceDesc.Streams[1], "/envoy.api.v2.ListenerDiscoveryService/StreamListeners", opts...)
	if err != nil {
		return nil, err
	}
	x := &listenerDiscoveryServiceStreamListenersClient{stream}
	return x, nil
}

type ListenerDiscoveryService_StreamListenersClient interface {
	Send(*DiscoveryRequest) error
	Recv() (*DiscoveryResponse, error)
	grpc.ClientStream
}

type listenerDiscoveryServiceStreamListenersClient struct {
	grpc.ClientStream
}

func (x *listenerDiscoveryServiceStreamListenersClient) Send(m *DiscoveryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *listenerDiscoveryServiceStreamListenersClient) Recv() (*DiscoveryResponse, error) {
	m := new(DiscoveryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *listenerDiscoveryServiceClient) FetchListeners(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error) {
	out := new(DiscoveryResponse)
	err := c.cc.Invoke(ctx, "/envoy.api.v2.ListenerDiscoveryService/FetchListeners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListenerDiscoveryServiceServer is the server API for ListenerDiscoveryService service.
type ListenerDiscoveryServiceServer interface {
	DeltaListeners(ListenerDiscoveryService_DeltaListenersServer) error
	StreamListeners(ListenerDiscoveryService_StreamListenersServer) error
	FetchListeners(context.Context, *DiscoveryRequest) (*DiscoveryResponse, error)
}

// UnimplementedListenerDiscoveryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedListenerDiscoveryServiceServer struct {
}

func (*UnimplementedListenerDiscoveryServiceServer) DeltaListeners(srv ListenerDiscoveryService_DeltaListenersServer) error {
	return status.Errorf(codes.Unimplemented, "method DeltaListeners not implemented")
}
func (*UnimplementedListenerDiscoveryServiceServer) StreamListeners(srv ListenerDiscoveryService_StreamListenersServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamListeners not implemented")
}
func (*UnimplementedListenerDiscoveryServiceServer) FetchListeners(ctx context.Context, req *DiscoveryRequest) (*DiscoveryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchListeners not implemented")
}

func RegisterListenerDiscoveryServiceServer(s *grpc.Server, srv ListenerDiscoveryServiceServer) {
	s.RegisterService(&_ListenerDiscoveryService_serviceDesc, srv)
}

func _ListenerDiscoveryService_DeltaListeners_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ListenerDiscoveryServiceServer).DeltaListeners(&listenerDiscoveryServiceDeltaListenersServer{stream})
}

type ListenerDiscoveryService_DeltaListenersServer interface {
	Send(*DeltaDiscoveryResponse) error
	Recv() (*DeltaDiscoveryRequest, error)
	grpc.ServerStream
}

type listenerDiscoveryServiceDeltaListenersServer struct {
	grpc.ServerStream
}

func (x *listenerDiscoveryServiceDeltaListenersServer) Send(m *DeltaDiscoveryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *listenerDiscoveryServiceDeltaListenersServer) Recv() (*DeltaDiscoveryRequest, error) {
	m := new(DeltaDiscoveryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ListenerDiscoveryService_StreamListeners_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ListenerDiscoveryServiceServer).StreamListeners(&listenerDiscoveryServiceStreamListenersServer{stream})
}

type ListenerDiscoveryService_StreamListenersServer interface {
	Send(*DiscoveryResponse) error
	Recv() (*DiscoveryRequest, error)
	grpc.ServerStream
}

type listenerDiscoveryServiceStreamListenersServer struct {
	grpc.ServerStream
}

func (x *listenerDiscoveryServiceStreamListenersServer) Send(m *DiscoveryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *listenerDiscoveryServiceStreamListenersServer) Recv() (*DiscoveryRequest, error) {
	m := new(DiscoveryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ListenerDiscoveryService_FetchListeners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenerDiscoveryServiceServer).FetchListeners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envoy.api.v2.ListenerDiscoveryService/FetchListeners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenerDiscoveryServiceServer).FetchListeners(ctx, req.(*DiscoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ListenerDiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "envoy.api.v2.ListenerDiscoveryService",
	HandlerType: (*ListenerDiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchListeners",
			Handler:    _ListenerDiscoveryService_FetchListeners_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DeltaListeners",
			Handler:       _ListenerDiscoveryService_DeltaListeners_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamListeners",
			Handler:       _ListenerDiscoveryService_StreamListeners_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "envoy/api/v2/lds.proto",
}
