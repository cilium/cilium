// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/extensions/filters/common/fault/v3/fault.proto

package envoy_extensions_filters_common_fault_v3

import (
	fmt "fmt"
	_ "github.com/cilium/proxy/go/envoy/annotations"
	v3 "github.com/cilium/proxy/go/envoy/type/v3"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FaultDelay_FaultDelayType int32

const (
	// Unused and deprecated.
	FaultDelay_FIXED FaultDelay_FaultDelayType = 0
)

var FaultDelay_FaultDelayType_name = map[int32]string{
	0: "FIXED",
}

var FaultDelay_FaultDelayType_value = map[string]int32{
	"FIXED": 0,
}

func (x FaultDelay_FaultDelayType) String() string {
	return proto.EnumName(FaultDelay_FaultDelayType_name, int32(x))
}

func (FaultDelay_FaultDelayType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99c2ca93a0e6a448, []int{0, 0}
}

// Delay specification is used to inject latency into the
// HTTP/gRPC/Mongo/Redis operation or delay proxying of TCP connections.
// [#next-free-field: 6]
type FaultDelay struct {
	// Types that are valid to be assigned to FaultDelaySecifier:
	//	*FaultDelay_FixedDelay
	//	*FaultDelay_HeaderDelay_
	FaultDelaySecifier isFaultDelay_FaultDelaySecifier `protobuf_oneof:"fault_delay_secifier"`
	// The percentage of operations/connections/requests on which the delay will be injected.
	Percentage           *v3.FractionalPercent `protobuf:"bytes,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FaultDelay) Reset()         { *m = FaultDelay{} }
func (m *FaultDelay) String() string { return proto.CompactTextString(m) }
func (*FaultDelay) ProtoMessage()    {}
func (*FaultDelay) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c2ca93a0e6a448, []int{0}
}

func (m *FaultDelay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultDelay.Unmarshal(m, b)
}
func (m *FaultDelay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultDelay.Marshal(b, m, deterministic)
}
func (m *FaultDelay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultDelay.Merge(m, src)
}
func (m *FaultDelay) XXX_Size() int {
	return xxx_messageInfo_FaultDelay.Size(m)
}
func (m *FaultDelay) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultDelay.DiscardUnknown(m)
}

var xxx_messageInfo_FaultDelay proto.InternalMessageInfo

type isFaultDelay_FaultDelaySecifier interface {
	isFaultDelay_FaultDelaySecifier()
}

type FaultDelay_FixedDelay struct {
	FixedDelay *duration.Duration `protobuf:"bytes,3,opt,name=fixed_delay,json=fixedDelay,proto3,oneof"`
}

type FaultDelay_HeaderDelay_ struct {
	HeaderDelay *FaultDelay_HeaderDelay `protobuf:"bytes,5,opt,name=header_delay,json=headerDelay,proto3,oneof"`
}

func (*FaultDelay_FixedDelay) isFaultDelay_FaultDelaySecifier() {}

func (*FaultDelay_HeaderDelay_) isFaultDelay_FaultDelaySecifier() {}

func (m *FaultDelay) GetFaultDelaySecifier() isFaultDelay_FaultDelaySecifier {
	if m != nil {
		return m.FaultDelaySecifier
	}
	return nil
}

func (m *FaultDelay) GetFixedDelay() *duration.Duration {
	if x, ok := m.GetFaultDelaySecifier().(*FaultDelay_FixedDelay); ok {
		return x.FixedDelay
	}
	return nil
}

func (m *FaultDelay) GetHeaderDelay() *FaultDelay_HeaderDelay {
	if x, ok := m.GetFaultDelaySecifier().(*FaultDelay_HeaderDelay_); ok {
		return x.HeaderDelay
	}
	return nil
}

func (m *FaultDelay) GetPercentage() *v3.FractionalPercent {
	if m != nil {
		return m.Percentage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FaultDelay) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FaultDelay_FixedDelay)(nil),
		(*FaultDelay_HeaderDelay_)(nil),
	}
}

// Fault delays are controlled via an HTTP header (if applicable). See the
// :ref:`HTTP fault filter <config_http_filters_fault_injection_http_header>` documentation for
// more information.
type FaultDelay_HeaderDelay struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaultDelay_HeaderDelay) Reset()         { *m = FaultDelay_HeaderDelay{} }
func (m *FaultDelay_HeaderDelay) String() string { return proto.CompactTextString(m) }
func (*FaultDelay_HeaderDelay) ProtoMessage()    {}
func (*FaultDelay_HeaderDelay) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c2ca93a0e6a448, []int{0, 0}
}

func (m *FaultDelay_HeaderDelay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultDelay_HeaderDelay.Unmarshal(m, b)
}
func (m *FaultDelay_HeaderDelay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultDelay_HeaderDelay.Marshal(b, m, deterministic)
}
func (m *FaultDelay_HeaderDelay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultDelay_HeaderDelay.Merge(m, src)
}
func (m *FaultDelay_HeaderDelay) XXX_Size() int {
	return xxx_messageInfo_FaultDelay_HeaderDelay.Size(m)
}
func (m *FaultDelay_HeaderDelay) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultDelay_HeaderDelay.DiscardUnknown(m)
}

var xxx_messageInfo_FaultDelay_HeaderDelay proto.InternalMessageInfo

// Describes a rate limit to be applied.
type FaultRateLimit struct {
	// Types that are valid to be assigned to LimitType:
	//	*FaultRateLimit_FixedLimit_
	//	*FaultRateLimit_HeaderLimit_
	LimitType isFaultRateLimit_LimitType `protobuf_oneof:"limit_type"`
	// The percentage of operations/connections/requests on which the rate limit will be injected.
	Percentage           *v3.FractionalPercent `protobuf:"bytes,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FaultRateLimit) Reset()         { *m = FaultRateLimit{} }
func (m *FaultRateLimit) String() string { return proto.CompactTextString(m) }
func (*FaultRateLimit) ProtoMessage()    {}
func (*FaultRateLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c2ca93a0e6a448, []int{1}
}

func (m *FaultRateLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultRateLimit.Unmarshal(m, b)
}
func (m *FaultRateLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultRateLimit.Marshal(b, m, deterministic)
}
func (m *FaultRateLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultRateLimit.Merge(m, src)
}
func (m *FaultRateLimit) XXX_Size() int {
	return xxx_messageInfo_FaultRateLimit.Size(m)
}
func (m *FaultRateLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultRateLimit.DiscardUnknown(m)
}

var xxx_messageInfo_FaultRateLimit proto.InternalMessageInfo

type isFaultRateLimit_LimitType interface {
	isFaultRateLimit_LimitType()
}

type FaultRateLimit_FixedLimit_ struct {
	FixedLimit *FaultRateLimit_FixedLimit `protobuf:"bytes,1,opt,name=fixed_limit,json=fixedLimit,proto3,oneof"`
}

type FaultRateLimit_HeaderLimit_ struct {
	HeaderLimit *FaultRateLimit_HeaderLimit `protobuf:"bytes,3,opt,name=header_limit,json=headerLimit,proto3,oneof"`
}

func (*FaultRateLimit_FixedLimit_) isFaultRateLimit_LimitType() {}

func (*FaultRateLimit_HeaderLimit_) isFaultRateLimit_LimitType() {}

func (m *FaultRateLimit) GetLimitType() isFaultRateLimit_LimitType {
	if m != nil {
		return m.LimitType
	}
	return nil
}

func (m *FaultRateLimit) GetFixedLimit() *FaultRateLimit_FixedLimit {
	if x, ok := m.GetLimitType().(*FaultRateLimit_FixedLimit_); ok {
		return x.FixedLimit
	}
	return nil
}

func (m *FaultRateLimit) GetHeaderLimit() *FaultRateLimit_HeaderLimit {
	if x, ok := m.GetLimitType().(*FaultRateLimit_HeaderLimit_); ok {
		return x.HeaderLimit
	}
	return nil
}

func (m *FaultRateLimit) GetPercentage() *v3.FractionalPercent {
	if m != nil {
		return m.Percentage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FaultRateLimit) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FaultRateLimit_FixedLimit_)(nil),
		(*FaultRateLimit_HeaderLimit_)(nil),
	}
}

// Describes a fixed/constant rate limit.
type FaultRateLimit_FixedLimit struct {
	// The limit supplied in KiB/s.
	LimitKbps            uint64   `protobuf:"varint,1,opt,name=limit_kbps,json=limitKbps,proto3" json:"limit_kbps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaultRateLimit_FixedLimit) Reset()         { *m = FaultRateLimit_FixedLimit{} }
func (m *FaultRateLimit_FixedLimit) String() string { return proto.CompactTextString(m) }
func (*FaultRateLimit_FixedLimit) ProtoMessage()    {}
func (*FaultRateLimit_FixedLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c2ca93a0e6a448, []int{1, 0}
}

func (m *FaultRateLimit_FixedLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultRateLimit_FixedLimit.Unmarshal(m, b)
}
func (m *FaultRateLimit_FixedLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultRateLimit_FixedLimit.Marshal(b, m, deterministic)
}
func (m *FaultRateLimit_FixedLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultRateLimit_FixedLimit.Merge(m, src)
}
func (m *FaultRateLimit_FixedLimit) XXX_Size() int {
	return xxx_messageInfo_FaultRateLimit_FixedLimit.Size(m)
}
func (m *FaultRateLimit_FixedLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultRateLimit_FixedLimit.DiscardUnknown(m)
}

var xxx_messageInfo_FaultRateLimit_FixedLimit proto.InternalMessageInfo

func (m *FaultRateLimit_FixedLimit) GetLimitKbps() uint64 {
	if m != nil {
		return m.LimitKbps
	}
	return 0
}

// Rate limits are controlled via an HTTP header (if applicable). See the
// :ref:`HTTP fault filter <config_http_filters_fault_injection_http_header>` documentation for
// more information.
type FaultRateLimit_HeaderLimit struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaultRateLimit_HeaderLimit) Reset()         { *m = FaultRateLimit_HeaderLimit{} }
func (m *FaultRateLimit_HeaderLimit) String() string { return proto.CompactTextString(m) }
func (*FaultRateLimit_HeaderLimit) ProtoMessage()    {}
func (*FaultRateLimit_HeaderLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c2ca93a0e6a448, []int{1, 1}
}

func (m *FaultRateLimit_HeaderLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultRateLimit_HeaderLimit.Unmarshal(m, b)
}
func (m *FaultRateLimit_HeaderLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultRateLimit_HeaderLimit.Marshal(b, m, deterministic)
}
func (m *FaultRateLimit_HeaderLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultRateLimit_HeaderLimit.Merge(m, src)
}
func (m *FaultRateLimit_HeaderLimit) XXX_Size() int {
	return xxx_messageInfo_FaultRateLimit_HeaderLimit.Size(m)
}
func (m *FaultRateLimit_HeaderLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultRateLimit_HeaderLimit.DiscardUnknown(m)
}

var xxx_messageInfo_FaultRateLimit_HeaderLimit proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("envoy.extensions.filters.common.fault.v3.FaultDelay_FaultDelayType", FaultDelay_FaultDelayType_name, FaultDelay_FaultDelayType_value)
	proto.RegisterType((*FaultDelay)(nil), "envoy.extensions.filters.common.fault.v3.FaultDelay")
	proto.RegisterType((*FaultDelay_HeaderDelay)(nil), "envoy.extensions.filters.common.fault.v3.FaultDelay.HeaderDelay")
	proto.RegisterType((*FaultRateLimit)(nil), "envoy.extensions.filters.common.fault.v3.FaultRateLimit")
	proto.RegisterType((*FaultRateLimit_FixedLimit)(nil), "envoy.extensions.filters.common.fault.v3.FaultRateLimit.FixedLimit")
	proto.RegisterType((*FaultRateLimit_HeaderLimit)(nil), "envoy.extensions.filters.common.fault.v3.FaultRateLimit.HeaderLimit")
}

func init() {
	proto.RegisterFile("envoy/extensions/filters/common/fault/v3/fault.proto", fileDescriptor_99c2ca93a0e6a448)
}

var fileDescriptor_99c2ca93a0e6a448 = []byte{
	// 591 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0x6e, 0xd2, 0xec, 0xba, 0x3b, 0x15, 0xa9, 0x41, 0xb0, 0xb6, 0xb8, 0xac, 0x15, 0xb4, 0x2a,
	0x4e, 0xa0, 0xd5, 0x55, 0x0b, 0xca, 0x12, 0x6b, 0xe9, 0xae, 0x3f, 0x28, 0xc1, 0x83, 0xb7, 0x32,
	0x4d, 0x5e, 0xba, 0x83, 0x69, 0x26, 0x24, 0xd3, 0xd2, 0xde, 0x3c, 0xfa, 0x37, 0xf8, 0x27, 0x78,
	0xf2, 0xec, 0x59, 0xc1, 0xab, 0xff, 0x8d, 0xec, 0x49, 0xe6, 0x47, 0xda, 0x2e, 0x2a, 0xb6, 0x7b,
	0x9b, 0x37, 0xef, 0x7d, 0xdf, 0x7b, 0xef, 0xfb, 0x86, 0x41, 0x0f, 0x20, 0x9e, 0xb2, 0xb9, 0x03,
	0x33, 0x0e, 0x71, 0x46, 0x59, 0x9c, 0x39, 0x21, 0x8d, 0x38, 0xa4, 0x99, 0xe3, 0xb3, 0xf1, 0x98,
	0xc5, 0x4e, 0x48, 0x26, 0x11, 0x77, 0xa6, 0x2d, 0x75, 0xc0, 0x49, 0xca, 0x38, 0xb3, 0x1b, 0x12,
	0x85, 0x97, 0x28, 0xac, 0x51, 0x58, 0xa1, 0xb0, 0x2a, 0x9e, 0xb6, 0xaa, 0x35, 0xc5, 0xcf, 0xe7,
	0x09, 0x08, 0x92, 0x04, 0x52, 0x1f, 0x62, 0x4d, 0x53, 0xdd, 0x1b, 0x31, 0x36, 0x8a, 0xc0, 0x91,
	0xd1, 0x70, 0x12, 0x3a, 0xc1, 0x24, 0x25, 0x9c, 0xb2, 0x58, 0xe7, 0x6f, 0x2a, 0x30, 0x89, 0x63,
	0xc6, 0xe5, 0x7d, 0xe6, 0x04, 0x90, 0xa4, 0xe0, 0xaf, 0x16, 0x5d, 0x9f, 0x04, 0x09, 0x39, 0x53,
	0x93, 0x71, 0xc2, 0x27, 0x99, 0x4e, 0xdf, 0xf8, 0x23, 0x3d, 0x85, 0x54, 0xcc, 0x4c, 0xe3, 0x91,
	0x2e, 0xb9, 0x3a, 0x25, 0x11, 0x0d, 0x08, 0x07, 0x27, 0x3f, 0xa8, 0x44, 0xfd, 0x5b, 0x11, 0xa1,
	0xae, 0xd8, 0xa4, 0x03, 0x11, 0x99, 0xdb, 0x5d, 0x54, 0x0a, 0xe9, 0x0c, 0x82, 0x41, 0x20, 0xc2,
	0x4a, 0x71, 0xdf, 0x68, 0x94, 0x9a, 0xd7, 0xb0, 0x5a, 0x02, 0xe7, 0x4b, 0xe0, 0x8e, 0x5e, 0xc2,
	0xdd, 0x39, 0x75, 0xb7, 0x3e, 0x1b, 0xe6, 0xdd, 0x42, 0xaf, 0xe0, 0x21, 0x89, 0x54, 0x3c, 0x80,
	0x2e, 0x9e, 0x00, 0x09, 0x20, 0xd5, 0x44, 0x5b, 0x92, 0xe8, 0x10, 0xaf, 0x2b, 0x2a, 0x5e, 0xce,
	0x84, 0x7b, 0x92, 0x48, 0x9e, 0x7b, 0x05, 0xaf, 0x74, 0xb2, 0x0c, 0xed, 0x43, 0x84, 0xb4, 0xdc,
	0x64, 0x04, 0x15, 0x4b, 0x36, 0xd9, 0xd7, 0x4d, 0x84, 0x1f, 0x92, 0x29, 0x25, 0xbe, 0x98, 0x95,
	0x44, 0x7d, 0x55, 0xea, 0xad, 0x60, 0xaa, 0x47, 0xa8, 0xb4, 0xc2, 0xdf, 0x6e, 0x7f, 0xfa, 0xfe,
	0x71, 0xef, 0x21, 0x6a, 0x29, 0x0a, 0x9f, 0xc5, 0x21, 0x1d, 0xe9, 0x19, 0xf3, 0xd9, 0x9a, 0xff,
	0x98, 0xad, 0x5e, 0x43, 0x97, 0x96, 0x99, 0xb7, 0xf3, 0x04, 0xec, 0x5d, 0xb4, 0xd5, 0x3d, 0x7a,
	0xf7, 0xa2, 0x53, 0x2e, 0xb4, 0xb1, 0x20, 0xbe, 0x83, 0x6e, 0xaf, 0x49, 0xec, 0xd6, 0xd0, 0x15,
	0x79, 0xad, 0xf4, 0x1b, 0x64, 0xe0, 0xd3, 0x90, 0x42, 0x6a, 0x17, 0x7f, 0xb9, 0xc6, 0xb1, 0xb5,
	0x63, 0x96, 0x8b, 0xc7, 0xd6, 0x8e, 0x51, 0x36, 0x3d, 0x4b, 0xec, 0x59, 0xff, 0x62, 0xe9, 0xe6,
	0x1e, 0xe1, 0xf0, 0x8a, 0x8e, 0x29, 0xb7, 0xc3, 0xdc, 0xca, 0x48, 0x84, 0x15, 0x43, 0x8a, 0xf3,
	0x7c, 0x43, 0x07, 0x16, 0x74, 0xb8, 0x2b, 0xb8, 0xe4, 0x71, 0x61, 0xb5, 0xea, 0x43, 0x17, 0x56,
	0xab, 0x46, 0xea, 0xcd, 0x74, 0xce, 0xdd, 0x48, 0x49, 0x9a, 0x77, 0xd2, 0x76, 0xab, 0x56, 0x67,
	0xed, 0x36, 0xcf, 0x61, 0x77, 0x86, 0xd0, 0x72, 0x11, 0xfb, 0x16, 0x42, 0x72, 0xe6, 0xc1, 0xfb,
	0x61, 0x92, 0x49, 0x85, 0x2c, 0xf7, 0xc2, 0xa9, 0x6b, 0x35, 0xcd, 0x86, 0xe1, 0xed, 0xca, 0xd4,
	0xcb, 0x61, 0x92, 0xb5, 0x9f, 0x0a, 0xf3, 0x1e, 0xa3, 0x83, 0xff, 0x9b, 0xf7, 0x37, 0xbd, 0xaa,
	0xaf, 0xf3, 0x37, 0x26, 0xc3, 0xf6, 0x33, 0xc1, 0xf6, 0x04, 0x3d, 0xda, 0x84, 0x6d, 0x15, 0xdf,
	0x14, 0xf8, 0xfb, 0xe8, 0xde, 0x06, 0x78, 0xf7, 0x72, 0xbe, 0xa9, 0x90, 0x49, 0x3e, 0x22, 0xf7,
	0xcd, 0xd7, 0x0f, 0x3f, 0x7e, 0x6e, 0x9b, 0x65, 0x13, 0x1d, 0x50, 0xa6, 0x44, 0x4c, 0x52, 0x36,
	0x9b, 0xaf, 0x6d, 0x9c, 0xab, 0x3e, 0x8e, 0xbe, 0xf8, 0x14, 0xfa, 0xc6, 0x70, 0x5b, 0xfe, 0x0e,
	0xad, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x36, 0xd5, 0x6b, 0x6f, 0x05, 0x00, 0x00,
}
