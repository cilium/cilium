// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.19.4
// source: envoy/extensions/filters/network/meta_protocol_proxy/v3/meta_protocol_proxy.proto

package meta_protocol_proxyv3

import (
	v3 "github.com/cilium/proxy/go/envoy/config/core/v3"
	_ "github.com/cncf/xds/go/udpa/annotations"
	_ "github.com/cncf/xds/go/xds/annotations/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// [#not-implemented-hide:]
// [#next-free-field: 6]
type MetaProtocolProxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The human readable prefix to use when emitting statistics.
	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// The application protocol built on top of the meta protocol proxy.
	ApplicationProtocol *ApplicationProtocol `protobuf:"bytes,2,opt,name=application_protocol,json=applicationProtocol,proto3" json:"application_protocol,omitempty"`
	// Types that are assignable to RouteSpecifier:
	//
	//	*MetaProtocolProxy_Rds
	//	*MetaProtocolProxy_RouteConfig
	RouteSpecifier isMetaProtocolProxy_RouteSpecifier `protobuf_oneof:"route_specifier"`
	// A list of individual Layer-7 filters that make up the filter chain for requests made to the
	// meta protocol proxy. Order matters as the filters are processed sequentially as request events
	// happen.
	MetaProtocolFilters []*v3.TypedExtensionConfig `protobuf:"bytes,5,rep,name=meta_protocol_filters,json=metaProtocolFilters,proto3" json:"meta_protocol_filters,omitempty"`
}

func (x *MetaProtocolProxy) Reset() {
	*x = MetaProtocolProxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaProtocolProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaProtocolProxy) ProtoMessage() {}

func (x *MetaProtocolProxy) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaProtocolProxy.ProtoReflect.Descriptor instead.
func (*MetaProtocolProxy) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *MetaProtocolProxy) GetStatPrefix() string {
	if x != nil {
		return x.StatPrefix
	}
	return ""
}

func (x *MetaProtocolProxy) GetApplicationProtocol() *ApplicationProtocol {
	if x != nil {
		return x.ApplicationProtocol
	}
	return nil
}

func (m *MetaProtocolProxy) GetRouteSpecifier() isMetaProtocolProxy_RouteSpecifier {
	if m != nil {
		return m.RouteSpecifier
	}
	return nil
}

func (x *MetaProtocolProxy) GetRds() *MetaRds {
	if x, ok := x.GetRouteSpecifier().(*MetaProtocolProxy_Rds); ok {
		return x.Rds
	}
	return nil
}

func (x *MetaProtocolProxy) GetRouteConfig() *RouteConfiguration {
	if x, ok := x.GetRouteSpecifier().(*MetaProtocolProxy_RouteConfig); ok {
		return x.RouteConfig
	}
	return nil
}

func (x *MetaProtocolProxy) GetMetaProtocolFilters() []*v3.TypedExtensionConfig {
	if x != nil {
		return x.MetaProtocolFilters
	}
	return nil
}

type isMetaProtocolProxy_RouteSpecifier interface {
	isMetaProtocolProxy_RouteSpecifier()
}

type MetaProtocolProxy_Rds struct {
	// The meta protocol proxies route table will be dynamically loaded via the meta RDS API.
	Rds *MetaRds `protobuf:"bytes,3,opt,name=rds,proto3,oneof"`
}

type MetaProtocolProxy_RouteConfig struct {
	// The route table for the meta protocol proxy is static and is specified in this property.
	RouteConfig *RouteConfiguration `protobuf:"bytes,4,opt,name=route_config,json=routeConfig,proto3,oneof"`
}

func (*MetaProtocolProxy_Rds) isMetaProtocolProxy_RouteSpecifier() {}

func (*MetaProtocolProxy_RouteConfig) isMetaProtocolProxy_RouteSpecifier() {}

// [#not-implemented-hide:]
type ApplicationProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the application protocol.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The codec which encodes and decodes the application protocol.
	Codec *v3.TypedExtensionConfig `protobuf:"bytes,2,opt,name=codec,proto3" json:"codec,omitempty"`
}

func (x *ApplicationProtocol) Reset() {
	*x = ApplicationProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationProtocol) ProtoMessage() {}

func (x *ApplicationProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationProtocol.ProtoReflect.Descriptor instead.
func (*ApplicationProtocol) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationProtocol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationProtocol) GetCodec() *v3.TypedExtensionConfig {
	if x != nil {
		return x.Codec
	}
	return nil
}

// [#not-implemented-hide:]
type MetaRds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Configuration source specifier for RDS.
	ConfigSource *v3.ConfigSource `protobuf:"bytes,1,opt,name=config_source,json=configSource,proto3" json:"config_source,omitempty"`
	// The name of the route configuration. This name will be passed to the RDS API. This allows an
	// Envoy configuration with multiple meta protocol proxies to use different route configurations.
	RouteConfigName string `protobuf:"bytes,2,opt,name=route_config_name,json=routeConfigName,proto3" json:"route_config_name,omitempty"`
}

func (x *MetaRds) Reset() {
	*x = MetaRds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaRds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaRds) ProtoMessage() {}

func (x *MetaRds) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaRds.ProtoReflect.Descriptor instead.
func (*MetaRds) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *MetaRds) GetConfigSource() *v3.ConfigSource {
	if x != nil {
		return x.ConfigSource
	}
	return nil
}

func (x *MetaRds) GetRouteConfigName() string {
	if x != nil {
		return x.RouteConfigName
	}
	return ""
}

var File_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto protoreflect.FileDescriptor

var file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDesc = []byte{
	0x0a, 0x51, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x33, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x37, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x33, 0x1a, 0x28, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x78, 0x64, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x04, 0x0a, 0x11, 0x4d,
	0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x12, 0x28, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x54, 0x0a, 0x03, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x64, 0x73, 0x48, 0x00, 0x52, 0x03, 0x72, 0x64, 0x73, 0x12, 0x70, 0x0a, 0x0c,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5e,
	0x0a, 0x15, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x6d, 0x65, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x42, 0x16,
	0x0a, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x7e, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1b, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x33,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x22, 0x91, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x64, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x33,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0xe7, 0x01, 0x0a, 0x45, 0x69,
	0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x65, 0x6e, 0x76,
	0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x76, 0x33, 0x42, 0x16, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x74,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x33, 0x3b, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x76, 0x33, 0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02, 0x10, 0x02, 0xd2, 0xc6, 0xa4, 0xe1,
	0x06, 0x02, 0x08, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescData = file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDesc
)

func file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescData)
	})
	return file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDescData
}

var file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_goTypes = []interface{}{
	(*MetaProtocolProxy)(nil),       // 0: envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaProtocolProxy
	(*ApplicationProtocol)(nil),     // 1: envoy.extensions.filters.network.meta_protocol_proxy.v3.ApplicationProtocol
	(*MetaRds)(nil),                 // 2: envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaRds
	(*RouteConfiguration)(nil),      // 3: envoy.extensions.filters.network.meta_protocol_proxy.v3.RouteConfiguration
	(*v3.TypedExtensionConfig)(nil), // 4: envoy.config.core.v3.TypedExtensionConfig
	(*v3.ConfigSource)(nil),         // 5: envoy.config.core.v3.ConfigSource
}
var file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaProtocolProxy.application_protocol:type_name -> envoy.extensions.filters.network.meta_protocol_proxy.v3.ApplicationProtocol
	2, // 1: envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaProtocolProxy.rds:type_name -> envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaRds
	3, // 2: envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaProtocolProxy.route_config:type_name -> envoy.extensions.filters.network.meta_protocol_proxy.v3.RouteConfiguration
	4, // 3: envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaProtocolProxy.meta_protocol_filters:type_name -> envoy.config.core.v3.TypedExtensionConfig
	4, // 4: envoy.extensions.filters.network.meta_protocol_proxy.v3.ApplicationProtocol.codec:type_name -> envoy.config.core.v3.TypedExtensionConfig
	5, // 5: envoy.extensions.filters.network.meta_protocol_proxy.v3.MetaRds.config_source:type_name -> envoy.config.core.v3.ConfigSource
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() {
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_init()
}
func file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_init() {
	if File_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto != nil {
		return
	}
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_route_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaProtocolProxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaRds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MetaProtocolProxy_Rds)(nil),
		(*MetaProtocolProxy_RouteConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto = out.File
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_rawDesc = nil
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_goTypes = nil
	file_envoy_extensions_filters_network_meta_protocol_proxy_v3_meta_protocol_proxy_proto_depIdxs = nil
}
