// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v5.26.1
// source: envoy/service/redis_auth/v3/redis_external_auth.proto

package redis_authv3

import (
	context "context"
	_ "github.com/cncf/xds/go/udpa/annotations"
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RedisProxyExternalAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Username, if applicable. Otherwise, empty.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Password sent with the AUTH command.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RedisProxyExternalAuthRequest) Reset() {
	*x = RedisProxyExternalAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisProxyExternalAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisProxyExternalAuthRequest) ProtoMessage() {}

func (x *RedisProxyExternalAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisProxyExternalAuthRequest.ProtoReflect.Descriptor instead.
func (*RedisProxyExternalAuthRequest) Descriptor() ([]byte, []int) {
	return file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescGZIP(), []int{0}
}

func (x *RedisProxyExternalAuthRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RedisProxyExternalAuthRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RedisProxyExternalAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the authentication check.
	Status *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Optional expiration time for the authentication.
	// If set, the authentication will be valid until this time.
	// If not set, the authentication will be valid indefinitely.
	Expiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// Optional message to be sent back to the client.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RedisProxyExternalAuthResponse) Reset() {
	*x = RedisProxyExternalAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisProxyExternalAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisProxyExternalAuthResponse) ProtoMessage() {}

func (x *RedisProxyExternalAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisProxyExternalAuthResponse.ProtoReflect.Descriptor instead.
func (*RedisProxyExternalAuthResponse) Descriptor() ([]byte, []int) {
	return file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescGZIP(), []int{1}
}

func (x *RedisProxyExternalAuthResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RedisProxyExternalAuthResponse) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *RedisProxyExternalAuthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_envoy_service_redis_auth_v3_redis_external_auth_proto protoreflect.FileDescriptor

var file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDesc = []byte{
	0x0a, 0x35, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65,
	0x64, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x76, 0x33, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a,
	0x1d, 0x52, 0x65, 0x64, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xa4, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x33, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x9e, 0x01, 0x0a, 0x29, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x33,
	0x42, 0x16, 0x52, 0x65, 0x64, 0x69, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x33, 0x3b, 0x72,
	0x65, 0x64, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x76, 0x33, 0xba, 0x80, 0xc8, 0xd1, 0x06,
	0x02, 0x10, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescOnce sync.Once
	file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescData = file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDesc
)

func file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescGZIP() []byte {
	file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescOnce.Do(func() {
		file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescData)
	})
	return file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDescData
}

var file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_service_redis_auth_v3_redis_external_auth_proto_goTypes = []interface{}{
	(*RedisProxyExternalAuthRequest)(nil),  // 0: envoy.service.redis_auth.v3.RedisProxyExternalAuthRequest
	(*RedisProxyExternalAuthResponse)(nil), // 1: envoy.service.redis_auth.v3.RedisProxyExternalAuthResponse
	(*status.Status)(nil),                  // 2: google.rpc.Status
	(*timestamppb.Timestamp)(nil),          // 3: google.protobuf.Timestamp
}
var file_envoy_service_redis_auth_v3_redis_external_auth_proto_depIdxs = []int32{
	2, // 0: envoy.service.redis_auth.v3.RedisProxyExternalAuthResponse.status:type_name -> google.rpc.Status
	3, // 1: envoy.service.redis_auth.v3.RedisProxyExternalAuthResponse.expiration:type_name -> google.protobuf.Timestamp
	0, // 2: envoy.service.redis_auth.v3.RedisProxyExternalAuth.Authenticate:input_type -> envoy.service.redis_auth.v3.RedisProxyExternalAuthRequest
	1, // 3: envoy.service.redis_auth.v3.RedisProxyExternalAuth.Authenticate:output_type -> envoy.service.redis_auth.v3.RedisProxyExternalAuthResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envoy_service_redis_auth_v3_redis_external_auth_proto_init() }
func file_envoy_service_redis_auth_v3_redis_external_auth_proto_init() {
	if File_envoy_service_redis_auth_v3_redis_external_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisProxyExternalAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisProxyExternalAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_envoy_service_redis_auth_v3_redis_external_auth_proto_goTypes,
		DependencyIndexes: file_envoy_service_redis_auth_v3_redis_external_auth_proto_depIdxs,
		MessageInfos:      file_envoy_service_redis_auth_v3_redis_external_auth_proto_msgTypes,
	}.Build()
	File_envoy_service_redis_auth_v3_redis_external_auth_proto = out.File
	file_envoy_service_redis_auth_v3_redis_external_auth_proto_rawDesc = nil
	file_envoy_service_redis_auth_v3_redis_external_auth_proto_goTypes = nil
	file_envoy_service_redis_auth_v3_redis_external_auth_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RedisProxyExternalAuthClient is the client API for RedisProxyExternalAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RedisProxyExternalAuthClient interface {
	// Performs authentication check based on the data sent with the AUTH request.
	// Returns either an OK status or an error status.
	Authenticate(ctx context.Context, in *RedisProxyExternalAuthRequest, opts ...grpc.CallOption) (*RedisProxyExternalAuthResponse, error)
}

type redisProxyExternalAuthClient struct {
	cc grpc.ClientConnInterface
}

func NewRedisProxyExternalAuthClient(cc grpc.ClientConnInterface) RedisProxyExternalAuthClient {
	return &redisProxyExternalAuthClient{cc}
}

func (c *redisProxyExternalAuthClient) Authenticate(ctx context.Context, in *RedisProxyExternalAuthRequest, opts ...grpc.CallOption) (*RedisProxyExternalAuthResponse, error) {
	out := new(RedisProxyExternalAuthResponse)
	err := c.cc.Invoke(ctx, "/envoy.service.redis_auth.v3.RedisProxyExternalAuth/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RedisProxyExternalAuthServer is the server API for RedisProxyExternalAuth service.
type RedisProxyExternalAuthServer interface {
	// Performs authentication check based on the data sent with the AUTH request.
	// Returns either an OK status or an error status.
	Authenticate(context.Context, *RedisProxyExternalAuthRequest) (*RedisProxyExternalAuthResponse, error)
}

// UnimplementedRedisProxyExternalAuthServer can be embedded to have forward compatible implementations.
type UnimplementedRedisProxyExternalAuthServer struct {
}

func (*UnimplementedRedisProxyExternalAuthServer) Authenticate(context.Context, *RedisProxyExternalAuthRequest) (*RedisProxyExternalAuthResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}

func RegisterRedisProxyExternalAuthServer(s *grpc.Server, srv RedisProxyExternalAuthServer) {
	s.RegisterService(&_RedisProxyExternalAuth_serviceDesc, srv)
}

func _RedisProxyExternalAuth_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedisProxyExternalAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RedisProxyExternalAuthServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envoy.service.redis_auth.v3.RedisProxyExternalAuth/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RedisProxyExternalAuthServer).Authenticate(ctx, req.(*RedisProxyExternalAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RedisProxyExternalAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "envoy.service.redis_auth.v3.RedisProxyExternalAuth",
	HandlerType: (*RedisProxyExternalAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authenticate",
			Handler:    _RedisProxyExternalAuth_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "envoy/service/redis_auth/v3/redis_external_auth.proto",
}
