// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/core/v3/config_source.proto

package envoy_config_core_v3

import (
	fmt "fmt"
	_ "github.com/cilium/proxy/go/envoy/annotations"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// xDS API version. This is used to describe both resource and transport
// protocol versions (in distinct configuration fields).
type ApiVersion int32

const (
	// When not specified, we assume v2, to ease migration to Envoy's stable API
	// versioning. If a client does not support v2 (e.g. due to deprecation), this
	// is an invalid value.
	ApiVersion_AUTO ApiVersion = 0
	// Use xDS v2 API.
	ApiVersion_V2 ApiVersion = 1
	// Use xDS v3 API.
	ApiVersion_V3 ApiVersion = 2
)

var ApiVersion_name = map[int32]string{
	0: "AUTO",
	1: "V2",
	2: "V3",
}

var ApiVersion_value = map[string]int32{
	"AUTO": 0,
	"V2":   1,
	"V3":   2,
}

func (x ApiVersion) String() string {
	return proto.EnumName(ApiVersion_name, int32(x))
}

func (ApiVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a3116f5d2bd13e64, []int{0}
}

// APIs may be fetched via either REST or gRPC.
type ApiConfigSource_ApiType int32

const (
	// Ideally this would be 'reserved 0' but one can't reserve the default
	// value. Instead we throw an exception if this is ever used.
	ApiConfigSource_DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE ApiConfigSource_ApiType = 0 // Deprecated: Do not use.
	// REST-JSON v2 API. The `canonical JSON encoding
	// <https://developers.google.com/protocol-buffers/docs/proto3#json>`_ for
	// the v2 protos is used.
	ApiConfigSource_REST ApiConfigSource_ApiType = 1
	// gRPC v2 API.
	ApiConfigSource_GRPC ApiConfigSource_ApiType = 2
	// Using the delta xDS gRPC service, i.e. DeltaDiscovery{Request,Response}
	// rather than Discovery{Request,Response}. Rather than sending Envoy the entire state
	// with every update, the xDS server only sends what has changed since the last update.
	//
	// DELTA_GRPC is not yet entirely implemented! Initially, only CDS is available.
	// Do not use for other xDSes.
	// [#comment:TODO(fredlas) update/remove this warning when appropriate.]
	ApiConfigSource_DELTA_GRPC ApiConfigSource_ApiType = 3
)

var ApiConfigSource_ApiType_name = map[int32]string{
	0: "DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE",
	1: "REST",
	2: "GRPC",
	3: "DELTA_GRPC",
}

var ApiConfigSource_ApiType_value = map[string]int32{
	"DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE": 0,
	"REST":                                  1,
	"GRPC":                                  2,
	"DELTA_GRPC":                            3,
}

func (x ApiConfigSource_ApiType) String() string {
	return proto.EnumName(ApiConfigSource_ApiType_name, int32(x))
}

func (ApiConfigSource_ApiType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a3116f5d2bd13e64, []int{0, 0}
}

// API configuration source. This identifies the API type and cluster that Envoy
// will use to fetch an xDS API.
// [#next-free-field: 9]
type ApiConfigSource struct {
	// API type (gRPC, REST, delta gRPC)
	ApiType ApiConfigSource_ApiType `protobuf:"varint,1,opt,name=api_type,json=apiType,proto3,enum=envoy.config.core.v3.ApiConfigSource_ApiType" json:"api_type,omitempty"`
	// API version for xDS transport protocol. This describes the xDS gRPC/REST
	// endpoint and version of [Delta]DiscoveryRequest/Response used on the wire.
	TransportApiVersion ApiVersion `protobuf:"varint,8,opt,name=transport_api_version,json=transportApiVersion,proto3,enum=envoy.config.core.v3.ApiVersion" json:"transport_api_version,omitempty"`
	// Cluster names should be used only with REST. If > 1
	// cluster is defined, clusters will be cycled through if any kind of failure
	// occurs.
	//
	// .. note::
	//
	//  The cluster with name ``cluster_name`` must be statically defined and its
	//  type must not be ``EDS``.
	ClusterNames []string `protobuf:"bytes,2,rep,name=cluster_names,json=clusterNames,proto3" json:"cluster_names,omitempty"`
	// Multiple gRPC services be provided for GRPC. If > 1 cluster is defined,
	// services will be cycled through if any kind of failure occurs.
	GrpcServices []*GrpcService `protobuf:"bytes,4,rep,name=grpc_services,json=grpcServices,proto3" json:"grpc_services,omitempty"`
	// For REST APIs, the delay between successive polls.
	RefreshDelay *duration.Duration `protobuf:"bytes,3,opt,name=refresh_delay,json=refreshDelay,proto3" json:"refresh_delay,omitempty"`
	// For REST APIs, the request timeout. If not set, a default value of 1s will be used.
	RequestTimeout *duration.Duration `protobuf:"bytes,5,opt,name=request_timeout,json=requestTimeout,proto3" json:"request_timeout,omitempty"`
	// For GRPC APIs, the rate limit settings. If present, discovery requests made by Envoy will be
	// rate limited.
	RateLimitSettings *RateLimitSettings `protobuf:"bytes,6,opt,name=rate_limit_settings,json=rateLimitSettings,proto3" json:"rate_limit_settings,omitempty"`
	// Skip the node identifier in subsequent discovery requests for streaming gRPC config types.
	SetNodeOnFirstMessageOnly bool     `protobuf:"varint,7,opt,name=set_node_on_first_message_only,json=setNodeOnFirstMessageOnly,proto3" json:"set_node_on_first_message_only,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *ApiConfigSource) Reset()         { *m = ApiConfigSource{} }
func (m *ApiConfigSource) String() string { return proto.CompactTextString(m) }
func (*ApiConfigSource) ProtoMessage()    {}
func (*ApiConfigSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3116f5d2bd13e64, []int{0}
}

func (m *ApiConfigSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiConfigSource.Unmarshal(m, b)
}
func (m *ApiConfigSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiConfigSource.Marshal(b, m, deterministic)
}
func (m *ApiConfigSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiConfigSource.Merge(m, src)
}
func (m *ApiConfigSource) XXX_Size() int {
	return xxx_messageInfo_ApiConfigSource.Size(m)
}
func (m *ApiConfigSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiConfigSource.DiscardUnknown(m)
}

var xxx_messageInfo_ApiConfigSource proto.InternalMessageInfo

func (m *ApiConfigSource) GetApiType() ApiConfigSource_ApiType {
	if m != nil {
		return m.ApiType
	}
	return ApiConfigSource_DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE
}

func (m *ApiConfigSource) GetTransportApiVersion() ApiVersion {
	if m != nil {
		return m.TransportApiVersion
	}
	return ApiVersion_AUTO
}

func (m *ApiConfigSource) GetClusterNames() []string {
	if m != nil {
		return m.ClusterNames
	}
	return nil
}

func (m *ApiConfigSource) GetGrpcServices() []*GrpcService {
	if m != nil {
		return m.GrpcServices
	}
	return nil
}

func (m *ApiConfigSource) GetRefreshDelay() *duration.Duration {
	if m != nil {
		return m.RefreshDelay
	}
	return nil
}

func (m *ApiConfigSource) GetRequestTimeout() *duration.Duration {
	if m != nil {
		return m.RequestTimeout
	}
	return nil
}

func (m *ApiConfigSource) GetRateLimitSettings() *RateLimitSettings {
	if m != nil {
		return m.RateLimitSettings
	}
	return nil
}

func (m *ApiConfigSource) GetSetNodeOnFirstMessageOnly() bool {
	if m != nil {
		return m.SetNodeOnFirstMessageOnly
	}
	return false
}

// Aggregated Discovery Service (ADS) options. This is currently empty, but when
// set in :ref:`ConfigSource <envoy_api_msg_config.core.v3.ConfigSource>` can be used to
// specify that ADS is to be used.
type AggregatedConfigSource struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatedConfigSource) Reset()         { *m = AggregatedConfigSource{} }
func (m *AggregatedConfigSource) String() string { return proto.CompactTextString(m) }
func (*AggregatedConfigSource) ProtoMessage()    {}
func (*AggregatedConfigSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3116f5d2bd13e64, []int{1}
}

func (m *AggregatedConfigSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedConfigSource.Unmarshal(m, b)
}
func (m *AggregatedConfigSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedConfigSource.Marshal(b, m, deterministic)
}
func (m *AggregatedConfigSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedConfigSource.Merge(m, src)
}
func (m *AggregatedConfigSource) XXX_Size() int {
	return xxx_messageInfo_AggregatedConfigSource.Size(m)
}
func (m *AggregatedConfigSource) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedConfigSource.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedConfigSource proto.InternalMessageInfo

// [#not-implemented-hide:]
// Self-referencing config source options. This is currently empty, but when
// set in :ref:`ConfigSource <envoy_api_msg_config.core.v3.ConfigSource>` can be used to
// specify that other data can be obtained from the same server.
type SelfConfigSource struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelfConfigSource) Reset()         { *m = SelfConfigSource{} }
func (m *SelfConfigSource) String() string { return proto.CompactTextString(m) }
func (*SelfConfigSource) ProtoMessage()    {}
func (*SelfConfigSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3116f5d2bd13e64, []int{2}
}

func (m *SelfConfigSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelfConfigSource.Unmarshal(m, b)
}
func (m *SelfConfigSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelfConfigSource.Marshal(b, m, deterministic)
}
func (m *SelfConfigSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelfConfigSource.Merge(m, src)
}
func (m *SelfConfigSource) XXX_Size() int {
	return xxx_messageInfo_SelfConfigSource.Size(m)
}
func (m *SelfConfigSource) XXX_DiscardUnknown() {
	xxx_messageInfo_SelfConfigSource.DiscardUnknown(m)
}

var xxx_messageInfo_SelfConfigSource proto.InternalMessageInfo

// Rate Limit settings to be applied for discovery requests made by Envoy.
type RateLimitSettings struct {
	// Maximum number of tokens to be used for rate limiting discovery request calls. If not set, a
	// default value of 100 will be used.
	MaxTokens *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	// Rate at which tokens will be filled per second. If not set, a default fill rate of 10 tokens
	// per second will be used.
	FillRate             *wrappers.DoubleValue `protobuf:"bytes,2,opt,name=fill_rate,json=fillRate,proto3" json:"fill_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RateLimitSettings) Reset()         { *m = RateLimitSettings{} }
func (m *RateLimitSettings) String() string { return proto.CompactTextString(m) }
func (*RateLimitSettings) ProtoMessage()    {}
func (*RateLimitSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3116f5d2bd13e64, []int{3}
}

func (m *RateLimitSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateLimitSettings.Unmarshal(m, b)
}
func (m *RateLimitSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateLimitSettings.Marshal(b, m, deterministic)
}
func (m *RateLimitSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateLimitSettings.Merge(m, src)
}
func (m *RateLimitSettings) XXX_Size() int {
	return xxx_messageInfo_RateLimitSettings.Size(m)
}
func (m *RateLimitSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_RateLimitSettings.DiscardUnknown(m)
}

var xxx_messageInfo_RateLimitSettings proto.InternalMessageInfo

func (m *RateLimitSettings) GetMaxTokens() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxTokens
	}
	return nil
}

func (m *RateLimitSettings) GetFillRate() *wrappers.DoubleValue {
	if m != nil {
		return m.FillRate
	}
	return nil
}

// Configuration for :ref:`listeners <config_listeners>`, :ref:`clusters
// <config_cluster_manager>`, :ref:`routes
// <envoy_api_msg_config.route.v3.RouteConfiguration>`, :ref:`endpoints
// <arch_overview_service_discovery>` etc. may either be sourced from the
// filesystem or from an xDS API source. Filesystem configs are watched with
// inotify for updates.
// [#next-free-field: 7]
type ConfigSource struct {
	// Types that are valid to be assigned to ConfigSourceSpecifier:
	//	*ConfigSource_Path
	//	*ConfigSource_ApiConfigSource
	//	*ConfigSource_Ads
	//	*ConfigSource_Self
	ConfigSourceSpecifier isConfigSource_ConfigSourceSpecifier `protobuf_oneof:"config_source_specifier"`
	// When this timeout is specified, Envoy will wait no longer than the specified time for first
	// config response on this xDS subscription during the :ref:`initialization process
	// <arch_overview_initialization>`. After reaching the timeout, Envoy will move to the next
	// initialization phase, even if the first config is not delivered yet. The timer is activated
	// when the xDS API subscription starts, and is disarmed on first config update or on error. 0
	// means no timeout - Envoy will wait indefinitely for the first xDS config (unless another
	// timeout applies). The default is 15s.
	InitialFetchTimeout *duration.Duration `protobuf:"bytes,4,opt,name=initial_fetch_timeout,json=initialFetchTimeout,proto3" json:"initial_fetch_timeout,omitempty"`
	// API version for xDS resources. This implies the type URLs that the client
	// will request for resources and the resource type that the client will in
	// turn expect to be delivered.
	ResourceApiVersion   ApiVersion `protobuf:"varint,6,opt,name=resource_api_version,json=resourceApiVersion,proto3,enum=envoy.config.core.v3.ApiVersion" json:"resource_api_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ConfigSource) Reset()         { *m = ConfigSource{} }
func (m *ConfigSource) String() string { return proto.CompactTextString(m) }
func (*ConfigSource) ProtoMessage()    {}
func (*ConfigSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a3116f5d2bd13e64, []int{4}
}

func (m *ConfigSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSource.Unmarshal(m, b)
}
func (m *ConfigSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSource.Marshal(b, m, deterministic)
}
func (m *ConfigSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSource.Merge(m, src)
}
func (m *ConfigSource) XXX_Size() int {
	return xxx_messageInfo_ConfigSource.Size(m)
}
func (m *ConfigSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSource.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSource proto.InternalMessageInfo

type isConfigSource_ConfigSourceSpecifier interface {
	isConfigSource_ConfigSourceSpecifier()
}

type ConfigSource_Path struct {
	Path string `protobuf:"bytes,1,opt,name=path,proto3,oneof"`
}

type ConfigSource_ApiConfigSource struct {
	ApiConfigSource *ApiConfigSource `protobuf:"bytes,2,opt,name=api_config_source,json=apiConfigSource,proto3,oneof"`
}

type ConfigSource_Ads struct {
	Ads *AggregatedConfigSource `protobuf:"bytes,3,opt,name=ads,proto3,oneof"`
}

type ConfigSource_Self struct {
	Self *SelfConfigSource `protobuf:"bytes,5,opt,name=self,proto3,oneof"`
}

func (*ConfigSource_Path) isConfigSource_ConfigSourceSpecifier() {}

func (*ConfigSource_ApiConfigSource) isConfigSource_ConfigSourceSpecifier() {}

func (*ConfigSource_Ads) isConfigSource_ConfigSourceSpecifier() {}

func (*ConfigSource_Self) isConfigSource_ConfigSourceSpecifier() {}

func (m *ConfigSource) GetConfigSourceSpecifier() isConfigSource_ConfigSourceSpecifier {
	if m != nil {
		return m.ConfigSourceSpecifier
	}
	return nil
}

func (m *ConfigSource) GetPath() string {
	if x, ok := m.GetConfigSourceSpecifier().(*ConfigSource_Path); ok {
		return x.Path
	}
	return ""
}

func (m *ConfigSource) GetApiConfigSource() *ApiConfigSource {
	if x, ok := m.GetConfigSourceSpecifier().(*ConfigSource_ApiConfigSource); ok {
		return x.ApiConfigSource
	}
	return nil
}

func (m *ConfigSource) GetAds() *AggregatedConfigSource {
	if x, ok := m.GetConfigSourceSpecifier().(*ConfigSource_Ads); ok {
		return x.Ads
	}
	return nil
}

func (m *ConfigSource) GetSelf() *SelfConfigSource {
	if x, ok := m.GetConfigSourceSpecifier().(*ConfigSource_Self); ok {
		return x.Self
	}
	return nil
}

func (m *ConfigSource) GetInitialFetchTimeout() *duration.Duration {
	if m != nil {
		return m.InitialFetchTimeout
	}
	return nil
}

func (m *ConfigSource) GetResourceApiVersion() ApiVersion {
	if m != nil {
		return m.ResourceApiVersion
	}
	return ApiVersion_AUTO
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigSource) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigSource_Path)(nil),
		(*ConfigSource_ApiConfigSource)(nil),
		(*ConfigSource_Ads)(nil),
		(*ConfigSource_Self)(nil),
	}
}

func init() {
	proto.RegisterEnum("envoy.config.core.v3.ApiVersion", ApiVersion_name, ApiVersion_value)
	proto.RegisterEnum("envoy.config.core.v3.ApiConfigSource_ApiType", ApiConfigSource_ApiType_name, ApiConfigSource_ApiType_value)
	proto.RegisterType((*ApiConfigSource)(nil), "envoy.config.core.v3.ApiConfigSource")
	proto.RegisterType((*AggregatedConfigSource)(nil), "envoy.config.core.v3.AggregatedConfigSource")
	proto.RegisterType((*SelfConfigSource)(nil), "envoy.config.core.v3.SelfConfigSource")
	proto.RegisterType((*RateLimitSettings)(nil), "envoy.config.core.v3.RateLimitSettings")
	proto.RegisterType((*ConfigSource)(nil), "envoy.config.core.v3.ConfigSource")
}

func init() {
	proto.RegisterFile("envoy/config/core/v3/config_source.proto", fileDescriptor_a3116f5d2bd13e64)
}

var fileDescriptor_a3116f5d2bd13e64 = []byte{
	// 946 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4b, 0x6f, 0x23, 0x45,
	0x10, 0xf6, 0x8c, 0xbd, 0x89, 0xd3, 0x79, 0x39, 0x9d, 0x2c, 0xeb, 0x8d, 0x20, 0x72, 0x1c, 0xb2,
	0x6b, 0x22, 0x18, 0x4b, 0xf6, 0x2d, 0x3c, 0xc4, 0x38, 0x76, 0x36, 0x91, 0xb2, 0x76, 0x34, 0x76,
	0xc2, 0x05, 0xd1, 0xea, 0xd8, 0xe5, 0x49, 0x8b, 0xf1, 0xf4, 0xd0, 0xdd, 0x63, 0xe2, 0x1b, 0xe2,
	0x84, 0xc4, 0x3f, 0xe0, 0x17, 0x20, 0xce, 0x9c, 0xb8, 0x23, 0xb8, 0xf2, 0x37, 0x90, 0x38, 0x83,
	0xf6, 0x84, 0x7a, 0x66, 0xbc, 0xf1, 0x2b, 0x5a, 0xf0, 0xc5, 0x53, 0x5d, 0xdf, 0xf7, 0x75, 0x3d,
	0xba, 0x0a, 0x95, 0xc0, 0x1f, 0xf2, 0x51, 0xb9, 0xcb, 0xfd, 0x3e, 0x73, 0xcb, 0x5d, 0x2e, 0xa0,
	0x3c, 0xac, 0x26, 0x26, 0x91, 0x3c, 0x14, 0x5d, 0xb0, 0x02, 0xc1, 0x15, 0xc7, 0x3b, 0x11, 0xd2,
	0x8a, 0x5d, 0x96, 0x46, 0x5a, 0xc3, 0xea, 0xee, 0xf3, 0x85, 0x7c, 0x57, 0x04, 0x5d, 0x22, 0x41,
	0x0c, 0xd9, 0x98, 0xbe, 0xbb, 0xe7, 0x72, 0xee, 0x7a, 0x50, 0x8e, 0xac, 0x9b, 0xb0, 0x5f, 0xee,
	0x85, 0x82, 0x2a, 0xc6, 0xfd, 0x87, 0xfc, 0x5f, 0x0b, 0x1a, 0x04, 0x20, 0x64, 0xe2, 0x3f, 0x88,
	0x2f, 0xa2, 0xbe, 0xcf, 0x55, 0xc4, 0x93, 0xe5, 0x1e, 0x04, 0x02, 0xba, 0x93, 0x22, 0xef, 0x84,
	0xbd, 0x80, 0x4e, 0x61, 0xa4, 0xa2, 0x2a, 0x1c, 0x6b, 0xec, 0xcf, 0xb9, 0x87, 0x20, 0x24, 0xe3,
	0x3e, 0xf3, 0xdd, 0x04, 0xf2, 0x64, 0x48, 0x3d, 0xd6, 0xa3, 0x0a, 0xca, 0xe3, 0x8f, 0xd8, 0x51,
	0xfc, 0xf3, 0x11, 0xda, 0xb4, 0x03, 0x76, 0x12, 0x25, 0xda, 0x8e, 0x0a, 0x83, 0x1d, 0x94, 0xa5,
	0x01, 0x23, 0x6a, 0x14, 0x40, 0xde, 0x28, 0x18, 0xa5, 0x8d, 0xca, 0x07, 0xd6, 0xa2, 0x2a, 0x59,
	0x33, 0x44, 0x6d, 0x77, 0x46, 0x01, 0xd4, 0xb2, 0xaf, 0x6a, 0x8f, 0xbe, 0x35, 0xcc, 0x9c, 0xe1,
	0x2c, 0xd3, 0xf8, 0x08, 0x7f, 0x81, 0x1e, 0x2b, 0x41, 0x7d, 0x19, 0x70, 0xa1, 0x88, 0x56, 0x4f,
	0x42, 0xcc, 0x67, 0xa3, 0x0b, 0x0a, 0x0f, 0x5e, 0x70, 0x1d, 0xe3, 0x26, 0x34, 0xb7, 0x5f, 0x0b,
	0xdd, 0xbb, 0xf1, 0x01, 0x5a, 0xef, 0x7a, 0xa1, 0x54, 0x20, 0x88, 0x4f, 0x07, 0x20, 0xf3, 0x66,
	0x21, 0x5d, 0x5a, 0x71, 0xd6, 0x92, 0xc3, 0xa6, 0x3e, 0xc3, 0xa7, 0x68, 0x7d, 0xb2, 0x85, 0x32,
	0x9f, 0x29, 0xa4, 0x4b, 0xab, 0x95, 0xfd, 0xc5, 0x97, 0xbf, 0x10, 0x41, 0xb7, 0x1d, 0x23, 0x9d,
	0x35, 0xf7, 0xde, 0x90, 0xf8, 0x13, 0xb4, 0x2e, 0xa0, 0x2f, 0x40, 0xde, 0x92, 0x1e, 0x78, 0x74,
	0x94, 0x4f, 0x17, 0x8c, 0xd2, 0x6a, 0xe5, 0xa9, 0x15, 0x37, 0xdb, 0x1a, 0x37, 0xdb, 0xaa, 0x27,
	0x8f, 0xc1, 0x59, 0x4b, 0xf0, 0x75, 0x0d, 0xc7, 0x17, 0x68, 0x53, 0xc0, 0x57, 0x21, 0x48, 0x45,
	0x14, 0x1b, 0x00, 0x0f, 0x55, 0xfe, 0xd1, 0x1b, 0x14, 0xa2, 0xfc, 0x7f, 0x32, 0xcc, 0xa3, 0x94,
	0xb3, 0x91, 0x70, 0x3b, 0x31, 0x15, 0x7f, 0x86, 0xb6, 0x05, 0x55, 0x40, 0x3c, 0x36, 0x60, 0x8a,
	0x48, 0x50, 0x8a, 0xf9, 0xae, 0xcc, 0x2f, 0x45, 0x8a, 0xcf, 0x17, 0xe7, 0xe6, 0x50, 0x05, 0x17,
	0x1a, 0xdf, 0x4e, 0xe0, 0xce, 0x96, 0x98, 0x3d, 0xc2, 0x36, 0xda, 0x93, 0xa0, 0x88, 0xcf, 0x7b,
	0x40, 0xb8, 0x4f, 0xfa, 0x4c, 0x48, 0x45, 0x06, 0x20, 0x25, 0x75, 0xf5, 0x81, 0x37, 0xca, 0x2f,
	0x17, 0x8c, 0x52, 0xd6, 0x79, 0x2a, 0x41, 0x35, 0x79, 0x0f, 0x5a, 0xfe, 0xa9, 0x86, 0xbc, 0x8c,
	0x11, 0x2d, 0xdf, 0x1b, 0x15, 0x6f, 0xd0, 0x72, 0xf2, 0x28, 0x70, 0x15, 0x1d, 0xd6, 0x1b, 0x97,
	0x4e, 0xe3, 0xc4, 0xee, 0x34, 0xea, 0xc4, 0x6e, 0xd6, 0xc9, 0x55, 0xd3, 0xbe, 0xb6, 0xcf, 0x2f,
	0xec, 0xda, 0x45, 0x83, 0xd4, 0x5b, 0xa4, 0xd9, 0xea, 0x90, 0xab, 0x76, 0x23, 0x97, 0xda, 0xcd,
	0xfe, 0xf8, 0xf7, 0xcf, 0xdf, 0x9b, 0x46, 0xd6, 0xc0, 0x59, 0x94, 0x71, 0x1a, 0xed, 0x4e, 0x2e,
	0xfa, 0x7a, 0xe1, 0x5c, 0x9e, 0xe4, 0x4c, 0xbc, 0x81, 0x50, 0xbd, 0x71, 0xd1, 0xb1, 0x49, 0x64,
	0xa7, 0x8f, 0x4b, 0x3f, 0xfc, 0xfa, 0xdd, 0xde, 0x01, 0xda, 0x8f, 0x13, 0xa5, 0x01, 0xb3, 0x86,
	0x95, 0x38, 0xd1, 0x99, 0xf7, 0x59, 0x3c, 0x47, 0x6f, 0xd9, 0xae, 0x2b, 0xc0, 0xa5, 0x0a, 0x7a,
	0x93, 0x9e, 0xe3, 0xb2, 0xd6, 0x38, 0x4a, 0xd6, 0xc6, 0xb4, 0xc6, 0x42, 0x42, 0xf1, 0x63, 0x94,
	0x6b, 0x83, 0xd7, 0x9f, 0x12, 0x79, 0x4f, 0x8b, 0xbc, 0x8b, 0x8a, 0xf3, 0x22, 0xb3, 0xd0, 0xe2,
	0x6f, 0x06, 0xda, 0x9a, 0xeb, 0x01, 0xfe, 0x10, 0xa1, 0x01, 0xbd, 0x23, 0x8a, 0x7f, 0x09, 0xbe,
	0x8c, 0x46, 0x6f, 0xb5, 0xf2, 0xf6, 0xdc, 0x93, 0xb8, 0x3a, 0xf7, 0x55, 0xb5, 0x72, 0x4d, 0xbd,
	0x10, 0x9c, 0x95, 0x01, 0xbd, 0xeb, 0x44, 0x70, 0x7c, 0x8e, 0x56, 0xfa, 0xcc, 0xf3, 0x88, 0xee,
	0x63, 0xde, 0x7c, 0x80, 0x5b, 0xe7, 0xe1, 0x8d, 0x07, 0x11, 0xb7, 0xb6, 0xf1, 0xaa, 0xb6, 0x8a,
	0x57, 0xf6, 0x53, 0xc9, 0xcf, 0xc9, 0x6a, 0xba, 0x0e, 0xea, 0xf8, 0x48, 0x27, 0x72, 0x88, 0x0e,
	0xe6, 0x13, 0x99, 0x8b, 0xb9, 0xf8, 0x57, 0x1a, 0xad, 0x4d, 0x6d, 0x8f, 0x1d, 0x94, 0x09, 0xa8,
	0xba, 0x8d, 0xc2, 0x5f, 0x39, 0x4b, 0x39, 0x91, 0x85, 0xdb, 0x68, 0x4b, 0x4f, 0xfd, 0xd4, 0x06,
	0x4e, 0xa2, 0x3c, 0xfc, 0x4f, 0xcb, 0xe5, 0x2c, 0xe5, 0x6c, 0xd2, 0x99, 0x45, 0xf5, 0x29, 0x4a,
	0xd3, 0x9e, 0x4c, 0xa6, 0xef, 0xfd, 0x07, 0x64, 0x16, 0xf6, 0xef, 0x2c, 0xe5, 0x68, 0x2a, 0xfe,
	0x08, 0x65, 0x24, 0x78, 0xfd, 0x64, 0xfc, 0x9e, 0x2d, 0x96, 0x98, 0xed, 0x9e, 0x4e, 0x4a, 0xb3,
	0xf0, 0x4b, 0xf4, 0x98, 0xf9, 0x4c, 0x31, 0xea, 0x91, 0x3e, 0xa8, 0xee, 0xed, 0xeb, 0x69, 0xce,
	0xbc, 0x69, 0x1f, 0x6c, 0x27, 0xbc, 0x53, 0x4d, 0x1b, 0x0f, 0xf2, 0xe7, 0x68, 0x47, 0x40, 0x5c,
	0x9a, 0xa9, 0x15, 0xb9, 0xf4, 0xbf, 0x57, 0x24, 0x1e, 0xeb, 0xdc, 0x7b, 0x8f, 0x0f, 0x75, 0x53,
	0x0b, 0x68, 0x6f, 0xbe, 0xa9, 0x93, 0xb9, 0xd5, 0xf6, 0xd0, 0x93, 0xa9, 0x26, 0x11, 0x19, 0x40,
	0x97, 0xf5, 0x19, 0x08, 0x9c, 0xfe, 0xa7, 0x66, 0x1c, 0x3d, 0x43, 0x68, 0x62, 0xed, 0x66, 0x51,
	0xc6, 0xbe, 0xea, 0xb4, 0x72, 0x29, 0xbc, 0x84, 0xcc, 0xeb, 0x4a, 0xce, 0x88, 0xfe, 0xab, 0x39,
	0xb3, 0x66, 0xff, 0xf2, 0xcd, 0xef, 0x7f, 0x2c, 0x99, 0x39, 0x13, 0x15, 0x19, 0x8f, 0x43, 0x0f,
	0x04, 0xbf, 0x1b, 0x2d, 0xcc, 0xa2, 0xb6, 0x35, 0x19, 0xc3, 0xa5, 0x2e, 0xd7, 0xa5, 0x71, 0xb3,
	0x14, 0xd5, 0xad, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xb9, 0xf8, 0x92, 0xcd, 0x07,
	0x00, 0x00,
}
