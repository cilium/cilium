// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/core/v3/base.proto

package envoy_config_core_v3

import (
	fmt "fmt"
	v3 "github.com/cilium/proxy/go/envoy/type/v3"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/golang/protobuf/ptypes/duration"
	_struct "github.com/golang/protobuf/ptypes/struct"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Envoy supports :ref:`upstream priority routing
// <arch_overview_http_routing_priority>` both at the route and the virtual
// cluster level. The current priority implementation uses different connection
// pool and circuit breaking settings for each priority level. This means that
// even for HTTP/2 requests, two physical connections will be used to an
// upstream host. In the future Envoy will likely support true HTTP/2 priority
// over a single upstream connection.
type RoutingPriority int32

const (
	RoutingPriority_DEFAULT RoutingPriority = 0
	RoutingPriority_HIGH    RoutingPriority = 1
)

var RoutingPriority_name = map[int32]string{
	0: "DEFAULT",
	1: "HIGH",
}

var RoutingPriority_value = map[string]int32{
	"DEFAULT": 0,
	"HIGH":    1,
}

func (x RoutingPriority) String() string {
	return proto.EnumName(RoutingPriority_name, int32(x))
}

func (RoutingPriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{0}
}

// HTTP request method.
type RequestMethod int32

const (
	RequestMethod_METHOD_UNSPECIFIED RequestMethod = 0
	RequestMethod_GET                RequestMethod = 1
	RequestMethod_HEAD               RequestMethod = 2
	RequestMethod_POST               RequestMethod = 3
	RequestMethod_PUT                RequestMethod = 4
	RequestMethod_DELETE             RequestMethod = 5
	RequestMethod_CONNECT            RequestMethod = 6
	RequestMethod_OPTIONS            RequestMethod = 7
	RequestMethod_TRACE              RequestMethod = 8
	RequestMethod_PATCH              RequestMethod = 9
)

var RequestMethod_name = map[int32]string{
	0: "METHOD_UNSPECIFIED",
	1: "GET",
	2: "HEAD",
	3: "POST",
	4: "PUT",
	5: "DELETE",
	6: "CONNECT",
	7: "OPTIONS",
	8: "TRACE",
	9: "PATCH",
}

var RequestMethod_value = map[string]int32{
	"METHOD_UNSPECIFIED": 0,
	"GET":                1,
	"HEAD":               2,
	"POST":               3,
	"PUT":                4,
	"DELETE":             5,
	"CONNECT":            6,
	"OPTIONS":            7,
	"TRACE":              8,
	"PATCH":              9,
}

func (x RequestMethod) String() string {
	return proto.EnumName(RequestMethod_name, int32(x))
}

func (RequestMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{1}
}

// Identifies the direction of the traffic relative to the local Envoy.
type TrafficDirection int32

const (
	// Default option is unspecified.
	TrafficDirection_UNSPECIFIED TrafficDirection = 0
	// The transport is used for incoming traffic.
	TrafficDirection_INBOUND TrafficDirection = 1
	// The transport is used for outgoing traffic.
	TrafficDirection_OUTBOUND TrafficDirection = 2
)

var TrafficDirection_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "INBOUND",
	2: "OUTBOUND",
}

var TrafficDirection_value = map[string]int32{
	"UNSPECIFIED": 0,
	"INBOUND":     1,
	"OUTBOUND":    2,
}

func (x TrafficDirection) String() string {
	return proto.EnumName(TrafficDirection_name, int32(x))
}

func (TrafficDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{2}
}

// Identifies location of where either Envoy runs or where upstream hosts run.
type Locality struct {
	// Region this :ref:`zone <envoy_api_field_config.core.v3.Locality.zone>` belongs to.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Defines the local service zone where Envoy is running. Though optional, it
	// should be set if discovery service routing is used and the discovery
	// service exposes :ref:`zone data <envoy_api_field_config.endpoint.v3.LocalityLbEndpoints.locality>`,
	// either in this message or via :option:`--service-zone`. The meaning of zone
	// is context dependent, e.g. `Availability Zone (AZ)
	// <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html>`_
	// on AWS, `Zone <https://cloud.google.com/compute/docs/regions-zones/>`_ on
	// GCP, etc.
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	// When used for locality of upstream hosts, this field further splits zone
	// into smaller chunks of sub-zones so they can be load balanced
	// independently.
	SubZone              string   `protobuf:"bytes,3,opt,name=sub_zone,json=subZone,proto3" json:"sub_zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Locality) Reset()         { *m = Locality{} }
func (m *Locality) String() string { return proto.CompactTextString(m) }
func (*Locality) ProtoMessage()    {}
func (*Locality) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{0}
}

func (m *Locality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Locality.Unmarshal(m, b)
}
func (m *Locality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Locality.Marshal(b, m, deterministic)
}
func (m *Locality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Locality.Merge(m, src)
}
func (m *Locality) XXX_Size() int {
	return xxx_messageInfo_Locality.Size(m)
}
func (m *Locality) XXX_DiscardUnknown() {
	xxx_messageInfo_Locality.DiscardUnknown(m)
}

var xxx_messageInfo_Locality proto.InternalMessageInfo

func (m *Locality) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Locality) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Locality) GetSubZone() string {
	if m != nil {
		return m.SubZone
	}
	return ""
}

// BuildVersion combines SemVer version of extension with free-form build information
// (i.e. 'alpha', 'private-build') as a set of strings.
type BuildVersion struct {
	// SemVer version of extension.
	Version *v3.SemanticVersion `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Free-form build information.
	// Envoy defines several well known keys in the source/common/common/version.h file
	Metadata             *_struct.Struct `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BuildVersion) Reset()         { *m = BuildVersion{} }
func (m *BuildVersion) String() string { return proto.CompactTextString(m) }
func (*BuildVersion) ProtoMessage()    {}
func (*BuildVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{1}
}

func (m *BuildVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildVersion.Unmarshal(m, b)
}
func (m *BuildVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildVersion.Marshal(b, m, deterministic)
}
func (m *BuildVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildVersion.Merge(m, src)
}
func (m *BuildVersion) XXX_Size() int {
	return xxx_messageInfo_BuildVersion.Size(m)
}
func (m *BuildVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildVersion.DiscardUnknown(m)
}

var xxx_messageInfo_BuildVersion proto.InternalMessageInfo

func (m *BuildVersion) GetVersion() *v3.SemanticVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *BuildVersion) GetMetadata() *_struct.Struct {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// Version and identification for an Envoy extension.
// [#next-free-field: 6]
type Extension struct {
	// This is the name of the Envoy filter as specified in the Envoy
	// configuration, e.g. envoy.filters.http.router, com.acme.widget.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Category of the extension.
	// Extension category names use reverse DNS notation. For instance "envoy.filters.listener"
	// for Envoy's built-in listener filters or "com.acme.filters.http" for HTTP filters from
	// acme.com vendor.
	// [#comment:TODO(yanavlasov): Link to the doc with existing envoy category names.]
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	// [#not-implemented-hide:] Type descriptor of extension configuration proto.
	// [#comment:TODO(yanavlasov): Link to the doc with existing configuration protos.]
	// [#comment:TODO(yanavlasov): Add tests when PR #9391 lands.]
	TypeDescriptor string `protobuf:"bytes,3,opt,name=type_descriptor,json=typeDescriptor,proto3" json:"type_descriptor,omitempty"`
	// The version is a property of the extension and maintained independently
	// of other extensions and the Envoy API.
	// This field is not set when extension did not provide version information.
	Version *BuildVersion `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Indicates that the extension is present but was disabled via dynamic configuration.
	Disabled             bool     `protobuf:"varint,5,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Extension) Reset()         { *m = Extension{} }
func (m *Extension) String() string { return proto.CompactTextString(m) }
func (*Extension) ProtoMessage()    {}
func (*Extension) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{2}
}

func (m *Extension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Extension.Unmarshal(m, b)
}
func (m *Extension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Extension.Marshal(b, m, deterministic)
}
func (m *Extension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extension.Merge(m, src)
}
func (m *Extension) XXX_Size() int {
	return xxx_messageInfo_Extension.Size(m)
}
func (m *Extension) XXX_DiscardUnknown() {
	xxx_messageInfo_Extension.DiscardUnknown(m)
}

var xxx_messageInfo_Extension proto.InternalMessageInfo

func (m *Extension) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Extension) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Extension) GetTypeDescriptor() string {
	if m != nil {
		return m.TypeDescriptor
	}
	return ""
}

func (m *Extension) GetVersion() *BuildVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Extension) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

// Identifies a specific Envoy instance. The node identifier is presented to the
// management server, which may use this identifier to distinguish per Envoy
// configuration for serving.
// [#next-free-field: 12]
type Node struct {
	// An opaque node identifier for the Envoy node. This also provides the local
	// service node name. It should be set if any of the following features are
	// used: :ref:`statsd <arch_overview_statistics>`, :ref:`CDS
	// <config_cluster_manager_cds>`, and :ref:`HTTP tracing
	// <arch_overview_tracing>`, either in this message or via
	// :option:`--service-node`.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Defines the local service cluster name where Envoy is running. Though
	// optional, it should be set if any of the following features are used:
	// :ref:`statsd <arch_overview_statistics>`, :ref:`health check cluster
	// verification
	// <envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.service_name_matcher>`,
	// :ref:`runtime override directory <envoy_api_msg_config.bootstrap.v3.Runtime>`,
	// :ref:`user agent addition
	// <envoy_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.add_user_agent>`,
	// :ref:`HTTP global rate limiting <config_http_filters_rate_limit>`,
	// :ref:`CDS <config_cluster_manager_cds>`, and :ref:`HTTP tracing
	// <arch_overview_tracing>`, either in this message or via
	// :option:`--service-cluster`.
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Opaque metadata extending the node identifier. Envoy will pass this
	// directly to the management server.
	Metadata *_struct.Struct `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Locality specifying where the Envoy instance is running.
	Locality *Locality `protobuf:"bytes,4,opt,name=locality,proto3" json:"locality,omitempty"`
	// Free-form string that identifies the entity requesting config.
	// E.g. "envoy" or "grpc"
	UserAgentName string `protobuf:"bytes,6,opt,name=user_agent_name,json=userAgentName,proto3" json:"user_agent_name,omitempty"`
	// Types that are valid to be assigned to UserAgentVersionType:
	//	*Node_UserAgentVersion
	//	*Node_UserAgentBuildVersion
	UserAgentVersionType isNode_UserAgentVersionType `protobuf_oneof:"user_agent_version_type"`
	// List of extensions and their versions supported by the node.
	Extensions []*Extension `protobuf:"bytes,9,rep,name=extensions,proto3" json:"extensions,omitempty"`
	// Client feature support list. These are well known features described
	// in the Envoy API repository for a given major version of an API. Client features
	// use reverse DNS naming scheme, for example `com.acme.feature`.
	// See :ref:`the list of features <client_features>` that xDS client may
	// support.
	ClientFeatures []string `protobuf:"bytes,10,rep,name=client_features,json=clientFeatures,proto3" json:"client_features,omitempty"`
	// Known listening ports on the node as a generic hint to the management server
	// for filtering :ref:`listeners <config_listeners>` to be returned. For example,
	// if there is a listener bound to port 80, the list can optionally contain the
	// SocketAddress `(0.0.0.0,80)`. The field is optional and just a hint.
	ListeningAddresses   []*Address `protobuf:"bytes,11,rep,name=listening_addresses,json=listeningAddresses,proto3" json:"listening_addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{3}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *Node) GetMetadata() *_struct.Struct {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Node) GetLocality() *Locality {
	if m != nil {
		return m.Locality
	}
	return nil
}

func (m *Node) GetUserAgentName() string {
	if m != nil {
		return m.UserAgentName
	}
	return ""
}

type isNode_UserAgentVersionType interface {
	isNode_UserAgentVersionType()
}

type Node_UserAgentVersion struct {
	UserAgentVersion string `protobuf:"bytes,7,opt,name=user_agent_version,json=userAgentVersion,proto3,oneof"`
}

type Node_UserAgentBuildVersion struct {
	UserAgentBuildVersion *BuildVersion `protobuf:"bytes,8,opt,name=user_agent_build_version,json=userAgentBuildVersion,proto3,oneof"`
}

func (*Node_UserAgentVersion) isNode_UserAgentVersionType() {}

func (*Node_UserAgentBuildVersion) isNode_UserAgentVersionType() {}

func (m *Node) GetUserAgentVersionType() isNode_UserAgentVersionType {
	if m != nil {
		return m.UserAgentVersionType
	}
	return nil
}

func (m *Node) GetUserAgentVersion() string {
	if x, ok := m.GetUserAgentVersionType().(*Node_UserAgentVersion); ok {
		return x.UserAgentVersion
	}
	return ""
}

func (m *Node) GetUserAgentBuildVersion() *BuildVersion {
	if x, ok := m.GetUserAgentVersionType().(*Node_UserAgentBuildVersion); ok {
		return x.UserAgentBuildVersion
	}
	return nil
}

func (m *Node) GetExtensions() []*Extension {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *Node) GetClientFeatures() []string {
	if m != nil {
		return m.ClientFeatures
	}
	return nil
}

func (m *Node) GetListeningAddresses() []*Address {
	if m != nil {
		return m.ListeningAddresses
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Node) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Node_UserAgentVersion)(nil),
		(*Node_UserAgentBuildVersion)(nil),
	}
}

// Metadata provides additional inputs to filters based on matched listeners,
// filter chains, routes and endpoints. It is structured as a map, usually from
// filter name (in reverse DNS format) to metadata specific to the filter. Metadata
// key-values for a filter are merged as connection and request handling occurs,
// with later values for the same key overriding earlier values.
//
// An example use of metadata is providing additional values to
// http_connection_manager in the envoy.http_connection_manager.access_log
// namespace.
//
// Another example use of metadata is to per service config info in cluster metadata, which may get
// consumed by multiple filters.
//
// For load balancing, Metadata provides a means to subset cluster endpoints.
// Endpoints have a Metadata object associated and routes contain a Metadata
// object to match against. There are some well defined metadata used today for
// this purpose:
//
// * ``{"envoy.lb": {"canary": <bool> }}`` This indicates the canary status of an
//   endpoint and is also used during header processing
//   (x-envoy-upstream-canary) and for stats purposes.
// [#next-major-version: move to type/metadata/v2]
type Metadata struct {
	// Key is the reverse DNS filter name, e.g. com.acme.widget. The envoy.*
	// namespace is reserved for Envoy's built-in filters.
	FilterMetadata       map[string]*_struct.Struct `protobuf:"bytes,1,rep,name=filter_metadata,json=filterMetadata,proto3" json:"filter_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{4}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetFilterMetadata() map[string]*_struct.Struct {
	if m != nil {
		return m.FilterMetadata
	}
	return nil
}

// Runtime derived uint32 with a default when not specified.
type RuntimeUInt32 struct {
	// Default value if runtime value is not available.
	DefaultValue uint32 `protobuf:"varint,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key to get value for comparison. This value is used if defined.
	RuntimeKey           string   `protobuf:"bytes,3,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeUInt32) Reset()         { *m = RuntimeUInt32{} }
func (m *RuntimeUInt32) String() string { return proto.CompactTextString(m) }
func (*RuntimeUInt32) ProtoMessage()    {}
func (*RuntimeUInt32) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{5}
}

func (m *RuntimeUInt32) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeUInt32.Unmarshal(m, b)
}
func (m *RuntimeUInt32) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeUInt32.Marshal(b, m, deterministic)
}
func (m *RuntimeUInt32) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeUInt32.Merge(m, src)
}
func (m *RuntimeUInt32) XXX_Size() int {
	return xxx_messageInfo_RuntimeUInt32.Size(m)
}
func (m *RuntimeUInt32) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeUInt32.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeUInt32 proto.InternalMessageInfo

func (m *RuntimeUInt32) GetDefaultValue() uint32 {
	if m != nil {
		return m.DefaultValue
	}
	return 0
}

func (m *RuntimeUInt32) GetRuntimeKey() string {
	if m != nil {
		return m.RuntimeKey
	}
	return ""
}

// Runtime derived double with a default when not specified.
type RuntimeDouble struct {
	// Default value if runtime value is not available.
	DefaultValue float64 `protobuf:"fixed64,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key to get value for comparison. This value is used if defined.
	RuntimeKey           string   `protobuf:"bytes,2,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeDouble) Reset()         { *m = RuntimeDouble{} }
func (m *RuntimeDouble) String() string { return proto.CompactTextString(m) }
func (*RuntimeDouble) ProtoMessage()    {}
func (*RuntimeDouble) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{6}
}

func (m *RuntimeDouble) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeDouble.Unmarshal(m, b)
}
func (m *RuntimeDouble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeDouble.Marshal(b, m, deterministic)
}
func (m *RuntimeDouble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeDouble.Merge(m, src)
}
func (m *RuntimeDouble) XXX_Size() int {
	return xxx_messageInfo_RuntimeDouble.Size(m)
}
func (m *RuntimeDouble) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeDouble.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeDouble proto.InternalMessageInfo

func (m *RuntimeDouble) GetDefaultValue() float64 {
	if m != nil {
		return m.DefaultValue
	}
	return 0
}

func (m *RuntimeDouble) GetRuntimeKey() string {
	if m != nil {
		return m.RuntimeKey
	}
	return ""
}

// Runtime derived bool with a default when not specified.
type RuntimeFeatureFlag struct {
	// Default value if runtime value is not available.
	DefaultValue *wrappers.BoolValue `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key to get value for comparison. This value is used if defined. The boolean value must
	// be represented via its
	// `canonical JSON encoding <https://developers.google.com/protocol-buffers/docs/proto3#json>`_.
	RuntimeKey           string   `protobuf:"bytes,2,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeFeatureFlag) Reset()         { *m = RuntimeFeatureFlag{} }
func (m *RuntimeFeatureFlag) String() string { return proto.CompactTextString(m) }
func (*RuntimeFeatureFlag) ProtoMessage()    {}
func (*RuntimeFeatureFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{7}
}

func (m *RuntimeFeatureFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeFeatureFlag.Unmarshal(m, b)
}
func (m *RuntimeFeatureFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeFeatureFlag.Marshal(b, m, deterministic)
}
func (m *RuntimeFeatureFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeFeatureFlag.Merge(m, src)
}
func (m *RuntimeFeatureFlag) XXX_Size() int {
	return xxx_messageInfo_RuntimeFeatureFlag.Size(m)
}
func (m *RuntimeFeatureFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeFeatureFlag.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeFeatureFlag proto.InternalMessageInfo

func (m *RuntimeFeatureFlag) GetDefaultValue() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *RuntimeFeatureFlag) GetRuntimeKey() string {
	if m != nil {
		return m.RuntimeKey
	}
	return ""
}

// Header name/value pair.
type HeaderValue struct {
	// Header name.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Header value.
	//
	// The same :ref:`format specifier <config_access_log_format>` as used for
	// :ref:`HTTP access logging <config_access_log>` applies here, however
	// unknown header values are replaced with the empty string instead of `-`.
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderValue) Reset()         { *m = HeaderValue{} }
func (m *HeaderValue) String() string { return proto.CompactTextString(m) }
func (*HeaderValue) ProtoMessage()    {}
func (*HeaderValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{8}
}

func (m *HeaderValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderValue.Unmarshal(m, b)
}
func (m *HeaderValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderValue.Marshal(b, m, deterministic)
}
func (m *HeaderValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderValue.Merge(m, src)
}
func (m *HeaderValue) XXX_Size() int {
	return xxx_messageInfo_HeaderValue.Size(m)
}
func (m *HeaderValue) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderValue.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderValue proto.InternalMessageInfo

func (m *HeaderValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HeaderValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Header name/value pair plus option to control append behavior.
type HeaderValueOption struct {
	// Header name/value pair that this option applies to.
	Header *HeaderValue `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Should the value be appended? If true (default), the value is appended to
	// existing values.
	Append               *wrappers.BoolValue `protobuf:"bytes,2,opt,name=append,proto3" json:"append,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *HeaderValueOption) Reset()         { *m = HeaderValueOption{} }
func (m *HeaderValueOption) String() string { return proto.CompactTextString(m) }
func (*HeaderValueOption) ProtoMessage()    {}
func (*HeaderValueOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{9}
}

func (m *HeaderValueOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderValueOption.Unmarshal(m, b)
}
func (m *HeaderValueOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderValueOption.Marshal(b, m, deterministic)
}
func (m *HeaderValueOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderValueOption.Merge(m, src)
}
func (m *HeaderValueOption) XXX_Size() int {
	return xxx_messageInfo_HeaderValueOption.Size(m)
}
func (m *HeaderValueOption) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderValueOption.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderValueOption proto.InternalMessageInfo

func (m *HeaderValueOption) GetHeader() *HeaderValue {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HeaderValueOption) GetAppend() *wrappers.BoolValue {
	if m != nil {
		return m.Append
	}
	return nil
}

// Wrapper for a set of headers.
type HeaderMap struct {
	Headers              []*HeaderValue `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HeaderMap) Reset()         { *m = HeaderMap{} }
func (m *HeaderMap) String() string { return proto.CompactTextString(m) }
func (*HeaderMap) ProtoMessage()    {}
func (*HeaderMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{10}
}

func (m *HeaderMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderMap.Unmarshal(m, b)
}
func (m *HeaderMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderMap.Marshal(b, m, deterministic)
}
func (m *HeaderMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderMap.Merge(m, src)
}
func (m *HeaderMap) XXX_Size() int {
	return xxx_messageInfo_HeaderMap.Size(m)
}
func (m *HeaderMap) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderMap.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderMap proto.InternalMessageInfo

func (m *HeaderMap) GetHeaders() []*HeaderValue {
	if m != nil {
		return m.Headers
	}
	return nil
}

// Data source consisting of either a file or an inline value.
type DataSource struct {
	// Types that are valid to be assigned to Specifier:
	//	*DataSource_Filename
	//	*DataSource_InlineBytes
	//	*DataSource_InlineString
	Specifier            isDataSource_Specifier `protobuf_oneof:"specifier"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DataSource) Reset()         { *m = DataSource{} }
func (m *DataSource) String() string { return proto.CompactTextString(m) }
func (*DataSource) ProtoMessage()    {}
func (*DataSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{11}
}

func (m *DataSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSource.Unmarshal(m, b)
}
func (m *DataSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSource.Marshal(b, m, deterministic)
}
func (m *DataSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSource.Merge(m, src)
}
func (m *DataSource) XXX_Size() int {
	return xxx_messageInfo_DataSource.Size(m)
}
func (m *DataSource) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSource.DiscardUnknown(m)
}

var xxx_messageInfo_DataSource proto.InternalMessageInfo

type isDataSource_Specifier interface {
	isDataSource_Specifier()
}

type DataSource_Filename struct {
	Filename string `protobuf:"bytes,1,opt,name=filename,proto3,oneof"`
}

type DataSource_InlineBytes struct {
	InlineBytes []byte `protobuf:"bytes,2,opt,name=inline_bytes,json=inlineBytes,proto3,oneof"`
}

type DataSource_InlineString struct {
	InlineString string `protobuf:"bytes,3,opt,name=inline_string,json=inlineString,proto3,oneof"`
}

func (*DataSource_Filename) isDataSource_Specifier() {}

func (*DataSource_InlineBytes) isDataSource_Specifier() {}

func (*DataSource_InlineString) isDataSource_Specifier() {}

func (m *DataSource) GetSpecifier() isDataSource_Specifier {
	if m != nil {
		return m.Specifier
	}
	return nil
}

func (m *DataSource) GetFilename() string {
	if x, ok := m.GetSpecifier().(*DataSource_Filename); ok {
		return x.Filename
	}
	return ""
}

func (m *DataSource) GetInlineBytes() []byte {
	if x, ok := m.GetSpecifier().(*DataSource_InlineBytes); ok {
		return x.InlineBytes
	}
	return nil
}

func (m *DataSource) GetInlineString() string {
	if x, ok := m.GetSpecifier().(*DataSource_InlineString); ok {
		return x.InlineString
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataSource) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataSource_Filename)(nil),
		(*DataSource_InlineBytes)(nil),
		(*DataSource_InlineString)(nil),
	}
}

// The message specifies the retry policy of remote data source when fetching fails.
type RetryPolicy struct {
	// Specifies parameters that control :ref:`retry backoff strategy <envoy_api_msg_config.core.v3.BackoffStrategy>`.
	// This parameter is optional, in which case the default base interval is 1000 milliseconds. The
	// default maximum interval is 10 times the base interval.
	RetryBackOff *BackoffStrategy `protobuf:"bytes,1,opt,name=retry_back_off,json=retryBackOff,proto3" json:"retry_back_off,omitempty"`
	// Specifies the allowed number of retries. This parameter is optional and
	// defaults to 1.
	NumRetries           *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=num_retries,json=numRetries,proto3" json:"num_retries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RetryPolicy) Reset()         { *m = RetryPolicy{} }
func (m *RetryPolicy) String() string { return proto.CompactTextString(m) }
func (*RetryPolicy) ProtoMessage()    {}
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{12}
}

func (m *RetryPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryPolicy.Unmarshal(m, b)
}
func (m *RetryPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryPolicy.Marshal(b, m, deterministic)
}
func (m *RetryPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryPolicy.Merge(m, src)
}
func (m *RetryPolicy) XXX_Size() int {
	return xxx_messageInfo_RetryPolicy.Size(m)
}
func (m *RetryPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_RetryPolicy proto.InternalMessageInfo

func (m *RetryPolicy) GetRetryBackOff() *BackoffStrategy {
	if m != nil {
		return m.RetryBackOff
	}
	return nil
}

func (m *RetryPolicy) GetNumRetries() *wrappers.UInt32Value {
	if m != nil {
		return m.NumRetries
	}
	return nil
}

// The message specifies how to fetch data from remote and how to verify it.
type RemoteDataSource struct {
	// The HTTP URI to fetch the remote data.
	HttpUri *HttpUri `protobuf:"bytes,1,opt,name=http_uri,json=httpUri,proto3" json:"http_uri,omitempty"`
	// SHA256 string for verifying data.
	Sha256 string `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	// Retry policy for fetching remote data.
	RetryPolicy          *RetryPolicy `protobuf:"bytes,3,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RemoteDataSource) Reset()         { *m = RemoteDataSource{} }
func (m *RemoteDataSource) String() string { return proto.CompactTextString(m) }
func (*RemoteDataSource) ProtoMessage()    {}
func (*RemoteDataSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{13}
}

func (m *RemoteDataSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteDataSource.Unmarshal(m, b)
}
func (m *RemoteDataSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteDataSource.Marshal(b, m, deterministic)
}
func (m *RemoteDataSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteDataSource.Merge(m, src)
}
func (m *RemoteDataSource) XXX_Size() int {
	return xxx_messageInfo_RemoteDataSource.Size(m)
}
func (m *RemoteDataSource) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteDataSource.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteDataSource proto.InternalMessageInfo

func (m *RemoteDataSource) GetHttpUri() *HttpUri {
	if m != nil {
		return m.HttpUri
	}
	return nil
}

func (m *RemoteDataSource) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

func (m *RemoteDataSource) GetRetryPolicy() *RetryPolicy {
	if m != nil {
		return m.RetryPolicy
	}
	return nil
}

// Async data source which support async data fetch.
type AsyncDataSource struct {
	// Types that are valid to be assigned to Specifier:
	//	*AsyncDataSource_Local
	//	*AsyncDataSource_Remote
	Specifier            isAsyncDataSource_Specifier `protobuf_oneof:"specifier"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AsyncDataSource) Reset()         { *m = AsyncDataSource{} }
func (m *AsyncDataSource) String() string { return proto.CompactTextString(m) }
func (*AsyncDataSource) ProtoMessage()    {}
func (*AsyncDataSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{14}
}

func (m *AsyncDataSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsyncDataSource.Unmarshal(m, b)
}
func (m *AsyncDataSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsyncDataSource.Marshal(b, m, deterministic)
}
func (m *AsyncDataSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsyncDataSource.Merge(m, src)
}
func (m *AsyncDataSource) XXX_Size() int {
	return xxx_messageInfo_AsyncDataSource.Size(m)
}
func (m *AsyncDataSource) XXX_DiscardUnknown() {
	xxx_messageInfo_AsyncDataSource.DiscardUnknown(m)
}

var xxx_messageInfo_AsyncDataSource proto.InternalMessageInfo

type isAsyncDataSource_Specifier interface {
	isAsyncDataSource_Specifier()
}

type AsyncDataSource_Local struct {
	Local *DataSource `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

type AsyncDataSource_Remote struct {
	Remote *RemoteDataSource `protobuf:"bytes,2,opt,name=remote,proto3,oneof"`
}

func (*AsyncDataSource_Local) isAsyncDataSource_Specifier() {}

func (*AsyncDataSource_Remote) isAsyncDataSource_Specifier() {}

func (m *AsyncDataSource) GetSpecifier() isAsyncDataSource_Specifier {
	if m != nil {
		return m.Specifier
	}
	return nil
}

func (m *AsyncDataSource) GetLocal() *DataSource {
	if x, ok := m.GetSpecifier().(*AsyncDataSource_Local); ok {
		return x.Local
	}
	return nil
}

func (m *AsyncDataSource) GetRemote() *RemoteDataSource {
	if x, ok := m.GetSpecifier().(*AsyncDataSource_Remote); ok {
		return x.Remote
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AsyncDataSource) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AsyncDataSource_Local)(nil),
		(*AsyncDataSource_Remote)(nil),
	}
}

// Configuration for transport socket in :ref:`listeners <config_listeners>` and
// :ref:`clusters <envoy_api_msg_config.cluster.v3.Cluster>`. If the configuration is
// empty, a default transport socket implementation and configuration will be
// chosen based on the platform and existence of tls_context.
type TransportSocket struct {
	// The name of the transport socket to instantiate. The name must match a supported transport
	// socket implementation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Implementation specific configuration which depends on the implementation being instantiated.
	// See the supported transport socket implementations for further documentation.
	//
	// Types that are valid to be assigned to ConfigType:
	//	*TransportSocket_TypedConfig
	ConfigType           isTransportSocket_ConfigType `protobuf_oneof:"config_type"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TransportSocket) Reset()         { *m = TransportSocket{} }
func (m *TransportSocket) String() string { return proto.CompactTextString(m) }
func (*TransportSocket) ProtoMessage()    {}
func (*TransportSocket) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{15}
}

func (m *TransportSocket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransportSocket.Unmarshal(m, b)
}
func (m *TransportSocket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransportSocket.Marshal(b, m, deterministic)
}
func (m *TransportSocket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransportSocket.Merge(m, src)
}
func (m *TransportSocket) XXX_Size() int {
	return xxx_messageInfo_TransportSocket.Size(m)
}
func (m *TransportSocket) XXX_DiscardUnknown() {
	xxx_messageInfo_TransportSocket.DiscardUnknown(m)
}

var xxx_messageInfo_TransportSocket proto.InternalMessageInfo

func (m *TransportSocket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isTransportSocket_ConfigType interface {
	isTransportSocket_ConfigType()
}

type TransportSocket_TypedConfig struct {
	TypedConfig *any.Any `protobuf:"bytes,3,opt,name=typed_config,json=typedConfig,proto3,oneof"`
}

func (*TransportSocket_TypedConfig) isTransportSocket_ConfigType() {}

func (m *TransportSocket) GetConfigType() isTransportSocket_ConfigType {
	if m != nil {
		return m.ConfigType
	}
	return nil
}

func (m *TransportSocket) GetTypedConfig() *any.Any {
	if x, ok := m.GetConfigType().(*TransportSocket_TypedConfig); ok {
		return x.TypedConfig
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TransportSocket) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TransportSocket_TypedConfig)(nil),
	}
}

// Runtime derived FractionalPercent with defaults for when the numerator or denominator is not
// specified via a runtime key.
//
// .. note::
//
//   Parsing of the runtime key's data is implemented such that it may be represented as a
//   :ref:`FractionalPercent <envoy_api_msg_type.v3.FractionalPercent>` proto represented as JSON/YAML
//   and may also be represented as an integer with the assumption that the value is an integral
//   percentage out of 100. For instance, a runtime key lookup returning the value "42" would parse
//   as a `FractionalPercent` whose numerator is 42 and denominator is HUNDRED.
type RuntimeFractionalPercent struct {
	// Default value if the runtime value's for the numerator/denominator keys are not available.
	DefaultValue *v3.FractionalPercent `protobuf:"bytes,1,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Runtime key for a YAML representation of a FractionalPercent.
	RuntimeKey           string   `protobuf:"bytes,2,opt,name=runtime_key,json=runtimeKey,proto3" json:"runtime_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeFractionalPercent) Reset()         { *m = RuntimeFractionalPercent{} }
func (m *RuntimeFractionalPercent) String() string { return proto.CompactTextString(m) }
func (*RuntimeFractionalPercent) ProtoMessage()    {}
func (*RuntimeFractionalPercent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{16}
}

func (m *RuntimeFractionalPercent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeFractionalPercent.Unmarshal(m, b)
}
func (m *RuntimeFractionalPercent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeFractionalPercent.Marshal(b, m, deterministic)
}
func (m *RuntimeFractionalPercent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeFractionalPercent.Merge(m, src)
}
func (m *RuntimeFractionalPercent) XXX_Size() int {
	return xxx_messageInfo_RuntimeFractionalPercent.Size(m)
}
func (m *RuntimeFractionalPercent) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeFractionalPercent.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeFractionalPercent proto.InternalMessageInfo

func (m *RuntimeFractionalPercent) GetDefaultValue() *v3.FractionalPercent {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *RuntimeFractionalPercent) GetRuntimeKey() string {
	if m != nil {
		return m.RuntimeKey
	}
	return ""
}

// Identifies a specific ControlPlane instance that Envoy is connected to.
type ControlPlane struct {
	// An opaque control plane identifier that uniquely identifies an instance
	// of control plane. This can be used to identify which control plane instance,
	// the Envoy is connected to.
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlPlane) Reset()         { *m = ControlPlane{} }
func (m *ControlPlane) String() string { return proto.CompactTextString(m) }
func (*ControlPlane) ProtoMessage()    {}
func (*ControlPlane) Descriptor() ([]byte, []int) {
	return fileDescriptor_a229416e1b9105e0, []int{17}
}

func (m *ControlPlane) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlPlane.Unmarshal(m, b)
}
func (m *ControlPlane) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlPlane.Marshal(b, m, deterministic)
}
func (m *ControlPlane) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlPlane.Merge(m, src)
}
func (m *ControlPlane) XXX_Size() int {
	return xxx_messageInfo_ControlPlane.Size(m)
}
func (m *ControlPlane) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlPlane.DiscardUnknown(m)
}

var xxx_messageInfo_ControlPlane proto.InternalMessageInfo

func (m *ControlPlane) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func init() {
	proto.RegisterEnum("envoy.config.core.v3.RoutingPriority", RoutingPriority_name, RoutingPriority_value)
	proto.RegisterEnum("envoy.config.core.v3.RequestMethod", RequestMethod_name, RequestMethod_value)
	proto.RegisterEnum("envoy.config.core.v3.TrafficDirection", TrafficDirection_name, TrafficDirection_value)
	proto.RegisterType((*Locality)(nil), "envoy.config.core.v3.Locality")
	proto.RegisterType((*BuildVersion)(nil), "envoy.config.core.v3.BuildVersion")
	proto.RegisterType((*Extension)(nil), "envoy.config.core.v3.Extension")
	proto.RegisterType((*Node)(nil), "envoy.config.core.v3.Node")
	proto.RegisterType((*Metadata)(nil), "envoy.config.core.v3.Metadata")
	proto.RegisterMapType((map[string]*_struct.Struct)(nil), "envoy.config.core.v3.Metadata.FilterMetadataEntry")
	proto.RegisterType((*RuntimeUInt32)(nil), "envoy.config.core.v3.RuntimeUInt32")
	proto.RegisterType((*RuntimeDouble)(nil), "envoy.config.core.v3.RuntimeDouble")
	proto.RegisterType((*RuntimeFeatureFlag)(nil), "envoy.config.core.v3.RuntimeFeatureFlag")
	proto.RegisterType((*HeaderValue)(nil), "envoy.config.core.v3.HeaderValue")
	proto.RegisterType((*HeaderValueOption)(nil), "envoy.config.core.v3.HeaderValueOption")
	proto.RegisterType((*HeaderMap)(nil), "envoy.config.core.v3.HeaderMap")
	proto.RegisterType((*DataSource)(nil), "envoy.config.core.v3.DataSource")
	proto.RegisterType((*RetryPolicy)(nil), "envoy.config.core.v3.RetryPolicy")
	proto.RegisterType((*RemoteDataSource)(nil), "envoy.config.core.v3.RemoteDataSource")
	proto.RegisterType((*AsyncDataSource)(nil), "envoy.config.core.v3.AsyncDataSource")
	proto.RegisterType((*TransportSocket)(nil), "envoy.config.core.v3.TransportSocket")
	proto.RegisterType((*RuntimeFractionalPercent)(nil), "envoy.config.core.v3.RuntimeFractionalPercent")
	proto.RegisterType((*ControlPlane)(nil), "envoy.config.core.v3.ControlPlane")
}

func init() { proto.RegisterFile("envoy/config/core/v3/base.proto", fileDescriptor_a229416e1b9105e0) }

var fileDescriptor_a229416e1b9105e0 = []byte{
	// 1745 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0x4f, 0x73, 0xe3, 0x48,
	0x15, 0x8f, 0x9c, 0xc4, 0x7f, 0x9e, 0x9d, 0x44, 0xdb, 0xbb, 0xcc, 0x78, 0x32, 0x93, 0xc4, 0x51,
	0x26, 0x43, 0x08, 0x8b, 0x5d, 0x38, 0x05, 0x35, 0x6b, 0xfe, 0x5a, 0xb1, 0xb3, 0x0e, 0x3b, 0x63,
	0xbb, 0x64, 0x67, 0x0f, 0x4b, 0x51, 0xaa, 0xb6, 0xd4, 0x76, 0x54, 0xa3, 0x48, 0xa6, 0xd5, 0x0a,
	0xeb, 0xbd, 0x30, 0x27, 0x0a, 0xf8, 0x08, 0x9c, 0xf9, 0x00, 0x9c, 0x28, 0x8a, 0x0b, 0x5c, 0xa8,
	0x1a, 0x8e, 0x7c, 0x04, 0x38, 0x50, 0x7c, 0x04, 0x6a, 0x4e, 0x54, 0xab, 0x5b, 0xb6, 0x1c, 0xdb,
	0xd9, 0x29, 0xf6, 0xa6, 0x7e, 0xef, 0xf7, 0xfa, 0xfd, 0xde, 0x9f, 0xee, 0x7e, 0x82, 0x03, 0xe2,
	0xdd, 0xfa, 0x93, 0x8a, 0xe5, 0x7b, 0x43, 0x67, 0x54, 0xb1, 0x7c, 0x4a, 0x2a, 0xb7, 0x67, 0x95,
	0x01, 0x0e, 0x48, 0x79, 0x4c, 0x7d, 0xe6, 0xa3, 0x0f, 0x22, 0x40, 0x59, 0x00, 0xca, 0x1c, 0x50,
	0xbe, 0x3d, 0xdb, 0xd5, 0x96, 0x9a, 0x61, 0xdb, 0xa6, 0x24, 0x08, 0x84, 0xe5, 0x0a, 0xcc, 0x00,
	0x5b, 0xaf, 0xfc, 0xe1, 0x50, 0x62, 0x8e, 0x96, 0x62, 0xae, 0x19, 0x1b, 0x9b, 0x21, 0x75, 0x24,
	0xe8, 0xb1, 0x00, 0xb1, 0xc9, 0x38, 0xd2, 0x8e, 0x09, 0xb5, 0x88, 0xc7, 0xa4, 0xf2, 0xe9, 0xbc,
	0x32, 0x20, 0x37, 0xd8, 0x63, 0x8e, 0x65, 0xde, 0x12, 0x1a, 0x38, 0xbe, 0x27, 0x51, 0x8f, 0x46,
	0xbe, 0x3f, 0x72, 0x49, 0x25, 0x5a, 0x0d, 0xc2, 0x61, 0x05, 0x7b, 0x13, 0xa9, 0xda, 0xbf, 0xab,
	0xb2, 0x43, 0x8a, 0xd9, 0xcc, 0xf4, 0xc9, 0x5d, 0x7d, 0xc0, 0x68, 0x68, 0xb1, 0x55, 0xd6, 0xbf,
	0xa0, 0x78, 0x3c, 0x26, 0x34, 0x4e, 0xc2, 0x5e, 0x68, 0x8f, 0x71, 0x05, 0x7b, 0x9e, 0xcf, 0xa2,
	0x4d, 0x83, 0x4a, 0xc0, 0x30, 0x0b, 0x63, 0xf5, 0xe1, 0x82, 0x5a, 0xf2, 0x76, 0xbc, 0x91, 0x84,
	0x3c, 0xbc, 0xc5, 0xae, 0x63, 0x63, 0x46, 0x2a, 0xf1, 0x87, 0x50, 0x68, 0x0c, 0xb2, 0x2f, 0x7c,
	0x0b, 0xbb, 0x0e, 0x9b, 0xa0, 0x07, 0x90, 0xa6, 0x64, 0xe4, 0xf8, 0x5e, 0x51, 0x29, 0x29, 0x27,
	0x39, 0x43, 0xae, 0x10, 0x82, 0x8d, 0x2f, 0x7c, 0x8f, 0x14, 0x53, 0x91, 0x34, 0xfa, 0x46, 0x8f,
	0x20, 0x1b, 0x84, 0x03, 0x33, 0x92, 0xaf, 0x47, 0xf2, 0x4c, 0x10, 0x0e, 0x3e, 0xf3, 0x3d, 0x52,
	0x3b, 0xfc, 0xdd, 0xdf, 0x7e, 0xbd, 0xff, 0x04, 0x76, 0x45, 0xcd, 0xf1, 0xd8, 0x29, 0xdf, 0x56,
	0x45, 0xcd, 0x63, 0x4f, 0xda, 0xef, 0x15, 0x28, 0xe8, 0xa1, 0xe3, 0xda, 0x9f, 0x0a, 0xa2, 0xe8,
	0x39, 0x64, 0x24, 0xe7, 0xc8, 0x77, 0xbe, 0xba, 0x5f, 0x16, 0xe6, 0xbc, 0x24, 0xe5, 0xdb, 0xb3,
	0x72, 0x4f, 0x96, 0x44, 0x1a, 0x18, 0x31, 0x1c, 0x9d, 0x41, 0xf6, 0x86, 0x30, 0x6c, 0x63, 0x86,
	0x23, 0x82, 0xf9, 0xea, 0xc3, 0xb2, 0x48, 0x67, 0x39, 0x4e, 0x67, 0xb9, 0x17, 0x25, 0xdb, 0x98,
	0x02, 0x6b, 0xc7, 0x9c, 0x62, 0x09, 0xf6, 0x17, 0x29, 0x26, 0x59, 0x69, 0xff, 0x52, 0x20, 0xd7,
	0xfc, 0x9c, 0x11, 0x2f, 0x90, 0x69, 0xf0, 0xf0, 0x0d, 0x91, 0xc9, 0x89, 0xbe, 0xd1, 0x2e, 0x64,
	0x2d, 0xcc, 0xc8, 0xc8, 0xa7, 0x13, 0x99, 0x9e, 0xe9, 0x1a, 0x7d, 0x1d, 0x76, 0x38, 0x7b, 0xd3,
	0x26, 0x81, 0x45, 0x9d, 0x31, 0xf3, 0xa9, 0xcc, 0xd4, 0x36, 0x17, 0x37, 0xa6, 0x52, 0xf4, 0xfd,
	0x59, 0xf0, 0x1b, 0x51, 0x04, 0x5a, 0x79, 0xd9, 0x79, 0x99, 0xe3, 0x36, 0x4b, 0xc0, 0x2e, 0x64,
	0x6d, 0x27, 0xc0, 0x03, 0x97, 0xd8, 0xc5, 0xcd, 0x92, 0x72, 0x92, 0x35, 0xa6, 0xeb, 0x9a, 0xc6,
	0xe3, 0xdc, 0x83, 0xc7, 0x8b, 0x71, 0x4e, 0xc3, 0xd2, 0xfe, 0xb9, 0x01, 0x1b, 0x6d, 0xdf, 0x26,
	0x68, 0x1b, 0x52, 0x8e, 0x2d, 0xa3, 0x4b, 0x39, 0x36, 0x2a, 0x42, 0xc6, 0x72, 0xc3, 0x80, 0x11,
	0x2a, 0x43, 0x8b, 0x97, 0x73, 0x39, 0x5f, 0x7f, 0xc7, 0x9c, 0xa3, 0x1a, 0x64, 0x5d, 0x59, 0x7f,
	0x19, 0xe6, 0xfe, 0xf2, 0x30, 0xe3, 0x2e, 0x31, 0xa6, 0x78, 0xf4, 0x0c, 0x76, 0xc2, 0x80, 0x50,
	0x13, 0x8f, 0x88, 0xc7, 0xcc, 0xa8, 0x0a, 0xe9, 0x88, 0xd2, 0x16, 0x17, 0xd7, 0xb9, 0xb4, 0xcd,
	0xcb, 0x51, 0x06, 0x94, 0xc0, 0xc5, 0x49, 0xcd, 0x70, 0x68, 0x6b, 0xcd, 0x50, 0xa7, 0xe0, 0xb8,
	0xed, 0x7e, 0x06, 0xc5, 0x04, 0x7e, 0xc0, 0xf3, 0x3b, 0xb5, 0xca, 0xbe, 0x6b, 0x29, 0x5a, 0x6b,
	0xc6, 0xd7, 0xa6, 0x3b, 0xcf, 0x75, 0xf5, 0x8f, 0x00, 0x48, 0x9c, 0xe7, 0xa0, 0x98, 0x2b, 0xad,
	0x9f, 0xe4, 0xab, 0x07, 0xcb, 0x37, 0x9c, 0xd6, 0xc3, 0x48, 0x98, 0xf0, 0x16, 0xb2, 0x5c, 0x87,
	0x73, 0x1b, 0x12, 0xcc, 0x42, 0x4a, 0x82, 0x22, 0x94, 0xd6, 0x79, 0x0b, 0x09, 0xf1, 0x85, 0x94,
	0xa2, 0x36, 0xbc, 0xef, 0x3a, 0x01, 0x23, 0xfc, 0xc8, 0x9b, 0xf2, 0x06, 0x25, 0x41, 0x31, 0x1f,
	0xb9, 0xdc, 0x5b, 0xee, 0xb2, 0x2e, 0x60, 0x06, 0x9a, 0x5a, 0xd6, 0x63, 0xc3, 0xda, 0x1e, 0x6f,
	0x9c, 0x22, 0x3c, 0x58, 0x6c, 0x1c, 0xde, 0x2a, 0xfa, 0x23, 0x78, 0xb8, 0x98, 0x67, 0x93, 0xb7,
	0xf5, 0x4f, 0x36, 0xb2, 0x9b, 0x6a, 0xda, 0xd8, 0x9a, 0xcb, 0xa5, 0xf6, 0x6f, 0x05, 0xb2, 0x2f,
	0xe3, 0x46, 0xf8, 0x29, 0xec, 0x0c, 0x1d, 0x97, 0x11, 0x6a, 0x4e, 0x9b, 0x48, 0x89, 0x78, 0x56,
	0x97, 0xf3, 0x8c, 0x0d, 0xcb, 0x17, 0x91, 0x55, 0xbc, 0x6c, 0x7a, 0x8c, 0x4e, 0x8c, 0xed, 0xe1,
	0x9c, 0x70, 0xf7, 0x33, 0x78, 0x7f, 0x09, 0x0c, 0xa9, 0xb0, 0xfe, 0x8a, 0x4c, 0x64, 0x73, 0xf3,
	0x4f, 0xf4, 0x2d, 0xd8, 0xbc, 0xc5, 0x6e, 0x48, 0xbe, 0xec, 0xd2, 0x10, 0xa8, 0x5a, 0xea, 0xb9,
	0x72, 0xcf, 0xc5, 0x16, 0x3b, 0xd3, 0x7e, 0xa5, 0xc0, 0x96, 0x11, 0x7a, 0xcc, 0xb9, 0x21, 0x57,
	0x97, 0x1e, 0x3b, 0xab, 0xa2, 0x23, 0xd8, 0xb2, 0xc9, 0x10, 0x87, 0x2e, 0x33, 0x67, 0xfe, 0xb6,
	0x8c, 0x82, 0x14, 0x7e, 0xca, 0x65, 0xe8, 0x04, 0xf2, 0x54, 0x58, 0x99, 0x9c, 0x66, 0x74, 0x4d,
	0xe8, 0x99, 0xb7, 0xfa, 0x06, 0x4d, 0x95, 0x14, 0x03, 0xa4, 0xee, 0x13, 0x32, 0xa9, 0x3d, 0xe3,
	0x1c, 0x0e, 0xe5, 0x8b, 0x3b, 0xc7, 0x61, 0xce, 0x6d, 0x92, 0x48, 0xc3, 0x0f, 0x07, 0x2e, 0x59,
	0x24, 0xc2, 0x93, 0xa1, 0xdc, 0x4f, 0x24, 0xf5, 0x15, 0x88, 0x08, 0xb7, 0xda, 0x1f, 0x15, 0x40,
	0x52, 0x22, 0xbb, 0xf5, 0xc2, 0xc5, 0x23, 0x74, 0xb9, 0x8c, 0x4d, 0xbe, 0xba, 0xbb, 0x50, 0x06,
	0xdd, 0xf7, 0xdd, 0x88, 0x9b, 0x9e, 0x7d, 0xab, 0x6f, 0xfe, 0x56, 0x49, 0xa9, 0xff, 0x3f, 0xe7,
	0x6f, 0x72, 0xce, 0xcf, 0xe0, 0xe9, 0x4a, 0xce, 0x09, 0x86, 0xda, 0x2f, 0x21, 0xdf, 0x22, 0xd8,
	0x26, 0x54, 0x78, 0x39, 0x4a, 0x74, 0x90, 0xfe, 0xde, 0x5b, 0x7d, 0x9b, 0x16, 0x4a, 0xca, 0xc9,
	0xeb, 0xd7, 0xca, 0x5f, 0x15, 0xe5, 0x8d, 0xb2, 0x26, 0x9a, 0xea, 0x38, 0xd9, 0x54, 0x39, 0x7d,
	0xe7, 0xad, 0x5e, 0xa0, 0x20, 0x40, 0x29, 0x0e, 0x92, 0xcd, 0xf4, 0x94, 0xf3, 0x38, 0x80, 0xbd,
	0x45, 0x1e, 0x09, 0x8f, 0xda, 0x9f, 0x14, 0x78, 0x2f, 0xb1, 0xee, 0x8c, 0xf9, 0xdb, 0x8e, 0xce,
	0x21, 0x7d, 0x1d, 0x09, 0x65, 0xc6, 0x0e, 0x97, 0x1f, 0x9a, 0x84, 0x61, 0x22, 0x71, 0xd2, 0x14,
	0x55, 0x21, 0xcd, 0x07, 0x0c, 0xcf, 0x96, 0xdd, 0x7f, 0x4f, 0xda, 0x0d, 0x89, 0xac, 0x9d, 0x72,
	0xd2, 0xc7, 0x70, 0x74, 0x2f, 0x69, 0x41, 0x52, 0x73, 0x21, 0x27, 0x84, 0x2f, 0xf1, 0x18, 0x7d,
	0x0f, 0x32, 0xc2, 0x6d, 0x20, 0xcf, 0xf9, 0x97, 0x53, 0x36, 0x62, 0x8b, 0x7b, 0x5e, 0xb0, 0xa9,
	0x03, 0xed, 0x8d, 0x02, 0xd0, 0xc0, 0x0c, 0xf7, 0xfc, 0x90, 0x5a, 0x04, 0x1d, 0x43, 0x76, 0xe8,
	0xb8, 0x64, 0xf6, 0x56, 0x4f, 0x9b, 0xa1, 0xb5, 0x66, 0x4c, 0x55, 0xe8, 0x43, 0x28, 0x38, 0x9e,
	0xeb, 0x78, 0xc4, 0x1c, 0x4c, 0x18, 0x09, 0xa2, 0x4c, 0x14, 0x22, 0xe8, 0x17, 0x29, 0x95, 0x43,
	0xf3, 0x42, 0xad, 0x73, 0x2d, 0x2a, 0xc3, 0x96, 0x44, 0x07, 0x8c, 0x3a, 0xde, 0xe8, 0xce, 0x19,
	0x6d, 0xad, 0x19, 0x72, 0xb7, 0x5e, 0xa4, 0xae, 0x1d, 0x71, 0xde, 0xfb, 0xf0, 0x64, 0x91, 0xf7,
	0x8c, 0xa9, 0xae, 0x42, 0x2e, 0x18, 0x13, 0xcb, 0x19, 0x3a, 0x84, 0xa2, 0xf5, 0xff, 0xea, 0x8a,
	0xf6, 0x17, 0x05, 0xf2, 0x06, 0x61, 0x74, 0xd2, 0xf5, 0x5d, 0xc7, 0x9a, 0xa0, 0x4f, 0x60, 0x9b,
	0xf2, 0xa5, 0xc9, 0x27, 0x5e, 0xd3, 0x1f, 0x0e, 0x65, 0xd5, 0x8f, 0x57, 0x3c, 0x4b, 0x62, 0x2e,
	0xee, 0x31, 0xca, 0x87, 0x90, 0x89, 0x51, 0x88, 0x8c, 0xb9, 0xb4, 0x33, 0x1c, 0xa2, 0x1f, 0x40,
	0xde, 0x0b, 0x6f, 0x4c, 0x2e, 0x73, 0x64, 0xc0, 0xf9, 0xea, 0x93, 0x85, 0xd2, 0x8b, 0x1b, 0x44,
	0xd4, 0x01, 0xbc, 0xf0, 0xc6, 0x10, 0xf8, 0x7b, 0xba, 0x36, 0xc1, 0x58, 0xfb, 0x8f, 0x02, 0xaa,
	0x41, 0x6e, 0x7c, 0x46, 0x12, 0x25, 0xd1, 0x21, 0x1b, 0x8f, 0xe3, 0x32, 0x80, 0x15, 0x6f, 0x52,
	0x8b, 0xb1, 0xf1, 0x15, 0x75, 0x12, 0x2d, 0x9b, 0xb9, 0x16, 0x22, 0x74, 0x00, 0xe9, 0xe0, 0x1a,
	0x57, 0xbf, 0xf3, 0xdd, 0xbb, 0x27, 0x5c, 0x8a, 0x51, 0x03, 0x44, 0xb8, 0xe6, 0x38, 0x62, 0x22,
	0x27, 0x93, 0x15, 0xcd, 0x96, 0xa0, 0x6c, 0xe4, 0xe9, 0x6c, 0x51, 0xfb, 0x06, 0x8f, 0xf2, 0x29,
	0x68, 0xcb, 0xa2, 0x9c, 0x8f, 0x4a, 0xfb, 0xbb, 0x02, 0x3b, 0xf5, 0x60, 0xe2, 0x59, 0x89, 0x48,
	0x9f, 0xc3, 0x66, 0x34, 0xb5, 0xc8, 0x30, 0x4b, 0xcb, 0xbd, 0xcf, 0x0c, 0x5a, 0x6b, 0x86, 0x30,
	0x40, 0x3f, 0xe6, 0xd3, 0x37, 0xf7, 0x20, 0x0b, 0xf3, 0x6c, 0x15, 0xf1, 0x79, 0x16, 0xad, 0x35,
	0x43, 0xda, 0xd5, 0x4e, 0x38, 0xf5, 0x23, 0x38, 0x5c, 0xa4, 0x7e, 0x87, 0xe5, 0x92, 0xc6, 0xfb,
	0x83, 0x02, 0x3b, 0x7d, 0x8a, 0xbd, 0x60, 0xec, 0x53, 0xd6, 0xf3, 0xad, 0x57, 0x84, 0xa1, 0xc7,
	0xc9, 0x81, 0x77, 0x96, 0x6f, 0x31, 0xf9, 0x7e, 0x04, 0x05, 0xfe, 0xde, 0xdb, 0xa6, 0xe0, 0x27,
	0xb3, 0xfd, 0xc1, 0x42, 0x37, 0xd5, 0xbd, 0x09, 0x3f, 0x4b, 0x11, 0xf6, 0x3c, 0x82, 0xde, 0xc3,
	0xf3, 0x0e, 0x03, 0x7d, 0x0b, 0xf2, 0x62, 0xfb, 0x78, 0xb6, 0x48, 0xa9, 0xeb, 0x46, 0x5a, 0x88,
	0xf8, 0x59, 0x29, 0xc6, 0xf7, 0x36, 0xc5, 0x16, 0xbf, 0x78, 0xb0, 0xdb, 0x15, 0xff, 0x75, 0xa8,
	0xb3, 0xfc, 0x7d, 0x29, 0xdd, 0xf9, 0xad, 0x58, 0x30, 0x5c, 0xf9, 0xca, 0x1c, 0x2c, 0x79, 0x65,
	0xe6, 0x1e, 0x97, 0x6f, 0xf3, 0xa8, 0x3e, 0x84, 0xd3, 0xd5, 0x8f, 0xcb, 0x5d, 0x5f, 0xda, 0x15,
	0x14, 0xce, 0x7d, 0x8f, 0x51, 0xdf, 0xed, 0xba, 0xd8, 0x23, 0x68, 0x1f, 0xc0, 0xb1, 0x89, 0xc7,
	0xa2, 0xba, 0xc8, 0x61, 0x25, 0x21, 0xb9, 0xe7, 0xb7, 0x25, 0xb9, 0xcd, 0xe9, 0x09, 0xec, 0x18,
	0x7e, 0xc8, 0x1c, 0x6f, 0xd4, 0xa5, 0x8e, 0x4f, 0xf9, 0x00, 0x9d, 0x87, 0x4c, 0xa3, 0x79, 0x51,
	0xbf, 0x7a, 0xd1, 0x57, 0xd7, 0x50, 0x16, 0x36, 0x5a, 0x97, 0x1f, 0xb7, 0x54, 0xe5, 0xf4, 0x37,
	0x7c, 0x4a, 0x20, 0x3f, 0x0f, 0x49, 0xc0, 0x5e, 0x12, 0x76, 0xed, 0xdb, 0xe8, 0x01, 0xa0, 0x97,
	0xcd, 0x7e, 0xab, 0xd3, 0x30, 0xaf, 0xda, 0xbd, 0x6e, 0xf3, 0xfc, 0xf2, 0xe2, 0xb2, 0xd9, 0x50,
	0xd7, 0x50, 0x06, 0xd6, 0x3f, 0x6e, 0xf6, 0x55, 0x25, 0x32, 0x6e, 0xd6, 0x1b, 0x6a, 0x8a, 0x7f,
	0x75, 0x3b, 0xbd, 0xbe, 0xba, 0xce, 0x95, 0xdd, 0xab, 0xbe, 0xba, 0x81, 0x00, 0xd2, 0x8d, 0xe6,
	0x8b, 0x66, 0xbf, 0xa9, 0x6e, 0x72, 0x97, 0xe7, 0x9d, 0x76, 0xbb, 0x79, 0xde, 0x57, 0xd3, 0x7c,
	0xd1, 0xe9, 0xf6, 0x2f, 0x3b, 0xed, 0x9e, 0x9a, 0x41, 0x39, 0xd8, 0xec, 0x1b, 0xf5, 0xf3, 0xa6,
	0x9a, 0xe5, 0x9f, 0xdd, 0x7a, 0xff, 0xbc, 0xa5, 0xe6, 0x4e, 0x7f, 0x08, 0x6a, 0x9f, 0xe2, 0xe1,
	0xd0, 0xb1, 0x1a, 0x0e, 0x25, 0x51, 0xa6, 0xd0, 0x0e, 0xe4, 0xe7, 0x69, 0xe4, 0x21, 0x73, 0xd9,
	0xd6, 0x3b, 0x57, 0xed, 0x86, 0xaa, 0xa0, 0x02, 0x64, 0x3b, 0x57, 0x7d, 0xb1, 0x4a, 0xe9, 0x1f,
	0xfd, 0xf9, 0xf5, 0x9b, 0x7f, 0xa4, 0x53, 0x6a, 0x0a, 0x34, 0xc7, 0x17, 0x65, 0x1e, 0x53, 0xff,
	0xf3, 0xc9, 0xd2, 0x63, 0xa4, 0xe7, 0x74, 0x1c, 0x90, 0x2e, 0x6f, 0xd2, 0xae, 0x32, 0x48, 0x47,
	0xdd, 0x7a, 0xf6, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x67, 0x6a, 0xde, 0xc8, 0x10, 0x00,
	0x00,
}
