// Code generated by "stringer -type=nexthopType"; DO NOT EDIT.

package zebra

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[nexthopTypeIFIndex-1]
	_ = x[nexthopTypeIPv4-2]
	_ = x[nexthopTypeIPv4IFIndex-3]
	_ = x[nexthopTypeIPv6-4]
	_ = x[nexthopTypeIPv6IFIndex-5]
	_ = x[nexthopTypeBlackhole-6]
	_ = x[nexthopTypeIFName-2]
	_ = x[backwardNexthopTypeIPv4-3]
	_ = x[backwardNexthopTypeIPv4IFIndex-4]
	_ = x[nexthopTypeIPv4IFName-5]
	_ = x[backwardNexthopTypeIPv6-6]
	_ = x[backwardNexthopTypeIPv6IFIndex-7]
	_ = x[nexthopTypeIPv6IFName-8]
	_ = x[backwardNexthopTypeBlackhole-9]
}

const _nexthopType_name = "nexthopTypeIFIndexnexthopTypeIPv4nexthopTypeIPv4IFIndexnexthopTypeIPv6nexthopTypeIPv6IFIndexnexthopTypeBlackholebackwardNexthopTypeIPv6IFIndexnexthopTypeIPv6IFNamebackwardNexthopTypeBlackhole"

var _nexthopType_index = [...]uint8{0, 18, 33, 55, 70, 92, 112, 142, 163, 191}

func (i nexthopType) String() string {
	i -= 1
	if i >= nexthopType(len(_nexthopType_index)-1) {
		return "nexthopType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _nexthopType_name[_nexthopType_index[i]:_nexthopType_index[i+1]]
}
