// Code generated by "stringer -type=APIType"; DO NOT EDIT.

package zebra

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[interfaceAdd-0]
	_ = x[interfaceDelete-1]
	_ = x[interfaceAddressAdd-2]
	_ = x[interfaceAddressDelete-3]
	_ = x[interfaceUp-4]
	_ = x[interfaceDown-5]
	_ = x[_interfaceSetMaster-6]
	_ = x[_interfaceSetProtoDown-7]
	_ = x[RouteAdd-8]
	_ = x[RouteDelete-9]
	_ = x[_routeNotifyOwner-10]
	_ = x[redistributeAdd-11]
	_ = x[_redistributeDelete-12]
	_ = x[_redistributeDefaultAdd-13]
	_ = x[_redistributeDefaultDelete-14]
	_ = x[routerIDAdd-15]
	_ = x[_routerIDDelete-16]
	_ = x[routerIDUpdate-17]
	_ = x[hello-18]
	_ = x[_capabilities-19]
	_ = x[nexthopRegister-20]
	_ = x[nexthopUnregister-21]
	_ = x[nexthopUpdate-22]
	_ = x[_interfaceNBRAddressAdd-23]
	_ = x[_interfaceNBRAddressDelete-24]
	_ = x[_interfaceBFDDestUpdate-25]
	_ = x[_importRouteRegister-26]
	_ = x[_importRouteUnregister-27]
	_ = x[_importCheckUpdate-28]
	_ = x[_bfdDestRegister-29]
	_ = x[_bfdDestDeregister-30]
	_ = x[_bfdDestUpdate-31]
	_ = x[_bfdDestReplay-32]
	_ = x[redistributeRouteAdd-33]
	_ = x[redistributeRouteDel-34]
	_ = x[_vrfUnregister-35]
	_ = x[_vrfAdd-36]
	_ = x[_vrfDelete-37]
	_ = x[vrfLabel-38]
	_ = x[_interfaceVRFUpdate-39]
	_ = x[_bfdClientRegister-40]
	_ = x[_bfdClientDeregister-41]
	_ = x[_interfaceEnableRADV-42]
	_ = x[_interfaceDisableRADV-43]
	_ = x[ipv4NexthopLookupMRIB-44]
	_ = x[_interfaceLinkParams-45]
	_ = x[_mplsLabelsAdd-46]
	_ = x[_mplsLabelsDelete-47]
	_ = x[_mplsLabelsReplace-48]
	_ = x[_srPolicySet-49]
	_ = x[_srPolicyDelete-50]
	_ = x[_srPolicyNotifyStatus-51]
	_ = x[_ipmrRouteStats-52]
	_ = x[labelManagerConnect-53]
	_ = x[labelManagerConnectAsync-54]
	_ = x[getLabelChunk-55]
	_ = x[releaseLabelChunk-56]
	_ = x[_fecRegister-57]
	_ = x[_fecUnregister-58]
	_ = x[_fecUpdate-59]
	_ = x[_advertiseDefaultGW-60]
	_ = x[_advertiseSviMACIP-61]
	_ = x[_advertiseSubnet-62]
	_ = x[_advertiseAllVNI-63]
	_ = x[_localESAdd-64]
	_ = x[_localESDel-65]
	_ = x[_remoteESVTEPAdd-66]
	_ = x[_remoteESVTEPDel-67]
	_ = x[_localESEVIAdd-68]
	_ = x[_localESEVIDel-69]
	_ = x[_vniAdd-70]
	_ = x[_vniDel-71]
	_ = x[_l3VNIAdd-72]
	_ = x[_l3VNIDel-73]
	_ = x[_remoteVTEPAdd-74]
	_ = x[_remoteVTEPDel-75]
	_ = x[_macIPAdd-76]
	_ = x[_macIPDel-77]
	_ = x[_ipPrefixRouteAdd-78]
	_ = x[_ipPrefixRouteDel-79]
	_ = x[_remoteMACIPAdd-80]
	_ = x[_remoteMACIPDel-81]
	_ = x[_duplicateAddrDetection-82]
	_ = x[_pwAdd-83]
	_ = x[_pwDelete-84]
	_ = x[_pwSet-85]
	_ = x[_pwUnset-86]
	_ = x[_pwStatusUpdate-87]
	_ = x[_ruleAdd-88]
	_ = x[_ruleDelete-89]
	_ = x[_ruleNotifyOwner-90]
	_ = x[_tableManagerConnect-91]
	_ = x[_getTableChunk-92]
	_ = x[_releaseTableChunk-93]
	_ = x[_ipSetCreate-94]
	_ = x[_ipSetDestroy-95]
	_ = x[_ipSetEntryAdd-96]
	_ = x[_ipSetEntryDelete-97]
	_ = x[_ipSetNotifyOwner-98]
	_ = x[_ipSetEntryNotifyOwner-99]
	_ = x[_ipTableAdd-100]
	_ = x[_ipTableDelete-101]
	_ = x[_ipTableNotifyOwner-102]
	_ = x[_vxlanFloodControl-103]
	_ = x[_vxlanSgAdd-104]
	_ = x[_vxlanSgDel-105]
	_ = x[_vxlanSgReplay-106]
	_ = x[_mlagProcessUp-107]
	_ = x[_mlagProcessDown-108]
	_ = x[_mlagClientRegister-109]
	_ = x[_mlagClientUnregister-110]
	_ = x[_mlagClientForwardMsg-111]
	_ = x[zebraError-112]
	_ = x[_clientCapabilities-113]
	_ = x[_opaqueMessage-114]
	_ = x[_opaqueRegister-115]
	_ = x[_opaqueUnregister-116]
	_ = x[_neighDiscover-117]
	_ = x[BackwardIPv6RouteAdd-118]
	_ = x[BackwardIPv6RouteDelete-119]
	_ = x[zapi6Frr7dot3MinDifferentAPIType-49]
	_ = x[zapi6Frr7dot2MinDifferentAPIType-48]
	_ = x[zapi5ClMinDifferentAPIType-19]
	_ = x[zapi5MinDifferentAPIType-7]
	_ = x[zapi4MinDifferentAPIType-6]
	_ = x[zapi3MinDifferentAPIType-0]
	_ = x[zapi6Frr7dot3LabelManagerConnect-50]
	_ = x[zapi6Frr7dot3LabelManagerConnectAsync-51]
	_ = x[zapi6Frr7dot3GetLabelChunk-52]
	_ = x[zapi6Frr7dot3ReleaseLabelChunk-53]
	_ = x[zapi6Frr7dot2LabelManagerConnect-49]
	_ = x[zapi6Frr7dot2LabelManagerConnectAsync-50]
	_ = x[zapi6Frr7dot2GetLabelChunk-51]
	_ = x[zapi6Frr7dot2ReleaseLabelChunk-52]
	_ = x[zapi6Frr7RouteAdd-7]
	_ = x[zapi6Frr7RouteDelete-8]
	_ = x[zapi6Frr7RedistributAdd-10]
	_ = x[zapi6Frr7RouterIDAdd-14]
	_ = x[zapi6Frr7RouterIDUpdate-16]
	_ = x[zapi6Frr7Hello-17]
	_ = x[zapi6Frr7NexthopRegister-19]
	_ = x[zapi6Frr7NexthopUnregister-20]
	_ = x[zapi6Frr7NexthopUpdate-21]
	_ = x[zapi6Frr7RedistributeRouteAdd-32]
	_ = x[zapi6Frr7RedistributeRouteDel-33]
	_ = x[zapi6Frr7VrfLabel-37]
	_ = x[zapi6Frr7Ipv4NexthopLookupMRIB-43]
	_ = x[zapi6Frr7LabelManagerConnect-48]
	_ = x[zapi6Frr7LabelManagerConnectAsync-49]
	_ = x[zapi6Frr7GetLabelChunk-50]
	_ = x[zapi6Frr7ReleaseLabelChunk-51]
	_ = x[zapi5ClIpv4NexthopLookupMRIB-42]
	_ = x[zapi5ClLabelManagerConnect-47]
	_ = x[zapi5ClGetLabelChunk-48]
	_ = x[zapi5ClReleaseLabelChunk-49]
	_ = x[zapi5RedistributAdd-14]
	_ = x[zapi5RouterIDAdd-18]
	_ = x[zapi5RouterIDUpdate-20]
	_ = x[zapi5Hello-21]
	_ = x[zapi5Frr5NexthopRegister-23]
	_ = x[zapi5Frr5NexthopUnregister-24]
	_ = x[zapi5Frr5NexthopUpdate-25]
	_ = x[zapi5Frr5RedistributeRouteAdd-37]
	_ = x[zapi5Frr5RedistributeRouteDel-38]
	_ = x[zapi5Frr5VrfLabel-42]
	_ = x[zapi5Frr5Ipv4NexthopLookupMRIB-47]
	_ = x[zapi5Frr5LabelManagerConnect-52]
	_ = x[zapi5Frr5LabelManagerConnectAsync-53]
	_ = x[zapi5Frr5GetLabelChunk-54]
	_ = x[zapi5Frr5ReleaseLabelChunk-55]
	_ = x[zapi5Frr4NexthopRegister-22]
	_ = x[zapi5Frr4NexthopUnregister-23]
	_ = x[zapi5Frr4NexthopUpdate-24]
	_ = x[zapi5Frr4RedistributeRouteAdd-36]
	_ = x[zapi5Frr4RedistributeRouteDel-37]
	_ = x[zapi5Frr4Ipv4NexthopLookupMRIB-45]
	_ = x[zapi5Frr4LabelManagerConnect-50]
	_ = x[zapi5Frr4GetLabelChunk-51]
	_ = x[zapi5Frr4ReleaseLabelChunk-52]
	_ = x[zapi4IPv4RouteAdd-6]
	_ = x[zapi4IPv4RouteDelete-7]
	_ = x[zapi4IPv6RouteAdd-8]
	_ = x[zapi4IPv6RouteDelete-9]
	_ = x[zapi4RedistributAdd-10]
	_ = x[zapi4RouterIDAdd-14]
	_ = x[zapi4RouterIDUpdate-16]
	_ = x[zapi4Hello-17]
	_ = x[zapi4NexthopRegister-18]
	_ = x[zapi4NexthopUnregister-19]
	_ = x[zapi4NexthopUpdate-20]
	_ = x[zapi4RedistributeIPv4Add-32]
	_ = x[zapi4RedistributeIPv4Del-33]
	_ = x[zapi4RedistributeIPv6Add-34]
	_ = x[zapi4RedistributeIPv6Del-35]
	_ = x[zapi4LabelManagerConnect-52]
	_ = x[zapi4GetLabelChunk-53]
	_ = x[zapi4ReleaseLabelChunk-54]
	_ = x[zapi3InterfaceAdd-1]
	_ = x[zapi3InterfaceDelete-2]
	_ = x[zapi3InterfaceAddressAdd-3]
	_ = x[zapi3InterfaceAddressDelete-4]
	_ = x[zapi3InterfaceUp-5]
	_ = x[zapi3InterfaceDown-6]
	_ = x[zapi3IPv4RouteAdd-7]
	_ = x[zapi3IPv4RouteDelete-8]
	_ = x[zapi3IPv6RouteAdd-9]
	_ = x[zapi3IPv6RouteDelete-10]
	_ = x[zapi3RedistributeAdd-11]
	_ = x[zapi3IPv4NexthopLookup-15]
	_ = x[zapi3IPv6NexthopLookup-16]
	_ = x[zapi3IPv4ImportLookup-17]
	_ = x[zapi3RouterIDAdd-20]
	_ = x[zapi3RouterIDUpdate-22]
	_ = x[zapi3Hello-23]
	_ = x[zapi3Ipv4NexthopLookupMRIB-24]
	_ = x[zapi3NexthopRegister-27]
	_ = x[zapi3NexthopUnregister-28]
	_ = x[zapi3NexthopUpdate-29]
}

const _APIType_name = "interfaceAddinterfaceDeleteinterfaceAddressAddinterfaceAddressDeleteinterfaceUpinterfaceDown_interfaceSetMaster_interfaceSetProtoDownRouteAddRouteDelete_routeNotifyOwnerredistributeAdd_redistributeDelete_redistributeDefaultAdd_redistributeDefaultDeleterouterIDAdd_routerIDDeleterouterIDUpdatehello_capabilitiesnexthopRegisternexthopUnregisternexthopUpdate_interfaceNBRAddressAdd_interfaceNBRAddressDelete_interfaceBFDDestUpdate_importRouteRegister_importRouteUnregister_importCheckUpdate_bfdDestRegister_bfdDestDeregister_bfdDestUpdate_bfdDestReplayredistributeRouteAddredistributeRouteDel_vrfUnregister_vrfAdd_vrfDeletevrfLabel_interfaceVRFUpdate_bfdClientRegister_bfdClientDeregister_interfaceEnableRADV_interfaceDisableRADVipv4NexthopLookupMRIB_interfaceLinkParams_mplsLabelsAdd_mplsLabelsDelete_mplsLabelsReplace_srPolicySet_srPolicyDelete_srPolicyNotifyStatus_ipmrRouteStatslabelManagerConnectlabelManagerConnectAsyncgetLabelChunkreleaseLabelChunk_fecRegister_fecUnregister_fecUpdate_advertiseDefaultGW_advertiseSviMACIP_advertiseSubnet_advertiseAllVNI_localESAdd_localESDel_remoteESVTEPAdd_remoteESVTEPDel_localESEVIAdd_localESEVIDel_vniAdd_vniDel_l3VNIAdd_l3VNIDel_remoteVTEPAdd_remoteVTEPDel_macIPAdd_macIPDel_ipPrefixRouteAdd_ipPrefixRouteDel_remoteMACIPAdd_remoteMACIPDel_duplicateAddrDetection_pwAdd_pwDelete_pwSet_pwUnset_pwStatusUpdate_ruleAdd_ruleDelete_ruleNotifyOwner_tableManagerConnect_getTableChunk_releaseTableChunk_ipSetCreate_ipSetDestroy_ipSetEntryAdd_ipSetEntryDelete_ipSetNotifyOwner_ipSetEntryNotifyOwner_ipTableAdd_ipTableDelete_ipTableNotifyOwner_vxlanFloodControl_vxlanSgAdd_vxlanSgDel_vxlanSgReplay_mlagProcessUp_mlagProcessDown_mlagClientRegister_mlagClientUnregister_mlagClientForwardMsgzebraError_clientCapabilities_opaqueMessage_opaqueRegister_opaqueUnregister_neighDiscoverBackwardIPv6RouteAddBackwardIPv6RouteDelete"

var _APIType_index = [...]uint16{0, 12, 27, 46, 68, 79, 92, 111, 133, 141, 152, 169, 184, 203, 226, 252, 263, 278, 292, 297, 310, 325, 342, 355, 378, 404, 427, 447, 469, 487, 503, 521, 535, 549, 569, 589, 603, 610, 620, 628, 647, 665, 685, 705, 726, 747, 767, 781, 798, 816, 828, 843, 864, 879, 898, 922, 935, 952, 964, 978, 988, 1007, 1025, 1041, 1057, 1068, 1079, 1095, 1111, 1125, 1139, 1146, 1153, 1162, 1171, 1185, 1199, 1208, 1217, 1234, 1251, 1266, 1281, 1304, 1310, 1319, 1325, 1333, 1348, 1356, 1367, 1383, 1403, 1417, 1435, 1447, 1460, 1474, 1491, 1508, 1530, 1541, 1555, 1574, 1592, 1603, 1614, 1628, 1642, 1658, 1677, 1698, 1719, 1729, 1748, 1762, 1777, 1794, 1808, 1828, 1851}

func (i APIType) String() string {
	if i >= APIType(len(_APIType_index)-1) {
		return "APIType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _APIType_name[_APIType_index[i]:_APIType_index[i+1]]
}
