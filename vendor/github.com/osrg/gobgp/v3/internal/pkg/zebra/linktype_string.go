// Code generated by "stringer -type=linkType"; DO NOT EDIT.

package zebra

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[linkTypeUnknown-0]
	_ = x[linkTypeEther-1]
	_ = x[linkTypeEEther-2]
	_ = x[linkTypeAX25-3]
	_ = x[linkTypePRONET-4]
	_ = x[linkTypeIeee802-5]
	_ = x[linkTypeARCNET-6]
	_ = x[linkTypeAPPLETLK-7]
	_ = x[linkTypeDLCI-8]
	_ = x[linkTypeATM-9]
	_ = x[linkTypeMetricOM-10]
	_ = x[linkTypeIeee1394-11]
	_ = x[linkTypeEUI64-12]
	_ = x[linkTypeINFINIBAND-13]
	_ = x[linkTypeSLIP-14]
	_ = x[linkTypeCSLIP-15]
	_ = x[linkTypeSLIP6-16]
	_ = x[linkTypeCSLIP6-17]
	_ = x[linkTypeRSRVD-18]
	_ = x[linkTypeADAPT-19]
	_ = x[linkTypeROSE-20]
	_ = x[linkTypeX25-21]
	_ = x[linkTypePPP-22]
	_ = x[linkTypeCHDLC-23]
	_ = x[linkTypeLAPB-24]
	_ = x[linkTypeRAWHDLC-25]
	_ = x[linkTypeIPIP-26]
	_ = x[linkTypeIPIP6-27]
	_ = x[linkTypeFRAD-28]
	_ = x[linkTypeSKIP-29]
	_ = x[linkTypeLOOPBACK-30]
	_ = x[linkTypeLOCALTLK-31]
	_ = x[linkTypeFDDI-32]
	_ = x[linkTypeSIT-33]
	_ = x[linkTypeIPDDP-34]
	_ = x[linkTypeIPGRE-35]
	_ = x[linkTypeIP6GRE-36]
	_ = x[linkTypePIMREG-37]
	_ = x[linkTypeHIPPI-38]
	_ = x[linkTypeECONET-39]
	_ = x[linkTypeIRDA-40]
	_ = x[linkTypeFCPP-41]
	_ = x[linkTypeFCAL-42]
	_ = x[linkTypeFCPL-43]
	_ = x[linkTypeFCFABRIC-44]
	_ = x[linkTypeIeee802Tr-45]
	_ = x[linkTypeIeee80211-46]
	_ = x[linkTypeIeee80211RadioTap-47]
	_ = x[linkTypeIeee802154-48]
	_ = x[linkTypeIeee802154Phy-49]
}

const _linkType_name = "linkTypeUnknownlinkTypeEtherlinkTypeEEtherlinkTypeAX25linkTypePRONETlinkTypeIeee802linkTypeARCNETlinkTypeAPPLETLKlinkTypeDLCIlinkTypeATMlinkTypeMetricOMlinkTypeIeee1394linkTypeEUI64linkTypeINFINIBANDlinkTypeSLIPlinkTypeCSLIPlinkTypeSLIP6linkTypeCSLIP6linkTypeRSRVDlinkTypeADAPTlinkTypeROSElinkTypeX25linkTypePPPlinkTypeCHDLClinkTypeLAPBlinkTypeRAWHDLClinkTypeIPIPlinkTypeIPIP6linkTypeFRADlinkTypeSKIPlinkTypeLOOPBACKlinkTypeLOCALTLKlinkTypeFDDIlinkTypeSITlinkTypeIPDDPlinkTypeIPGRElinkTypeIP6GRElinkTypePIMREGlinkTypeHIPPIlinkTypeECONETlinkTypeIRDAlinkTypeFCPPlinkTypeFCALlinkTypeFCPLlinkTypeFCFABRIClinkTypeIeee802TrlinkTypeIeee80211linkTypeIeee80211RadioTaplinkTypeIeee802154linkTypeIeee802154Phy"

var _linkType_index = [...]uint16{0, 15, 28, 42, 54, 68, 83, 97, 113, 125, 136, 152, 168, 181, 199, 211, 224, 237, 251, 264, 277, 289, 300, 311, 324, 336, 351, 363, 376, 388, 400, 416, 432, 444, 455, 468, 481, 495, 509, 522, 536, 548, 560, 572, 584, 600, 617, 634, 659, 677, 698}

func (i linkType) String() string {
	if i >= linkType(len(_linkType_index)-1) {
		return "linkType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _linkType_name[_linkType_index[i]:_linkType_index[i+1]]
}
