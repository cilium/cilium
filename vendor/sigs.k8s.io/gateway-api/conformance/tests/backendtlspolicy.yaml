apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: gateway-backendtlspolicy
  namespace: gateway-conformance-infra
spec:
  gatewayClassName: "{GATEWAY_CLASS_NAME}"
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    hostname: "abc.example.com"
    allowedRoutes:
      namespaces:
        from: Same
      kinds:
      - kind: HTTPRoute
  - name: https
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - group: ""
        kind: Secret
        name: tls-checks-certificate
    hostname: "abc.example.com"
    allowedRoutes:
      namespaces:
        from: Same
      kinds:
      - kind: HTTPRoute
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: gateway-conformance-infra-test
  namespace: gateway-conformance-infra
spec:
  parentRefs:
  - name: gateway-backendtlspolicy
    namespace: gateway-conformance-infra
  hostnames:
  - abc.example.com
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: backendtlspolicy-test
      port: 443
    matches:
    - path:
        type: Exact
        value: /backendTLS
  - backendRefs:
    - group: ""
      kind: Service
      name: backendtlspolicy-host-mismatch-test
      port: 443
    matches:
    - path:
        type: Exact
        value: /backendTLSHostMismatch
  - backendRefs:
    - group: ""
      kind: Service
      name: backendtlspolicy-cert-mismatch-test
      port: 443
    matches:
    - path:
        type: Exact
        value: /backendTLSCertMismatch
---
apiVersion: v1
kind: Service
metadata:
  name: backendtlspolicy-test
  namespace: gateway-conformance-infra
spec:
  selector:
    app: backendtlspolicy-test
  ports:
  - name: "btls"
    protocol: TCP
    port: 443
    targetPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: backendtlspolicy-host-mismatch-test
  namespace: gateway-conformance-infra
spec:
  selector:
    app: backendtlspolicy-test
  ports:
  - name: "btls"
    protocol: TCP
    appProtocol: HTTPS
    port: 443
    targetPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: backendtlspolicy-cert-mismatch-test
  namespace: gateway-conformance-infra
spec:
  selector:
    app: backendtlspolicy-test
  ports:
  - name: "btls"
    protocol: TCP
    appProtocol: HTTPS
    port: 443
    targetPort: 8443
---
# Deployment must not be applied until after the secret is generated.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backendtlspolicy-test
  namespace: gateway-conformance-infra
  labels:
    app: backendtlspolicy-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backendtlspolicy-test
  template:
    metadata:
      labels:
        app: backendtlspolicy-test
    spec:
      containers:
      - name: backendtlspolicy-test
        image: gcr.io/k8s-staging-gateway-api/echo-basic:v20240412-v1.0.0-394-g40c666fd
        volumeMounts:
        - name: ca-volume
          mountPath: /etc/ca-volume
        - name: secret-volume
          mountPath: /etc/secret-volume
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CA_CERT
          value: /etc/ca-volume/crt
        - name: CA_CERT_KEY
          value: /etc/ca-volume/key
        - name: TLS_SERVER_CERT
          value: /etc/secret-volume/crt
        - name: TLS_SERVER_PRIVKEY
          value: /etc/secret-volume/key
        resources:
          requests:
            cpu: 10m
      volumes:
      - name: ca-volume
        configMap:
          # This configMap is generated dynamically by the test suite.
          name: backend-tls-checks-certificate
          items:
          - key: ca.crt
            path: crt
          - key: key.crt
            path: key
      - name: secret-volume
        secret:
          # This secret is generated dynamically by the test suite.
          secretName: tls-checks-certificate
          items:
          - key: tls.crt
            path: crt
          - key: tls.key
            path: key
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: normative-test-backendtlspolicy
  namespace: gateway-conformance-infra
spec:
  targetRefs:
  - group: ""
    kind: Service
    name: "backendtlspolicy-test"
    sectionName: "btls"
  validation:
    caCertificateRefs:
    - group: ""
      kind: ConfigMap
      # This secret is generated dynamically by the test suite.
      name: "backend-tls-checks-certificate"
    hostname: "abc.example.com"
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: backendtlspolicy-host-mismatch
  namespace: gateway-conformance-infra
spec:
  targetRefs:
  - group: ""
    kind: Service
    name: "backendtlspolicy-host-mismatch-test"
    sectionName: "btls"
  validation:
    caCertificateRefs:
    - group: ""
      kind: ConfigMap
      # This secret is generated dynamically by the test suite.
      name: "backend-tls-checks-certificate"
    hostname: "mismatch.example.com"
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: backendtlspolicy-cert-mismatch
  namespace: gateway-conformance-infra
spec:
  targetRefs:
  - group: ""
    kind: Service
    name: "backendtlspolicy-cert-mismatch-test"
    sectionName: "btls"
  validation:
    caCertificateRefs:
    - group: ""
      kind: ConfigMap
      # This secret is generated dynamically by the test suite.
      name: "backend-tls-mismatch-certificate"
    hostname: "abc.example.com"
