load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "and.go",
        "assignable_to_type_of_matcher.go",
        "be_a_directory.go",
        "be_a_regular_file.go",
        "be_an_existing_file.go",
        "be_closed_matcher.go",
        "be_empty_matcher.go",
        "be_equivalent_to_matcher.go",
        "be_false_matcher.go",
        "be_identical_to.go",
        "be_nil_matcher.go",
        "be_numerically_matcher.go",
        "be_sent_matcher.go",
        "be_temporally_matcher.go",
        "be_true_matcher.go",
        "be_zero_matcher.go",
        "consist_of.go",
        "contain_element_matcher.go",
        "contain_substring_matcher.go",
        "equal_matcher.go",
        "have_cap_matcher.go",
        "have_key_matcher.go",
        "have_key_with_value_matcher.go",
        "have_len_matcher.go",
        "have_occurred_matcher.go",
        "have_prefix_matcher.go",
        "have_suffix_matcher.go",
        "match_error_matcher.go",
        "match_json_matcher.go",
        "match_regexp_matcher.go",
        "match_yaml_matcher.go",
        "not.go",
        "or.go",
        "panic_matcher.go",
        "receive_matcher.go",
        "succeed_matcher.go",
        "type_support.go",
        "with_transform.go",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/onsi/gomega/format:go_default_library",
        "//vendor/github.com/onsi/gomega/internal/oraclematcher:go_default_library",
        "//vendor/github.com/onsi/gomega/matchers/support/goraph/bipartitegraph:go_default_library",
        "//vendor/github.com/onsi/gomega/types:go_default_library",
        "//vendor/gopkg.in/yaml.v2:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/github.com/onsi/gomega/matchers/support/goraph/bipartitegraph:all-srcs",
        "//vendor/github.com/onsi/gomega/matchers/support/goraph/edge:all-srcs",
        "//vendor/github.com/onsi/gomega/matchers/support/goraph/node:all-srcs",
        "//vendor/github.com/onsi/gomega/matchers/support/goraph/util:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
