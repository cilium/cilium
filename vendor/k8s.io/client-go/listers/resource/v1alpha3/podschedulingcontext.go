/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha3

import (
	resourcev1alpha3 "k8s.io/api/resource/v1alpha3"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// PodSchedulingContextLister helps list PodSchedulingContexts.
// All objects returned here must be treated as read-only.
type PodSchedulingContextLister interface {
	// List lists all PodSchedulingContexts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*resourcev1alpha3.PodSchedulingContext, err error)
	// PodSchedulingContexts returns an object that can list and get PodSchedulingContexts.
	PodSchedulingContexts(namespace string) PodSchedulingContextNamespaceLister
	PodSchedulingContextListerExpansion
}

// podSchedulingContextLister implements the PodSchedulingContextLister interface.
type podSchedulingContextLister struct {
	listers.ResourceIndexer[*resourcev1alpha3.PodSchedulingContext]
}

// NewPodSchedulingContextLister returns a new PodSchedulingContextLister.
func NewPodSchedulingContextLister(indexer cache.Indexer) PodSchedulingContextLister {
	return &podSchedulingContextLister{listers.New[*resourcev1alpha3.PodSchedulingContext](indexer, resourcev1alpha3.Resource("podschedulingcontext"))}
}

// PodSchedulingContexts returns an object that can list and get PodSchedulingContexts.
func (s *podSchedulingContextLister) PodSchedulingContexts(namespace string) PodSchedulingContextNamespaceLister {
	return podSchedulingContextNamespaceLister{listers.NewNamespaced[*resourcev1alpha3.PodSchedulingContext](s.ResourceIndexer, namespace)}
}

// PodSchedulingContextNamespaceLister helps list and get PodSchedulingContexts.
// All objects returned here must be treated as read-only.
type PodSchedulingContextNamespaceLister interface {
	// List lists all PodSchedulingContexts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*resourcev1alpha3.PodSchedulingContext, err error)
	// Get retrieves the PodSchedulingContext from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*resourcev1alpha3.PodSchedulingContext, error)
	PodSchedulingContextNamespaceListerExpansion
}

// podSchedulingContextNamespaceLister implements the PodSchedulingContextNamespaceLister
// interface.
type podSchedulingContextNamespaceLister struct {
	listers.ResourceIndexer[*resourcev1alpha3.PodSchedulingContext]
}
