// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DirectRoutingConfiguration DirectRoutingConfiguration is the direct routing configuration of a node
//
// swagger:model DirectRoutingConfiguration

type DirectRoutingConfiguration struct {

	// Available indicates that the node's endpoints can be reached via a
	// direct route that uses the node's external IP address as gateway.
	// Enabling this flag does not automatically prefer direct routing,
	// encapsulation must be disabled in order for direct routing to take
	// place.
	//
	Announce bool `json:"announce,omitempty"`

	// InstallRoutes indicates that this node automatically installs direct
	// routes to other nodes for their respective endpoint CIDRs.
	//
	InstallRoutes bool `json:"installRoutes,omitempty"`
}

/* polymorph DirectRoutingConfiguration announce false */

/* polymorph DirectRoutingConfiguration installRoutes false */

// Validate validates this direct routing configuration
func (m *DirectRoutingConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DirectRoutingConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DirectRoutingConfiguration) UnmarshalBinary(b []byte) error {
	var res DirectRoutingConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
