// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IPV6BigTCP Status of IPv6 BIG TCP
//
// +k8s:deepcopy-gen=true
//
// swagger:model IPV6BigTCP
type IPV6BigTCP struct {

	// Is IPv6 BIG TCP enabled
	Enabled bool `json:"enabled,omitempty"`

	// Maximum IPv6 GRO size
	MaxGRO int64 `json:"maxGRO,omitempty"`

	// Maximum IPv6 GSO size
	MaxGSO int64 `json:"maxGSO,omitempty"`
}

// Validate validates this IP v6 big TCP
func (m *IPV6BigTCP) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this IP v6 big TCP based on context it is used
func (m *IPV6BigTCP) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IPV6BigTCP) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPV6BigTCP) UnmarshalBinary(b []byte) error {
	var res IPV6BigTCP
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
