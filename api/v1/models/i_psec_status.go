// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IPsecStatus Status of the IPsec agent
//
// +k8s:deepcopy-gen=true
//
// swagger:model IPsecStatus
type IPsecStatus struct {

	// IPsec decryption interfaces
	DecryptInterfaces []string `json:"decrypt-interfaces"`

	// IPsec error count
	ErrorCount int64 `json:"error-count,omitempty"`

	// IPsec keys in use
	KeysInUse int64 `json:"keys-in-use,omitempty"`

	// IPsec max sequence number
	MaxSeqNumber string `json:"max-seq-number,omitempty"`

	// IPsec XFRM errors
	XfrmErrors map[string]int64 `json:"xfrm-errors,omitempty"`
}

// Validate validates this i psec status
func (m *IPsecStatus) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this i psec status based on context it is used
func (m *IPsecStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IPsecStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPsecStatus) UnmarshalBinary(b []byte) error {
	var res IPsecStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
