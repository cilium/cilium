// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Workload An application running on Kubernetes.
//
// +deepequal-gen=true
// +k8s:deepcopy-gen=true
//
// swagger:model Workload
type Workload struct {

	// Kind of the workload (Deployment, Statefulset, Daemonset, etc.)
	Kind string `json:"kind,omitempty"`

	// Name of the workload
	Name string `json:"name,omitempty"`

	// Namespace of the workload
	Namespace string `json:"namespace,omitempty"`
}

// Validate validates this workload
func (m *Workload) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this workload based on context it is used
func (m *Workload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Workload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Workload) UnmarshalBinary(b []byte) error {
	var res Workload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
