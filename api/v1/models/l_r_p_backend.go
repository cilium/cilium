// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2020 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LRPBackend Pod backend of an LRP
//
// swagger:model LRPBackend
type LRPBackend struct {

	// backend address
	BackendAddress *BackendAddress `json:"backend-address,omitempty"`

	// Namespace and name of the backend pod
	PodID string `json:"pod-id,omitempty"`
}

// Validate validates this l r p backend
func (m *LRPBackend) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBackendAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LRPBackend) validateBackendAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.BackendAddress) { // not required
		return nil
	}

	if m.BackendAddress != nil {
		if err := m.BackendAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("backend-address")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LRPBackend) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LRPBackend) UnmarshalBinary(b []byte) error {
	var res LRPBackend
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
