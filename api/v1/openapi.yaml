---
swagger: '2.0'
info:
  title: Cilium API
  description: Cilium
  version: v1beta
x-schemes:
- unix
basePath: "/v1"
produces:
- application/json
consumes:
- application/json
paths:
  "/healthz":
    get:
      summary: Get health of Cilium daemon
      description: |
        Returns health and status information of the Cilium daemon and related
        components such as the local container runtime, connected datastore,
        Kubernetes integration.
      tags:
      - daemon
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/StatusResponse"
  "/config":
    get:
      summary: Get configuration of Cilium daemon
      description: |
        Returns the configuration of the Cilium daemon.
      tags:
      - daemon
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/DaemonConfiguration"
    patch:
      summary: Modify daemon configuration
      description: |
        Updates the daemon configuration by applying the provided
        ConfigurationMap and regenerates & recompiles all required datapath
        components.
      tags:
      - daemon
      parameters:
      - name: configuration
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DaemonConfigurationSpec"
      responses:
        '200':
          description: Success
        '400':
          description: Bad configuration parameters
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Recompilation failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/endpoint/{id}":
    get:
      summary: Get endpoint by endpoint ID
      description: |
        Returns endpoint information
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Endpoint"
        '400':
          description: Invalid endpoint ID format for specified type
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Endpoint not found
    put:
      summary: Create endpoint
      description: |
        Creates a new endpoint
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - "$ref": "#/parameters/endpoint-change-request"
      responses:
        '201':
          description: Created
        '400':
          description: Invalid endpoint in request
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Endpoint already exists
          x-go-name: Exists
        '500':
          description: Endpoint creation failed
          x-go-name: Failed
          schema:
            "$ref": "#/definitions/Error"
    patch:
      summary: Modify existing endpoint
      deprecated: true
      description: |
        Applies the endpoint change request to an existing endpoint
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - "$ref": "#/parameters/endpoint-change-request"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid modify endpoint request
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Endpoint does not exist
        '500':
          description: Endpoint update failed
          x-go-name: Failed
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete endpoint
      description: |
        Deletes the endpoint specified by the ID. Deletion is imminent and
        atomic, if the deletion request is valid and the endpoint exists,
        deletion will occur even if errors are encountered in the process. If
        errors have been encountered, the code 202 will be returned, otherwise
        200 on success.

        All resources associated with the endpoint will be freed and the
        workload represented by the endpoint will be disconnected.It will no
        longer be able to initiate or receive communications of any sort.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
        '206':
          description: Deleted with a number of errors encountered
          x-go-name: Errors
          schema:
            type: integer
        '400':
          description: |
            Invalid endpoint ID format for specified type. Details in error
            message
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Endpoint not found
  "/endpoint":
    get:
      summary: Retrieves a list of endpoints that have metadata matching the provided parameters.
      description: |
        Retrieves a list of endpoints that have metadata matching the provided parameters, or all endpoints if no parameters provided.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/labels"
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Endpoint"
        '404':
          description: Endpoints with provided parameters not found
  "/endpoint/{id}/config":
    get:
      summary: Retrieve endpoint configuration
      description: |
        Retrieves the configuration of the specified endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/EndpointConfigurationStatus"
        '404':
          description: Endpoint not found
    patch:
      summary: Modify mutable endpoint configuration
      description: |
        Update the configuration of an existing endpoint and regenerates &
        recompiles the corresponding programs automatically.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - name: endpoint-configuration
        in: body
        required: true
        schema:
          "$ref": "#/definitions/EndpointConfigurationSpec"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid configuration request
          x-go-name: Invalid
        '404':
          description: Endpoint not found
        '500':
          description: Update failed. Details in message.
          x-go-name: Failed
          schema:
            "$ref": "#/definitions/Error"
  "/endpoint/{id}/labels":
    get:
      summary: Retrieves the list of labels associated with an endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/LabelConfiguration"
        '404':
          description: Endpoint not found
    patch:
      summary: Set label configuration of endpoint
      description: |
        Sets labels associated with an endpoint. These can be user provided or
        derived from the orchestration system.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - name: configuration
        in: body
        required: true
        schema:
          "$ref": "#/definitions/LabelConfigurationSpec"
      responses:
        '200':
          description: Success
        '404':
          description: Endpoint not found
        '500':
          description: Error while updating labels
          x-go-name: UpdateFailed
          schema:
            "$ref": "#/definitions/Error"
  "/endpoint/{id}/log":
    get:
      summary: Retrieves the status logs associated with this endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/EndpointStatusLog"
        '400':
          description: Invalid identity provided
          x-go-name: Invalid
        '404':
          description: Endpoint not found

  "/endpoint/{id}/healthz":
    get:
      summary: Retrieves the status logs associated with this endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/EndpointHealth"
        '400':
          description: Invalid identity provided
          x-go-name: Invalid
        '404':
          description: Endpoint not found
  "/identity":
    get:
      summary: Retrieves a list of identities that have metadata matching the provided parameters.
      description: |
        Retrieves a list of identities that have metadata matching the provided parameters, or all identities if no parameters are provided.
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/labels"
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Identity"
        '404':
          description: Identities with provided parameters not found
        '520':
          description: Identity storage unreachable. Likely a network problem.
          x-go-name: Unreachable
          schema:
            "$ref": "#/definitions/Error"
        '521':
          description: Invalid identity format in storage
          x-go-name: InvalidStorageFormat
          schema:
            "$ref": "#/definitions/Error"
  "/identity/{id}":
    get:
      summary: Retrieve identity
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/identity-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Identity"
        '400':
          description: Invalid identity provided
        '404':
          description: Identity not found
        '520':
          description: Identity storage unreachable. Likely a network problem.
          x-go-name: Unreachable
          schema:
            "$ref": "#/definitions/Error"
        '521':
          description: Invalid identity format in storage
          x-go-name: InvalidStorageFormat
          schema:
            "$ref": "#/definitions/Error"
  "/ipam":
    post:
      summary: Allocate an IP address
      tags:
      - ipam
      parameters:
      - "$ref": "#/parameters/ipam-family"
      responses:
        '201':
          description: Success
          schema:
            "$ref": "#/definitions/IPAMResponse"
        '502':
          description: Allocation failure
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/ipam/{ip}":
    post:
      summary: Allocate an IP address
      tags:
      - ipam
      parameters:
      - "$ref": "#/parameters/ipam-ip"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid IP address
          x-go-name: Invalid
        '409':
          description: IP already allocated
          x-go-name: Exists
        '500':
          description: IP allocation failure. Details in message.
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
        '501':
          description: Allocation for address family disabled
          x-go-name: Disabled
    delete:
      summary: Release an allocated IP address
      tags:
      - ipam
      parameters:
      - "$ref": "#/parameters/ipam-ip"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid IP address
          x-go-name: Invalid
        '404':
          description: IP address not found
        '500':
          description: Address release failure
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
        '501':
          description: Allocation for address family disabled
          x-go-name: Disabled
  "/policy":
    get:
      summary: Retrieve entire policy tree
      description: |
        Returns the entire policy tree with all children.
      tags:
      - policy
      parameters:
      - name: labels
        in: body
        schema:
          "$ref": "#/definitions/Labels"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Policy"
        '404':
          description: No policy rules found
    put:
      summary: Create or update a policy (sub)tree
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/policy-rules"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Policy"
        '400':
          description: Invalid policy
          x-go-name: InvalidPolicy
          schema:
            "$ref": "#/definitions/Error"
        '460':
          description: Invalid path
          x-go-name: InvalidPath
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Policy import failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete a policy (sub)tree
      tags:
      - policy
      parameters:
      - name: labels
        in: body
        required: false
        schema:
          "$ref": "#/definitions/Labels"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Policy"
        '400':
          description: Invalid request
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Policy not found
        '500':
          description: Error while deleting policy
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/policy/resolve":
    get:
      summary: Resolve policy for an identity context
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/trace-selector"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/PolicyTraceResult"
  "/service":
    get:
      summary: Retrieve list of all services
      tags:
      - service
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Service"
  "/service/{id}":
    get:
      summary: Retrieve configuration of a service
      tags:
      - service
      parameters:
      - "$ref": "#/parameters/service-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Service"
        '404':
          description: Service not found
    put:
      summary: Create or update service
      tags:
      - service
      parameters:
      - "$ref": "#/parameters/service-id"
      - "$ref": "#/parameters/service-config"
      responses:
        '200':
          description: Updated
        '201':
          description: Created
        '460':
          description: Invalid frontend in service configuration
          x-go-name: InvalidFrontend
          schema:
            "$ref": "#/definitions/Error"
        '461':
          description: Invalid backend in service configuration
          x-go-name: InvalidBackend
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Error while creating service
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete a service
      tags:
      - service
      parameters:
      - "$ref": "#/parameters/service-id"
      responses:
        '200':
          description: Success
        '404':
          description: Service not found
        '500':
          description: Service deletion failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/prefilter":
    get:
      summary: Retrieve list of CIDRs
      tags:
      - prefilter
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Prefilter"
        '500':
          description: Prefilter get failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
    patch:
      summary: Update list of CIDRs
      tags:
      - prefilter
      parameters:
      - "$ref": "#/parameters/prefilter-spec"
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/Prefilter"
        '461':
          description: Invalid CIDR prefix
          x-go-name: InvalidCIDR
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Prefilter update failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/debuginfo":
    get:
      summary: Retrieve information about the agent and evironment for debugging
      tags:
      - daemon
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/DebugInfo"
        '500':
          description: DebugInfo get failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/map":
    get:
      summary: List all open maps
      tags:
      - daemon
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/BPFMapList"
  "/map/{name}":
    get:
      summary: Retrieve contents of BPF map
      tags:
      - daemon
      parameters:
      - "$ref": "#/parameters/map-name"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/BPFMap"
        '404':
          description: Map not found

  "/metrics/":
    get:
      summary: Retrieve cilium metrics
      tags:
      - metrics
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Metric"
        '500':
          description: Metrics cannot be retrieved

parameters:
  endpoint-id:
    name: id
    description: |
      String describing an endpoint with the format ``[prefix:]id``. If no prefix
      is specified, a prefix of ``cilium-local:`` is assumed. Not all endpoints
      will be addressable by all endpoint ID prefixes with the exception of the
      local Cilium UUID which is assigned to all endpoints.

      Supported endpoint id prefixes:
        - cilium-local: Local Cilium endpoint UUID, e.g. cilium-local:3389595
        - cilium-global: Global Cilium endpoint UUID, e.g. cilium-global:cluster1:nodeX:452343
        - container-id: Container runtime ID, e.g. container-id:22222
        - container-name: Container name, e.g. container-name:foobar
        - pod-name: pod name for this container if K8s is enabled, e.g. pod-name:default:foobar
        - docker-endpoint: Docker libnetwork endpoint ID, e.g. docker-endpoint:4444
    in: path
    required: true
    type: string
  endpoint-change-request:
    name: endpoint
    in: body
    required: true
    schema:
      "$ref": "#/definitions/EndpointChangeRequest"
  identity-id:
    name: id
    description: |
      Cluster wide unique identifier of a security identity.
    in: path
    required: true
    type: string
  labels:
    name: labels
    description: |
      List of labels
    in: body
    required: true
    schema:
      "$ref": "#/definitions/Labels"
  policy-rules:
    name: policy
    description: Policy rules
    required: true
    in: body
    schema:
      type: string
  pod-name:
    name: pod
    description: |
      K8s pod name
    required: true
    in: path
    type: string
  trace-selector:
    name: trace-selector
    description: Context to provide policy evaluation on
    in: body
    schema:
      "$ref": "#/definitions/TraceSelector"
  service-id:
    name: id
    description: ID of service
    required: true
    in: path
    type: integer
  service-address:
    name: address
    description: Service address configuration
    in: body
    schema:
      "$ref": "#/definitions/FrontendAddress"
  service-config:
    name: config
    description: Service configuration
    in: body
    required: true
    schema:
      "$ref": "#/definitions/ServiceSpec"
  prefilter-spec:
    name: prefilter-spec
    description: List of CIDR ranges for filter table
    required: true
    in: body
    schema:
      "$ref": "#/definitions/PrefilterSpec"
  ipam-ip:
    name: ip
    description: IP address
    in: path
    required: true
    type: string
  ipam-family:
    name: family
    in: query
    type: string
    enum:
    - ipv4
    - ipv6
  map-name:
    name: name
    description: Name of map
    required: true
    in: path
    type: string
definitions:
  Endpoint:
    description: An endpoint is a namespaced network interface to which cilium applies policies
    type: object
    properties:
      id:
        description: The cilium-agent-local ID of the endpoint
        type: integer
      spec:
        description: The desired configuration state of the endpoint
        "$ref": "#/definitions/EndpointConfigurationSpec"
      status:
        description: The desired and realized configuration state of the endpoint
        "$ref": "#/definitions/EndpointStatus"
  EndpointChangeRequest:
    description: |
      Structure which contains the mutable elements of an Endpoint.
    type: object
    required:
      - state
    properties:
      id:
        description: Local endpoint ID
        type: integer
      container-id:
        description: ID assigned by container runtime
        type: string
      container-name:
        description: Name assigned to container
        type: string
      docker-endpoint-id:
        description: Docker endpoint ID
        type: string
      labels:
        description: Labels describing the identity
        "$ref": "#/definitions/Labels"
      docker-network-id:
        description: Docker network ID
        type: string
      interface-name:
        description: Name of network device
        type: string
      interface-index:
        description: Index of network device
        type: integer
      state:
        description: Current state of endpoint
        "$ref": "#/definitions/EndpointState"
      mac:
        description: MAC address
        type: string
      host-mac:
        description: MAC address
        type: string
      addressing:
        "$ref": "#/definitions/AddressPair"
      k8s-pod-name:
        description: Kubernetes pod name
        type: string
      k8s-namespace:
        description: Kubernetes namespace name
        type: string
      policy-enabled:
        description: Whether policy enforcement is enabled or not
        type: boolean
      sync-build-endpoint:
        description: |
          Whether to build an endpoint synchronously
        type: boolean
  EndpointStatus:
    description: The current state and configuration of the endpoint, its policy & datapath, and subcomponents
    type: object
    required:
      - state
    properties:
      external-identifiers:
        description: Unique identifiers for this endpoint from outside cilium
        "$ref": "#/definitions/EndpointIdentifiers"
      identity:
        description: The security identity for this endpoint
        "$ref": "#/definitions/Identity"
      labels:
        description: Labels applied to this endpoint
        "$ref": "#/definitions/LabelConfigurationStatus"
      realized:
        description: The configuration in effect on this endpoint
        "$ref": "#/definitions/EndpointConfigurationSpec"
      networking:
        description: Networking properties of the endpoint
        "$ref": "#/definitions/EndpointNetworking"
      policy:
        description: The policy applied to this endpoint from the policy repository
        "$ref": "#/definitions/EndpointPolicyStatus"
      log:
        description: Most recent status log. See endpoint/{id}/log for the complete log.
        "$ref": "#/definitions/EndpointStatusLog"
      controllers:
        description: Status of internal controllers attached to this endpoint
        "$ref": "#/definitions/ControllerStatuses"
      state:
        description: Current state of endpoint
        "$ref": "#/definitions/EndpointState"
      health:
        description: Summary overall endpoint & subcomponent health
        "$ref": "#/definitions/EndpointHealth"
  EndpointState:
    description: State of endpoint
    type: string
    enum:
      - creating
      - waiting-for-identity
      - not-ready
      - waiting-to-regenerate
      - regenerating
      - restoring
      - ready
      - disconnecting
      - disconnected
  EndpointHealth:
    description: Health of the endpoint
    type: object
    properties:
      overallHealth:
       "$ref": "#/definitions/EndpointHealthStatus"
      bpf:
       "$ref": "#/definitions/EndpointHealthStatus"
      policy:
       "$ref": "#/definitions/EndpointHealthStatus"
      connected:
        description: Is this endpoint reachable
        type: boolean
  EndpointHealthStatus:
    description: >
      A common set of statuses for endpoint health
      * ``OK`` = All components operational
      * ``Bootstrap`` = This component is being created
      * ``Pending`` = A change is being processed to be applied
      * ``Warning`` = This component is not applying up-to-date policies (but is still applying the previous version)
      * ``Failure`` = An error has occurred and no policy is being applied
      * ``Disabled`` = This endpoint is disabled and will not handle traffic
    type: string
    enum:
      - OK
      - Bootstrap
      - Pending
      - Warning
      - Failure
      - Disabled
  EndpointStatusLog:
    description: Status log of endpoint
    type: array
    items:
      "$ref": "#/definitions/EndpointStatusChange"
  EndpointStatusChange:
    description: Indication of a change of status
    type: object
    properties:
      timestamp:
        description: Timestamp when status change occurred
        type: string
      code:
        description: Code indicate type of status change
        type: string
        enum:
         - ok
         - failed
      message:
        description: Status message
        type: string
      state:
        "$ref": "#/definitions/EndpointState"
  EndpointPolicyStatus:
    description: Policy information of an endpoint
    type: object
    properties:
      spec:
        description: The policy that should apply to this endpoint
        "$ref": "#/definitions/EndpointPolicy"
      realized:
        description: The policy in the datapath for this endpoint
        "$ref": "#/definitions/EndpointPolicy"
      proxy-policy-revision:
        description: The policy revision currently enforced in the proxy for this endpoint
        type: integer
      proxy-statistics:
        description: Statistics of the proxy redirects configured for this endpoint
        type: array
        items:
          "$ref": "#/definitions/ProxyStatistics"
  EndpointPolicyEnabled:
    description: Whether policy enforcement is enabled (ingress, egress, both or none)
    type: string
    enum:
      - none
      - ingress
      - egress
      - both

  EndpointPolicy:
    description: Policy information of an endpoint
    type: object
    properties:
      policy-revision:
        description: The agent-local policy revision
        type: integer
      id:
        description: Own identity of endpoint
        type: integer
      policy-enabled:
        description: Whether policy enforcement is enabled (ingress, egress, both or none)
        "$ref": "#/definitions/EndpointPolicyEnabled"
      build:
        description: Build number of calculated policy in use
        type: integer
      allowed-ingress-identities:
        description: |
          List of identities allowed to communicate to this endpoint
        type: array
        items:
          type: integer
      allowed-egress-identities:
        description: |
          List of identities to which this endpoint is allowed to communicate
        type: array
        items:
          type: integer
      l4:
        "$ref": "#/definitions/L4Policy"
      cidr-policy:
        "$ref": "#/definitions/CIDRPolicy"
  PolicyRule:
    description: A policy rule including the rule labels it derives from
    properties:
      rule:
        description: The policy rule as json
        type: string
      derived-from-rules:
        description: The policy rule labels identifying the policy rules this rule derives from
        type: array
        items:
          type: array
          items:
            type: string
  L4Policy:
    description: L4 endpoint policy
    type: object
    properties:
      ingress:
        description: List of L4 ingress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"
      egress:
        description: List of L4 egress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"
  CIDRPolicy:
    description: CIDR endpoint policy
    type: object
    properties:
      ingress:
        description: List of CIDR ingress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"
      egress:
        description: List of CIDR egress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"

  Prefilter:
    description: Collection of endpoints to be served
    type: object
    properties:
      spec:
        "$ref": "#/definitions/PrefilterSpec"
      status:
        "$ref": "#/definitions/PrefilterStatus"
  PrefilterSpec:
    description: CIDR ranges implemented in the Prefilter
    type: object
    properties:
      revision:
        type: integer
      deny:
        type: array
        items:
          type: string
  PrefilterStatus:
    description: CIDR ranges implemented in the Prefilter
    type: object
    properties:
      realized:
        "$ref": "#/definitions/PrefilterSpec"

  CIDRList:
    description: List of CIDRs
    type: object
    properties:
      revision:
        type: integer
      list:
        type: array
        items:
          type: string
  DebugInfo:
    description: groups some debugging related information on the agent
    type: object
    properties:
      cilium-version:
        type: string
      kernel-version:
        type: string
      cilium-status:
        "$ref": "#/definitions/StatusResponse"
      endpoint-list:
        type: array
        items:
          "$ref": "#/definitions/Endpoint"
      service-list:
        type: array
        items:
          "$ref": "#/definitions/Service"
      policy:
        "$ref": "#/definitions/Policy"
      cilium-memory-map:
        type: string
      cilium-nodemonitor-memory-map:
        type: string
      environment-variables:
        type: array
        items:
          type: string
  IPAMResponse:
    description: IPAM configuration of an endpoint
    type: object
    required:
      - address
      - host-addressing
    properties:
      address:
        "$ref": "#/definitions/AddressPair"
      host-addressing:
        "$ref": "#/definitions/NodeAddressing"
  AddressPair:
    description: Addressing information of an endpoint
    type: object
    properties:
      ipv4:
        description: IPv4 address
        type: string
      ipv6:
        description: IPv6 address
        type: string
  Address:
    description: IP address
    type: string
  Identity:
    description: Security identity
    type: object
    properties:
      id:
        description: Unique identifier
        type: integer
      labels:
        description: Labels describing the identity
        "$ref": "#/definitions/Labels"
      labelsSHA256:
        description: SHA256 of labels
        type: string
  EndpointNetworking:
    description: Unique identifiers for this endpoint from outside cilium
    type: object
    properties:
      addressing:
        description: IP4/6 addresses assigned to this Endpoint
        type: array
        items:
          "$ref": "#/definitions/AddressPair"
      host-addressing:
        "$ref": "#/definitions/NodeAddressing"
      host-mac:
        description: MAC address
        type: string
      mac:
        description: MAC address
        type: string
      interface-name:
        description: Name of network device
        type: string
      interface-index:
        description: Index of network device
        type: integer
  EndpointIdentifiers:
    description: Unique identifiers for this endpoint from outside cilium
    type: object
    properties:
      container-id:
        description: ID assigned by container runtime
        type: string
      container-name:
        description: Name assigned to container
        type: string
      docker-endpoint-id:
        description: Docker endpoint ID
        type: string
      docker-network-id:
        description: Docker network ID
        type: string
      pod-name:
        description: K8s pod for this endpoint
        type: string
  Labels:
    description: Set of labels
    type: array
    items:
      type: string
  LabelConfiguration:
    description: Label configuration of an endpoint
    type: object
    properties:
      spec:
        description: The user provided desired configuration
        "$ref": "#/definitions/LabelConfigurationSpec"
      status:
        description: The current configuration
        "$ref": "#/definitions/LabelConfigurationStatus"
  LabelConfigurationSpec:
    description: User desired Label configuration of an endpoint
    type: object
    properties:
      user:
        description: "Custom labels in addition to orchestration system labels."
        "$ref": "#/definitions/Labels"
  LabelConfigurationStatus:
    description: Labels and label configuration of an endpoint
    type: object
    properties:
      realized:
        description: The current configuration
        "$ref": "#/definitions/LabelConfigurationSpec"
      security-relevant:
        description: "Labels derived from orchestration system that are used in computing a security identity"
        "$ref": "#/definitions/Labels"
      derived:
        description: "All labels derived from the orchestration system"
        "$ref": "#/definitions/Labels"
      disabled:
        description: "Labels derived from orchestration system which have been disabled."
        "$ref": "#/definitions/Labels"
  StatusResponse:
    description: Health and status information of daemon
    type: object
    properties:
      cilium:
        description: Status of Cilium daemon
        "$ref": "#/definitions/Status"
      kvstore:
        description: Status of key/value datastore
        "$ref": "#/definitions/Status"
      container-runtime:
        description: Status of local container runtime
        "$ref": "#/definitions/Status"
      kubernetes:
        description: Status of Kubernetes integration
        "$ref": "#/definitions/K8sStatus"
      ipam:
        description: Status of IP address management
        "$ref": "#/definitions/IPAMStatus"
      nodeMonitor:
        description: Status of the node monitor
        "$ref": "#/definitions/MonitorStatus"
      cluster:
        description: Status of cluster
        "$ref": "#/definitions/ClusterStatus"
      controllers:
        description: Status of all endpoint controllers
        "$ref": "#/definitions/ControllerStatuses"
      proxy:
        description: Status of proxy
        "$ref": "#/definitions/ProxyStatus"
      stale:
        description: List of stale information in the status
        type: object
        additionalProperties:
          description: Timestamp when the probe was started
          type: string
          format: date-time

  Status:
    description: Status of an individual component
    type: object
    properties:
      state:
        type: string
        description: State the component is in
        enum:
        - Ok
        - Warning
        - Failure
        - Disabled
      msg:
        type: string
        description: Human readable status/error/warning message
  K8sStatus:
    description: Status of Kubernetes integration
    type: object
    properties:
      state:
        type: string
        description: State the component is in
        enum:
        - Ok
        - Warning
        - Failure
        - Disabled
      k8s-api-versions:
          type: array
          items:
            type: string
      msg:
        type: string
        description: Human readable status/error/warning message
  IPAMStatus:
    description: Status of IP address management
    properties:
      ipv4:
        type: array
        items:
          type: string
      ipv6:
        type: array
        items:
          type: string
  ClusterStatus:
    description: Status of cluster
    properties:
      ciliumHealth:
        description: Status of local cilium-health daemon
        "$ref": "#/definitions/Status"
      self:
        description: Name of local node (if available)
        type: string
      nodes:
        description: List of known nodes
        type: array
        items:
          "$ref": "#/definitions/NodeElement"
  MonitorStatus:
    description: Status of the node monitor
    properties:
      cpus:
        description: Number of CPUs to listen on for events.
        type: integer
      npages:
        description: Number of pages used for the perf ring buffer.
        type: integer
      pagesize:
        description: Pages size used for the perf ring buffer.
        type: integer
      lost:
        description: Number of samples lost by perf.
        type: integer
      unknown:
        description: Number of unknown samples.
        type: integer
  KVstoreConfiguration:
    description: Configuration used for the kvstore
    properties:
      type:
        description: Type of kvstore
        type: string
      options:
        description: Configuration options
        type: object
        additionalProperties:
          type: string
  DaemonConfiguration:
    description: |
      Response to a daemon configuration request.
    type: object
    properties:
      spec:
        description: Changeable configuration
        "$ref": "#/definitions/DaemonConfigurationSpec"
      status:
        description: |
          Current daemon configuration related status.Contains the addressing
          information, k8s, node monitor and immutable and mutable
          configuration settings.
        "$ref": "#/definitions/DaemonConfigurationStatus"
  DaemonConfigurationSpec:
    description: The controllable configuration of the daemon.
    type: object
    properties:
      options:
        description: Changeable configuration
        "$ref": "#/definitions/ConfigurationMap"
      policy-enforcement:
        description: "The policy-enforcement mode"
        type: string
        enum:
          - default
          - always
          - never
  DaemonConfigurationStatus:
    description: |
      Response to a daemon configuration request. Contains the addressing
      information, k8s, node monitor and immutable and mutable configuration
      settings.
    type: object
    properties:
      realized:
        description: Currently applied configuration
        "$ref": "#/definitions/DaemonConfigurationSpec"
      immutable:
        description: Immutable configuration (read-only)
        "$ref": "#/definitions/ConfigurationMap"
      addressing:
        "$ref": "#/definitions/NodeAddressing"
      k8s-endpoint:
        type: string
      k8s-configuration:
        type: string
      nodeMonitor:
        description: Status of the node monitor
        "$ref": "#/definitions/MonitorStatus"
      kvstoreConfiguration:
        "$ref": "#/definitions/KVstoreConfiguration"
      deviceMTU:
        description: MTU on workload facing devices
        type: integer
      routeMTU:
        description: MTU for network facing routes
        type: integer
  EndpointConfigurationSpec:
    description: An endpoint's configuration
    type: object
    properties:
      options:
        description: Changeable configuration
        "$ref": "#/definitions/ConfigurationMap"
      label-configuration:
        description: the endpoint's labels
        "$ref": "#/definitions/LabelConfigurationSpec"
  EndpointConfigurationStatus:
    description: An endpoint's configuration
    type: object
    properties:
      realized:
        description: currently applied changeable configuration
        "$ref": "#/definitions/EndpointConfigurationSpec"
      immutable:
        description: Immutable configuration (read-only)
        "$ref": "#/definitions/ConfigurationMap"
      error:
        description: Most recent error, if applicable
        "$ref": "#/definitions/Error"
  ConfigurationMap:
    description: |
      Map of configuration key/value pairs.
    type: object
    additionalProperties:
      type: string
  NodeElement:
    description: Known node in the cluster
    properties:
      name:
        type: string
        description: |
          Name of the node including the cluster association. This is typically
          <clustername>/<hostname>.
      primary-address:
        description: Primary address used for intra-cluster communication
        "$ref": "#/definitions/NodeAddressing"
      secondary-addresses:
        description: Alternative addresses assigned to the node
        type: array
        items:
          "$ref": "#/definitions/NodeAddressingElement"
      health-endpoint-address:
        description: Address used for probing cluster connectivity
        "$ref": "#/definitions/NodeAddressing"
  NodeAddressing:
    description: Addressing information of a node for all address families
    type: object
    properties:
      ipv6:
        "$ref": "#/definitions/NodeAddressingElement"
      ipv4:
        "$ref": "#/definitions/NodeAddressingElement"
  NodeAddressingElement:
    description: Addressing information
    type: object
    properties:
      enabled:
        description: True if address family is enabled
        type: boolean
      ip:
        description: IP address of node
        type: string
      alloc-range:
        description: Address pool to be used for local endpoints
        type: string
      address-type:
        description: Node address type, one of HostName, ExternalIP or InternalIP
        type: string
  Policy:
    description: Policy definition
    type: object
    properties:
      revision:
        description: |
          Revision number of the policy. Incremented each time the policy is
          changed in the agent's repository
        type: integer
      policy:
        description: Policy definition as JSON.
        type: string
  PolicyTraceResult:
    description: Response to a policy resolution process
    type: object
    properties:
      verdict:
        type: string
      log:
        type: string
  Port:
    description: Layer 4 port / protocol pair
    type: object
    properties:
      protocol:
        description: Layer 4 protocol
        type: string
        enum:
          - TCP
          - UDP
          - ANY
      port:
        description: Layer 4 port number
        type: integer
        format: uint16
  TraceSelector:
    description: Context describing a pair of source and destination identity
    type: object
    properties:
      from:
        "$ref": "#/definitions/TraceFrom"
      to:
        "$ref": "#/definitions/TraceTo"
      verbose:
        description: |
          Enable verbose tracing.
        type: boolean
  TraceFrom:
    type: object
    properties:
      labels:
        "$ref": "#/definitions/Labels"
  TraceTo:
    type: object
    properties:
      labels:
        "$ref": "#/definitions/Labels"
      dports:
        description: |
          List of Layer 4 port and protocol pairs which will be used in communication
          from the source identity to the destination identity.
        type: array
        items:
          "$ref": "#/definitions/Port"

  FrontendAddress:
    description: Layer 4 address
    type: object
    properties:
      ip:
        description: Layer 3 address
        type: string
      protocol:
        description: Layer 4 protocol
        type: string
        enum:
        - tcp
        - udp
        - any
      port:
        description: Layer 4 port number
        type: integer
        format: uint16
  BackendAddress:
    description: Service backend address
    type: object
    required:
    - ip
    properties:
      ip:
        description: Layer 3 address
        type: string
      port:
        description: Layer 4 port number
        type: integer
        format: uint16
      weight:
        description: Weight for Round Robin
        type: integer
        format: uint16
  Service:
    description: Collection of endpoints to be served
    type: object
    properties:
      spec:
        "$ref": "#/definitions/ServiceSpec"
      status:
        "$ref": "#/definitions/ServiceStatus"
  ServiceSpec:
    description: Configuration of a service
    type: object
    required:
    - frontend-address
    properties:
      id:
        description: Unique identification
        type: integer
      frontend-address:
        description: Frontend address
        "$ref": "#/definitions/FrontendAddress"
      backend-addresses:
        description: List of backend addresses
        type: array
        items:
          "$ref": "#/definitions/BackendAddress"
      flags:
        description: Optional service configuration flags
        type: object
        properties:
          active-frontend:
            description: Frontend to backend translation activated
            type: boolean
          direct-server-return:
            description: Perform direct server return
            type: boolean
  ServiceStatus:
    description: Configuration of a service
    type: object
    properties:
      realized:
        "$ref": "#/definitions/ServiceSpec"
  ProxyStatus:
    description: Status of proxy
    type: object
    properties:
      port-range:
        description: Port range used for proxying
        type: string
      ip:
        description: IP address that the proxy listens on
        type: string
  ProxyStatistics:
    description: Statistics of a set of proxy redirects for an endpoint
    type: object
    properties:
      protocol:
        description: Name of the L7 protocol
        type: string
      port:
        description: The port subject to the redirect
        type: integer
      allocated-proxy-port:
        description: The port the proxy is listening on
        type: integer
      location:
        description: Location of where the redirect is installed
        type: string
        enum:
        - ingress
        - egress
      statistics:
        description: Statistics of this set of proxy redirect
        "$ref": "#/definitions/RequestResponseStatistics"
  RequestResponseStatistics:
    description: Statistics of a proxy redirect
    type: object
    properties:
      requests:
        "$ref": "#/definitions/MessageForwardingStatistics"
      responses:
        "$ref": "#/definitions/MessageForwardingStatistics"
  MessageForwardingStatistics:
    description: Statistics of a message forwarding entity
    type: object
    properties:
      received:
        description: Number of messages received
        type: integer
      denied:
        description: Number of messages denied
        type: integer
      error:
        description: Number of errors while parsing messages
        type: integer
      forwarded:
        description: Number of messages forwarded
        type: integer
  ControllerStatuses:
    description: Collection of controller statuses
    type: array
    items:
      "$ref": "#/definitions/ControllerStatus"
  ControllerStatus:
    description: Status of a controller
    type: object
    properties:
      name:
        description: Name of controller
        type: string
      uuid:
        description: UUID of controller
        type: string
        format: uuid
      configuration:
        description: Configuration of controller
        type: object
        properties:
          interval:
            description: Regular synchronization interval
            type: string
            format: duration
          error-retry-base:
            description: Base error retry back-off time
            type: string
            format: duration
          error-retry:
            description: Retry on error
            type: boolean
      status:
        description: Current status of controller
        type: object
        properties:
          success-count:
            description: Total number of successful runs
            type: integer
          last-success-timestamp:
            description: Timestamp of last success
            type: string
            format: date-time
          failure-count:
            description: Total number of failed runs
            type: integer
          last-failure-timestamp:
            description: Timestamp of last error
            type: string
            format: date-time
          consecutive-failure-count:
            description: Number of consecutive errors since last success
            type: integer
          last-failure-msg:
            description: Error message of last failed run
            type: string
  BPFMapList:
    description: List of BPF Maps
    type: object
    properties:
      maps:
        description: Array of open BPF map lists
        type: array
        items:
          "$ref": "#/definitions/BPFMap"
  BPFMap:
    description: BPF map definition and content
    type: object
    properties:
      path:
        description: Path to BPF map
        type: string
      cache:
        description: Contents of cache
        type: array
        items:
          "$ref": "#/definitions/BPFMapEntry"
  BPFMapEntry:
    description: BPF map cache entry"
    type: object
    properties:
      key:
        description: Key of map entry
        type: string
      value:
        description: Value of map entry
        type: string
      desired-action:
        description: Desired action to be performed
        type: string
        enum:
        - ok
        - insert
        - delete
      last-error:
        description: Last error seen while performing desired action
        type: string
  Metric:
    description: Metric information
    type: object
    properties:
      name:
        description: Name of the metric
        type: string
      value:
        description: Value of the metric
        type: number
      labels:
        description: Labels of the metric
        type: object
        additionalProperties:
          type: string
  Error:
    type: string
