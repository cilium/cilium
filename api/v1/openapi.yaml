---
swagger: '2.0'
info:
  title: Cilium API
  description: Cilium
  version: v1beta
x-schemes:
- unix
basePath: "/v1"
produces:
- application/json
consumes:
- application/json
paths:
  "/cluster/nodes":
    get:
      summary: Get nodes information stored in the cilium-agent
      tags:
      - daemon
      parameters:
      - name: client-id
        description: |
          Client UUID should be used when the client wants to request
          a diff of nodes added and / or removed since the last time
          that client has made a request.
        in: header
        required: false
        type: integer
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/ClusterNodeStatus"
  "/healthz":
    get:
      summary: Get health of Cilium daemon
      description: |
        Returns health and status information of the Cilium daemon and related
        components such as the local container runtime, connected datastore,
        Kubernetes integration and Hubble.
      tags:
      - daemon
      parameters:
      - name: brief
        description: |
          Brief will return a brief representation of the Cilium status.
        in: header
        required: false
        type: boolean
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/StatusResponse"
  "/config":
    get:
      summary: Get configuration of Cilium daemon
      description: |
        Returns the configuration of the Cilium daemon.
      tags:
      - daemon
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/DaemonConfiguration"
    patch:
      summary: Modify daemon configuration
      description: |
        Updates the daemon configuration by applying the provided
        ConfigurationMap and regenerates & recompiles all required datapath
        components.
      tags:
      - daemon
      parameters:
      - name: configuration
        in: body
        required: true
        schema:
          "$ref": "#/definitions/DaemonConfigurationSpec"
      responses:
        '200':
          description: Success
        '400':
          description: Bad configuration parameters
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Recompilation failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/endpoint/{id}":
    get:
      summary: Get endpoint by endpoint ID
      description: |
        Returns endpoint information
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Endpoint"
        '400':
          description: Invalid endpoint ID format for specified type
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Endpoint not found
    put:
      summary: Create endpoint
      description: |
        Creates a new endpoint
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - "$ref": "#/parameters/endpoint-change-request"
      responses:
        '201':
          description: Created
        '400':
          description: Invalid endpoint in request
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Endpoint already exists
          x-go-name: Exists
        '500':
          description: Endpoint creation failed
          x-go-name: Failed
          schema:
            "$ref": "#/definitions/Error"
    patch:
      summary: Modify existing endpoint
      deprecated: true
      description: |
        Applies the endpoint change request to an existing endpoint
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - "$ref": "#/parameters/endpoint-change-request"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid modify endpoint request
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Endpoint does not exist
        '500':
          description: Endpoint update failed
          x-go-name: Failed
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete endpoint
      description: |
        Deletes the endpoint specified by the ID. Deletion is imminent and
        atomic, if the deletion request is valid and the endpoint exists,
        deletion will occur even if errors are encountered in the process. If
        errors have been encountered, the code 202 will be returned, otherwise
        200 on success.

        All resources associated with the endpoint will be freed and the
        workload represented by the endpoint will be disconnected.It will no
        longer be able to initiate or receive communications of any sort.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
        '206':
          description: Deleted with a number of errors encountered
          x-go-name: Errors
          schema:
            type: integer
        '400':
          description: |
            Invalid endpoint ID format for specified type. Details in error
            message
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Endpoint not found
  "/endpoint":
    get:
      summary: Retrieves a list of endpoints that have metadata matching the provided parameters.
      description: |
        Retrieves a list of endpoints that have metadata matching the provided parameters, or all endpoints if no parameters provided.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/labels"
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Endpoint"
        '404':
          description: Endpoints with provided parameters not found
  "/endpoint/{id}/config":
    get:
      summary: Retrieve endpoint configuration
      description: |
        Retrieves the configuration of the specified endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/EndpointConfigurationStatus"
        '404':
          description: Endpoint not found
    patch:
      summary: Modify mutable endpoint configuration
      description: |
        Update the configuration of an existing endpoint and regenerates &
        recompiles the corresponding programs automatically.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - name: endpoint-configuration
        in: body
        required: true
        schema:
          "$ref": "#/definitions/EndpointConfigurationSpec"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid configuration request
          x-go-name: Invalid
        '404':
          description: Endpoint not found
        '500':
          description: Update failed. Details in message.
          x-go-name: Failed
          schema:
            "$ref": "#/definitions/Error"
  "/endpoint/{id}/labels":
    get:
      summary: Retrieves the list of labels associated with an endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/LabelConfiguration"
        '404':
          description: Endpoint not found
    patch:
      summary: Set label configuration of endpoint
      description: |
        Sets labels associated with an endpoint. These can be user provided or
        derived from the orchestration system.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - name: configuration
        in: body
        required: true
        schema:
          "$ref": "#/definitions/LabelConfigurationSpec"
      responses:
        '200':
          description: Success
        '404':
          description: Endpoint not found
        '500':
          description: Error while updating labels
          x-go-name: UpdateFailed
          schema:
            "$ref": "#/definitions/Error"
  "/endpoint/{id}/log":
    get:
      summary: Retrieves the status logs associated with this endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/EndpointStatusLog"
        '400':
          description: Invalid identity provided
          x-go-name: Invalid
        '404':
          description: Endpoint not found

  "/endpoint/{id}/healthz":
    get:
      summary: Retrieves the status logs associated with this endpoint.
      tags:
      - endpoint
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/EndpointHealth"
        '400':
          description: Invalid identity provided
          x-go-name: Invalid
        '404':
          description: Endpoint not found
  "/identity":
    get:
      summary: Retrieves a list of identities that have metadata matching the provided parameters.
      description: |
        Retrieves a list of identities that have metadata matching the provided parameters, or all identities if no parameters are provided.
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/labels"
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Identity"
        '404':
          description: Identities with provided parameters not found
        '520':
          description: Identity storage unreachable. Likely a network problem.
          x-go-name: Unreachable
          schema:
            "$ref": "#/definitions/Error"
        '521':
          description: Invalid identity format in storage
          x-go-name: InvalidStorageFormat
          schema:
            "$ref": "#/definitions/Error"
  "/identity/{id}":
    get:
      summary: Retrieve identity
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/identity-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Identity"
        '400':
          description: Invalid identity provided
        '404':
          description: Identity not found
        '520':
          description: Identity storage unreachable. Likely a network problem.
          x-go-name: Unreachable
          schema:
            "$ref": "#/definitions/Error"
        '521':
          description: Invalid identity format in storage
          x-go-name: InvalidStorageFormat
          schema:
            "$ref": "#/definitions/Error"
  "/identity/endpoints":
    get:
      summary: Retrieve identities which are being used by local endpoints
      tags:
      - policy
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/IdentityEndpoints"
        '404':
          description: Set of identities which are being used by local endpoints could not be found.
  "/ipam":
    post:
      summary: Allocate an IP address
      tags:
      - ipam
      parameters:
      - "$ref": "#/parameters/ipam-family"
      - "$ref": "#/parameters/ipam-owner"
      - "$ref": "#/parameters/ipam-expiration"
      responses:
        '201':
          description: Success
          schema:
            "$ref": "#/definitions/IPAMResponse"
        '502':
          description: Allocation failure
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/ipam/{ip}":
    post:
      summary: Allocate an IP address
      tags:
      - ipam
      parameters:
      - "$ref": "#/parameters/ipam-ip"
      - "$ref": "#/parameters/ipam-owner"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid IP address
          x-go-name: Invalid
        '409':
          description: IP already allocated
          x-go-name: Exists
        '500':
          description: IP allocation failure. Details in message.
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
        '501':
          description: Allocation for address family disabled
          x-go-name: Disabled
    delete:
      summary: Release an allocated IP address
      tags:
      - ipam
      parameters:
      - "$ref": "#/parameters/ipam-release-arg"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid IP address
          x-go-name: Invalid
        '404':
          description: IP address not found
        '500':
          description: Address release failure
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
        '501':
          description: Allocation for address family disabled
          x-go-name: Disabled
  "/policy":
    get:
      summary: Retrieve entire policy tree
      description: |
        Returns the entire policy tree with all children.
      tags:
      - policy
      parameters:
      - name: labels
        in: body
        schema:
          "$ref": "#/definitions/Labels"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Policy"
        '404':
          description: No policy rules found
    put:
      summary: Create or update a policy (sub)tree
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/policy-rules"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Policy"
        '400':
          description: Invalid policy
          x-go-name: InvalidPolicy
          schema:
            "$ref": "#/definitions/Error"
        '460':
          description: Invalid path
          x-go-name: InvalidPath
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Policy import failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete a policy (sub)tree
      tags:
      - policy
      parameters:
      - name: labels
        in: body
        required: false
        schema:
          "$ref": "#/definitions/Labels"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Policy"
        '400':
          description: Invalid request
          x-go-name: Invalid
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Policy not found
        '500':
          description: Error while deleting policy
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/policy/resolve":
    get:
      summary: Resolve policy for an identity context
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/trace-selector"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/PolicyTraceResult"
  "/policy/selectors":
    get:
      summary: See what selectors match which identities
      tags:
      - policy
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/SelectorCache"
  "/lrp":
    get:
      summary: Retrieve list of all local redirect policies
      tags:
      - service
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/LRPSpec"
  "/service":
    get:
      summary: Retrieve list of all services
      tags:
      - service
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Service"
  "/service/{id}":
    get:
      summary: Retrieve configuration of a service
      tags:
      - service
      parameters:
      - "$ref": "#/parameters/service-id"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Service"
        '404':
          description: Service not found
    put:
      summary: Create or update service
      tags:
      - service
      parameters:
      - "$ref": "#/parameters/service-id"
      - "$ref": "#/parameters/service-config"
      responses:
        '200':
          description: Updated
        '201':
          description: Created
        '460':
          description: Invalid frontend in service configuration
          x-go-name: InvalidFrontend
          schema:
            "$ref": "#/definitions/Error"
        '461':
          description: Invalid backend in service configuration
          x-go-name: InvalidBackend
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Error while creating service
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete a service
      tags:
      - service
      parameters:
      - "$ref": "#/parameters/service-id"
      responses:
        '200':
          description: Success
        '404':
          description: Service not found
        '500':
          description: Service deletion failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/prefilter":
    get:
      summary: Retrieve list of CIDRs
      tags:
      - prefilter
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Prefilter"
        '500':
          description: Prefilter get failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
    patch:
      summary: Update list of CIDRs
      tags:
      - prefilter
      parameters:
      - "$ref": "#/parameters/prefilter-spec"
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/Prefilter"
        '461':
          description: Invalid CIDR prefix
          x-go-name: InvalidCIDR
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Prefilter update failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
    delete:
      summary: Delete list of CIDRs
      tags:
      - prefilter
      parameters:
      - "$ref": "#/parameters/prefilter-spec"
      responses:
        '200':
          description: Deleted
          schema:
            "$ref": "#/definitions/Prefilter"
        '461':
          description: Invalid CIDR prefix
          x-go-name: InvalidCIDR
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Prefilter delete failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/debuginfo":
    get:
      summary: Retrieve information about the agent and evironment for debugging
      tags:
      - daemon
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/DebugInfo"
        '500':
          description: DebugInfo get failed
          x-go-name: Failure
          schema:
            "$ref": "#/definitions/Error"
  "/map":
    get:
      summary: List all open maps
      tags:
      - daemon
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/BPFMapList"
  "/map/{name}":
    get:
      summary: Retrieve contents of BPF map
      tags:
      - daemon
      parameters:
      - "$ref": "#/parameters/map-name"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/BPFMap"
        '404':
          description: Map not found

  "/metrics/":
    get:
      summary: Retrieve cilium metrics
      tags:
      - metrics
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/Metric"
        '500':
          description: Metrics cannot be retrieved

  "/fqdn/cache":
    get:
      summary: Retrieves the list of DNS lookups intercepted from all endpoints.
      description: |
        Retrieves the list of DNS lookups intercepted from endpoints,
        optionally filtered by endpoint id, DNS name, or CIDR IP range.
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/matchpattern"
      - "$ref": "#/parameters/cidr"
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/DNSLookup"
        '400':
          description: Invalid request (error parsing parameters)
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: No DNS data with provided parameters found
    delete:
      summary: Deletes matching DNS lookups from the policy-generation cache.
      description: |
        Deletes matching DNS lookups from the cache, optionally restricted by
        DNS name. The removed IP data will no longer be used in generated
        policies.
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/matchpattern"
      responses:
        '200':
          description: Success
        '400':
          description: Invalid request (error parsing parameters)
          schema:
            "$ref": "#/definitions/Error"

  "/fqdn/cache/{id}":
    get:
      summary: Retrieves the list of DNS lookups intercepted from an endpoint.
      description: |
        Retrieves the list of DNS lookups intercepted from endpoints,
        optionally filtered by endpoint id, DNS name, or CIDR IP range.
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/endpoint-id"
      - "$ref": "#/parameters/matchpattern"
      - "$ref": "#/parameters/cidr"
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/DNSLookup"
        '400':
          description: Invalid request (error parsing parameters)
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: No DNS data with provided parameters found
  "/fqdn/names":
    get:
      summary: List internal DNS selector representations
      description: |
        Retrieves the list of DNS-related fields (names to poll, selectors and
        their corresponding regexes).
      tags:
      - policy
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/NameManager"
        '400':
          description: Invalid request (error parsing parameters)
          schema:
            "$ref": "#/definitions/Error"
  "/ip":
    get:
      summary: Lists information about known IP addresses
      description: |
        Retrieves a list of IPs with known associated information such as
        their identities, host addresses, Kubernetes pod names, etc.
        The list can optionally filtered by a CIDR IP range.
      tags:
      - policy
      parameters:
      - "$ref": "#/parameters/cidr"
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              "$ref": "#/definitions/IPListEntry"
        '400':
          description: Invalid request (error parsing parameters)
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: No IP cache entries with provided parameters found
parameters:
  endpoint-id:
    name: id
    description: |
      String describing an endpoint with the format ``[prefix:]id``. If no prefix
      is specified, a prefix of ``cilium-local:`` is assumed. Not all endpoints
      will be addressable by all endpoint ID prefixes with the exception of the
      local Cilium UUID which is assigned to all endpoints.

      Supported endpoint id prefixes:
        - cilium-local: Local Cilium endpoint UUID, e.g. cilium-local:3389595
        - cilium-global: Global Cilium endpoint UUID, e.g. cilium-global:cluster1:nodeX:452343
        - container-id: Container runtime ID, e.g. container-id:22222
        - container-name: Container name, e.g. container-name:foobar
        - pod-name: pod name for this container if K8s is enabled, e.g. pod-name:default:foobar
        - docker-endpoint: Docker libnetwork endpoint ID, e.g. docker-endpoint:4444
    in: path
    required: true
    type: string
  endpoint-change-request:
    name: endpoint
    in: body
    required: true
    schema:
      "$ref": "#/definitions/EndpointChangeRequest"
  identity-id:
    name: id
    description: |
      Cluster wide unique identifier of a security identity.
    in: path
    required: true
    type: string
  labels:
    name: labels
    description: |
      List of labels
    in: body
    required: false
    schema:
      "$ref": "#/definitions/Labels"
  policy-rules:
    name: policy
    description: Policy rules
    required: true
    in: body
    schema:
      type: string
  pod-name:
    name: pod
    description: |
      K8s pod name
    required: true
    in: path
    type: string
  trace-selector:
    name: trace-selector
    description: Context to provide policy evaluation on
    in: body
    schema:
      "$ref": "#/definitions/TraceSelector"
  service-id:
    name: id
    description: ID of service
    required: true
    in: path
    type: integer
  service-address:
    name: address
    description: Service address configuration
    in: body
    schema:
      "$ref": "#/definitions/FrontendAddress"
  service-config:
    name: config
    description: Service configuration
    in: body
    required: true
    schema:
      "$ref": "#/definitions/ServiceSpec"
  prefilter-spec:
    name: prefilter-spec
    description: List of CIDR ranges for filter table
    required: true
    in: body
    schema:
      "$ref": "#/definitions/PrefilterSpec"
  ipam-ip:
    name: ip
    description: IP address
    in: path
    required: true
    type: string
  ipam-release-arg:
    name: ip
    description: IP address or owner name
    in: path
    required: true
    type: string
  ipam-family:
    name: family
    in: query
    type: string
    enum:
    - ipv4
    - ipv6
  ipam-owner:
    name: owner
    in: query
    type: string
  ipam-expiration:
    name: expiration
    in: header
    type: boolean
  map-name:
    name: name
    description: Name of map
    required: true
    in: path
    type: string
  matchpattern:
    name: matchpattern
    description: A toFQDNs compatible matchPattern expression
    required: false
    in: query
    type: string
  cidr:
    name: cidr
    description: A CIDR range of IPs
    required: false
    in: query
    type: string


definitions:
  Endpoint:
    description: An endpoint is a namespaced network interface to which cilium applies policies
    type: object
    properties:
      id:
        description: The cilium-agent-local ID of the endpoint
        type: integer
      spec:
        description: The desired configuration state of the endpoint
        "$ref": "#/definitions/EndpointConfigurationSpec"
      status:
        description: The desired and realized configuration state of the endpoint
        "$ref": "#/definitions/EndpointStatus"
  EndpointChangeRequest:
    description: |
      Structure which contains the mutable elements of an Endpoint.
    type: object
    required:
      - state
    properties:
      id:
        description: Local endpoint ID
        type: integer
      container-id:
        description: ID assigned by container runtime
        type: string
      container-name:
        description: Name assigned to container
        type: string
      docker-endpoint-id:
        description: Docker endpoint ID
        type: string
      labels:
        description: Labels describing the identity
        "$ref": "#/definitions/Labels"
      docker-network-id:
        description: Docker network ID
        type: string
      interface-name:
        description: Name of network device
        type: string
      interface-index:
        description: Index of network device
        type: integer
      state:
        description: Current state of endpoint
        "$ref": "#/definitions/EndpointState"
      mac:
        description: MAC address
        type: string
      host-mac:
        description: MAC address
        type: string
      addressing:
        "$ref": "#/definitions/AddressPair"
      k8s-pod-name:
        description: Kubernetes pod name
        type: string
      k8s-namespace:
        description: Kubernetes namespace name
        type: string
      datapath-map-id:
        description: ID of datapath tail call map
        type: integer
      policy-enabled:
        description: Whether policy enforcement is enabled or not
        type: boolean
      pid:
        description: Process ID of the workload belonging to this endpoint
        type: integer
      sync-build-endpoint:
        description: |
          Whether to build an endpoint synchronously
        type: boolean
      datapath-configuration:
        "$ref": "#/definitions/EndpointDatapathConfiguration"
  EndpointDatapathConfiguration:
    description: Datapath configuration to be used for the endpoint
    type: object
    properties:
      require-arp-passthrough:
        description: Enable ARP passthrough mode
        type: boolean
      require-egress-prog:
        description: >
          Endpoint requires a host-facing egress program to be attached to
          implement ingress policy and reverse NAT.
        type: boolean
      external-ipam:
        description: >
          Indicates that IPAM is done external to Cilium. This will prevent the
          IP from being released and re-allocation of the IP address is skipped
          on restore.
        type: boolean
      require-routing:
        description: >
          Endpoint requires BPF routing to be enabled, when disabled, routing
          is delegated to Linux routing.
        type: boolean
        default: true
      install-endpoint-route:
        description: >
          Installs a route in the Linux routing table pointing to the device of
          the endpoint's interface.
        type: boolean
  EndpointStatus:
    description: The current state and configuration of the endpoint, its policy & datapath, and subcomponents
    type: object
    required:
      - state
    properties:
      external-identifiers:
        description: Unique identifiers for this endpoint from outside cilium
        "$ref": "#/definitions/EndpointIdentifiers"
      identity:
        description: The security identity for this endpoint
        "$ref": "#/definitions/Identity"
      labels:
        description: Labels applied to this endpoint
        "$ref": "#/definitions/LabelConfigurationStatus"
      realized:
        description: The configuration in effect on this endpoint
        "$ref": "#/definitions/EndpointConfigurationSpec"
      networking:
        description: Networking properties of the endpoint
        "$ref": "#/definitions/EndpointNetworking"
      policy:
        description: The policy applied to this endpoint from the policy repository
        "$ref": "#/definitions/EndpointPolicyStatus"
      log:
        description: Most recent status log. See endpoint/{id}/log for the complete log.
        "$ref": "#/definitions/EndpointStatusLog"
      controllers:
        description: Status of internal controllers attached to this endpoint
        "$ref": "#/definitions/ControllerStatuses"
      state:
        description: Current state of endpoint
        "$ref": "#/definitions/EndpointState"
      health:
        description: Summary overall endpoint & subcomponent health
        "$ref": "#/definitions/EndpointHealth"
      namedPorts:
        description: List of named ports that can be used in Network Policy
        "$ref": "#/definitions/NamedPorts"
  EndpointState:
    description: State of endpoint
    type: string
    enum:
      - waiting-for-identity
      - not-ready
      - waiting-to-regenerate
      - regenerating
      - restoring
      - ready
      - disconnecting
      - disconnected
      - invalid
  EndpointHealth:
    description: |-
      Health of the endpoint

      +deepequal-gen=true
    type: object
    properties:
      overallHealth:
       "$ref": "#/definitions/EndpointHealthStatus"
      bpf:
       "$ref": "#/definitions/EndpointHealthStatus"
      policy:
       "$ref": "#/definitions/EndpointHealthStatus"
      connected:
        description: Is this endpoint reachable
        type: boolean
  EndpointHealthStatus:
    description: >
      A common set of statuses for endpoint health
      * ``OK`` = All components operational
      * ``Bootstrap`` = This component is being created
      * ``Pending`` = A change is being processed to be applied
      * ``Warning`` = This component is not applying up-to-date policies (but is still applying the previous version)
      * ``Failure`` = An error has occurred and no policy is being applied
      * ``Disabled`` = This endpoint is disabled and will not handle traffic
    type: string
    enum:
      - OK
      - Bootstrap
      - Pending
      - Warning
      - Failure
      - Disabled
  EndpointStatusLog:
    description: Status log of endpoint
    type: array
    items:
      "$ref": "#/definitions/EndpointStatusChange"
  EndpointStatusChange:
    description: |-
      Indication of a change of status

      +deepequal-gen=true
    type: object
    properties:
      timestamp:
        description: Timestamp when status change occurred
        type: string
      code:
        description: Code indicate type of status change
        type: string
        enum:
         - ok
         - failed
      message:
        description: Status message
        type: string
      state:
        "$ref": "#/definitions/EndpointState"
  EndpointPolicyStatus:
    description: Policy information of an endpoint
    type: object
    properties:
      spec:
        description: The policy that should apply to this endpoint
        "$ref": "#/definitions/EndpointPolicy"
      realized:
        description: The policy in the datapath for this endpoint
        "$ref": "#/definitions/EndpointPolicy"
      proxy-policy-revision:
        description: The policy revision currently enforced in the proxy for this endpoint
        type: integer
      proxy-statistics:
        description: Statistics of the proxy redirects configured for this endpoint
        type: array
        items:
          "$ref": "#/definitions/ProxyStatistics"
  EndpointPolicyEnabled:
    description: Whether policy enforcement is enabled (ingress, egress, both or none)
    type: string
    enum:
      - none
      - ingress
      - egress
      - both
      - audit-ingress
      - audit-egress
      - audit-both
  EndpointPolicy:
    description: |-
      Policy information of an endpoint

      +k8s:deepcopy-gen=true
    type: object
    properties:
      policy-revision:
        description: The agent-local policy revision
        type: integer
      id:
        description: Own identity of endpoint
        type: integer
      policy-enabled:
        description: Whether policy enforcement is enabled (ingress, egress, both or none)
        "$ref": "#/definitions/EndpointPolicyEnabled"
      build:
        description: Build number of calculated policy in use
        type: integer
      allowed-ingress-identities:
        description: |
          List of identities allowed to communicate to this endpoint
        type: array
        items:
          type: integer
      denied-ingress-identities:
        description: |
          List of identities not allowed to communicate to this endpoint
        type: array
        items:
          type: integer
      allowed-egress-identities:
        description: |
          List of identities to which this endpoint is allowed to communicate
        type: array
        items:
          type: integer
      denied-egress-identities:
        description: |
          List of identities to which this endpoint is not allowed to communicate
        type: array
        items:
          type: integer
      l4:
        "$ref": "#/definitions/L4Policy"
      cidr-policy:
        "$ref": "#/definitions/CIDRPolicy"
  PolicyRule:
    description: |-
      A policy rule including the rule labels it derives from

      +k8s:deepcopy-gen=true
    properties:
      rule:
        description: The policy rule as json
        type: string
      derived-from-rules:
        description: The policy rule labels identifying the policy rules this rule derives from
        type: array
        items:
          type: array
          items:
            type: string
  L4Policy:
    description: |-
      L4 endpoint policy

      +k8s:deepcopy-gen=true
    type: object
    properties:
      ingress:
        description: List of L4 ingress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"
      egress:
        description: List of L4 egress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"
  CIDRPolicy:
    description: |-
      CIDR endpoint policy

      +k8s:deepcopy-gen=true
    type: object
    properties:
      ingress:
        description: List of CIDR ingress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"
      egress:
        description: List of CIDR egress rules
        type: array
        items:
          "$ref": "#/definitions/PolicyRule"

  Prefilter:
    description: Collection of endpoints to be served
    type: object
    properties:
      spec:
        "$ref": "#/definitions/PrefilterSpec"
      status:
        "$ref": "#/definitions/PrefilterStatus"
  PrefilterSpec:
    description: CIDR ranges implemented in the Prefilter
    type: object
    properties:
      revision:
        type: integer
      deny:
        type: array
        items:
          type: string
  PrefilterStatus:
    description: CIDR ranges implemented in the Prefilter
    type: object
    properties:
      realized:
        "$ref": "#/definitions/PrefilterSpec"

  CIDRList:
    description: List of CIDRs
    type: object
    properties:
      revision:
        type: integer
      list:
        type: array
        items:
          type: string
  DebugInfo:
    description: groups some debugging related information on the agent
    type: object
    properties:
      cilium-version:
        type: string
      kernel-version:
        type: string
      cilium-status:
        "$ref": "#/definitions/StatusResponse"
      endpoint-list:
        type: array
        items:
          "$ref": "#/definitions/Endpoint"
      service-list:
        type: array
        items:
          "$ref": "#/definitions/Service"
      policy:
        "$ref": "#/definitions/Policy"
      cilium-memory-map:
        type: string
      cilium-nodemonitor-memory-map:
        type: string
      environment-variables:
        type: array
        items:
          type: string
      subsystem:
        type: object
        additionalProperties:
          type: string
  IPAMResponse:
    description: IPAM configuration of an endpoint
    type: object
    required:
      - address
      - host-addressing
    properties:
      address:
        "$ref": "#/definitions/AddressPair"
      ipv4:
        "$ref": "#/definitions/IPAMAddressResponse"
      ipv6:
        "$ref": "#/definitions/IPAMAddressResponse"
      host-addressing:
        "$ref": "#/definitions/NodeAddressing"
  IPAMAddressResponse:
    description: IPAM configuration of an individual address family
    type: object
    properties:
      ip:
        description: Allocated IP for endpoint
        type: string
      gateway:
        description: IP of gateway
        type: string
      cidrs:
        description: List of CIDRs out of which IPs are allocated
        type: array
        items:
          type: string
      master-mac:
        type: string
        description: MAC of master interface if address is a slave/secondary of a master interface
      expiration-uuid:
        type: string
        description: |
          The UUID for the expiration timer. Set when expiration has been
          enabled while allocating.
  AddressPair:
    description: Addressing information of an endpoint
    type: object
    properties:
      ipv4:
        description: IPv4 address
        type: string
      ipv4-expiration-uuid:
        description: UUID of IPv4 expiration timer
        type: string
      ipv6:
        description: IPv6 address
        type: string
      ipv6-expiration-uuid:
        description: UUID of IPv6 expiration timer
        type: string
  Address:
    description: IP address
    type: string
  ClusterNodesResponse:
    properties:
      self:
        description: Name of local node (if available)
        type: string
      nodes:
        description: List of known nodes
        type: array
        items:
          "$ref": "#/definitions/NodeElement"
  Identity:
    description: Security identity
    type: object
    properties:
      id:
        description: Unique identifier
        type: integer
      labels:
        description: Labels describing the identity
        "$ref": "#/definitions/Labels"
      labelsSHA256:
        description: SHA256 of labels
        type: string
  IdentityEndpoints:
    description: Security identities owned by endpoints on the local node
    type: object
    properties:
      identity:
        description: Security identity
        "$ref": "#/definitions/Identity"
      refCount:
        description: number of endpoints consuming this identity locally (should always be > 0)
        type: integer
  EndpointNetworking:
    description: Unique identifiers for this endpoint from outside cilium
    type: object
    properties:
      addressing:
        description: IP4/6 addresses assigned to this Endpoint
        type: array
        items:
          "$ref": "#/definitions/AddressPair"
      host-addressing:
        "$ref": "#/definitions/NodeAddressing"
      host-mac:
        description: MAC address
        type: string
      mac:
        description: MAC address
        type: string
      interface-name:
        description: Name of network device
        type: string
      interface-index:
        description: Index of network device
        type: integer
  EndpointIdentifiers:
    description: |-
      Unique identifiers for this endpoint from outside cilium

      +deepequal-gen=true
    type: object
    properties:
      container-id:
        description: ID assigned by container runtime
        type: string
      container-name:
        description: Name assigned to container
        type: string
      docker-endpoint-id:
        description: Docker endpoint ID
        type: string
      docker-network-id:
        description: Docker network ID
        type: string
      pod-name:
        description: K8s pod for this endpoint(Deprecated, use K8sPodName and K8sNamespace instead)
        type: string
      k8s-pod-name:
        description: K8s pod name for this endpoint
        type: string
      k8s-namespace:
        description: K8s namespace for this endpoint
        type: string
  Labels:
    description: Set of labels
    type: array
    items:
      type: string
  LabelConfiguration:
    description: Label configuration of an endpoint
    type: object
    properties:
      spec:
        description: The user provided desired configuration
        "$ref": "#/definitions/LabelConfigurationSpec"
      status:
        description: The current configuration
        "$ref": "#/definitions/LabelConfigurationStatus"
  LabelConfigurationSpec:
    description: User desired Label configuration of an endpoint
    type: object
    properties:
      user:
        description: "Custom labels in addition to orchestration system labels."
        "$ref": "#/definitions/Labels"
  LabelConfigurationStatus:
    description: Labels and label configuration of an endpoint
    type: object
    properties:
      realized:
        description: The current configuration
        "$ref": "#/definitions/LabelConfigurationSpec"
      security-relevant:
        description: "Labels derived from orchestration system that are used in computing a security identity"
        "$ref": "#/definitions/Labels"
      derived:
        description: "All labels derived from the orchestration system"
        "$ref": "#/definitions/Labels"
      disabled:
        description: "Labels derived from orchestration system which have been disabled."
        "$ref": "#/definitions/Labels"
  StatusResponse:
    description: |-
      Health and status information of daemon

      +k8s:deepcopy-gen=true
    type: object
    properties:
      cilium:
        description: Status of Cilium daemon
        "$ref": "#/definitions/Status"
      kvstore:
        description: Status of key/value datastore
        "$ref": "#/definitions/Status"
      container-runtime:
        description: Status of local container runtime
        "$ref": "#/definitions/Status"
      hubble:
        description: Status of Hubble server
        "$ref": "#/definitions/HubbleStatus"
      kubernetes:
        description: Status of Kubernetes integration
        "$ref": "#/definitions/K8sStatus"
      kube-proxy-replacement:
        description: Status of kube-proxy replacement
        "$ref": "#/definitions/KubeProxyReplacement"
      ipam:
        description: Status of IP address management
        "$ref": "#/definitions/IPAMStatus"
      nodeMonitor:
        description: Status of the node monitor
        "$ref": "#/definitions/MonitorStatus"
      cluster:
        description: Status of cluster
        "$ref": "#/definitions/ClusterStatus"
      controllers:
        description: Status of all endpoint controllers
        "$ref": "#/definitions/ControllerStatuses"
      proxy:
        description: Status of proxy
        "$ref": "#/definitions/ProxyStatus"
      bandwidth-manager:
        description: Status of bandwidth manager
        "$ref": "#/definitions/BandwidthManager"
      masquerading:
        description: Status of masquerading
        "$ref": "#/definitions/Masquerading"
      host-routing:
        description: Status of host routing
        "$ref": "#/definitions/HostRouting"
      clock-source:
        description: Status of clock source
        "$ref": "#/definitions/ClockSource"
      stale:
        description: List of stale information in the status
        type: object
        additionalProperties:
          description: Timestamp when the probe was started
          type: string
          format: date-time
      client-id:
        description: |
          When supported by the API, this client ID should be used by the
          client when making another request to the server.
          See for example "/cluster/nodes".
        type: integer
      cluster-mesh:
        description: Status of ClusterMesh
        "$ref": "#/definitions/ClusterMeshStatus"
      bpf-maps:
        description: Status of BPF maps
        "$ref": "#/definitions/BPFMapStatus"
  Status:
    description: Status of an individual component
    type: object
    properties:
      state:
        type: string
        description: State the component is in
        enum:
        - Ok
        - Warning
        - Failure
        - Disabled
      msg:
        type: string
        description: Human readable status/error/warning message
  HubbleStatus:
    description: |-
      Status of the Hubble server

      +k8s:deepcopy-gen=true
    type: object
    properties:
      state:
        type: string
        description: State the component is in
        enum:
          - Ok
          - Warning
          - Failure
          - Disabled
      msg:
        type: string
        description: Human readable status/error/warning message
      observer:
        type: object
        description: |-
          Status of the Hubble observer

          +k8s:deepcopy-gen=true
        properties:
          max-flows:
            type: integer
            description: Maximum number of flows this Hubble observer is able to store
          current-flows:
            type: integer
            description: Current number of flows this Hubble observer stores
          seen-flows:
            type: integer
            description: Total number of flows this Hubble observer has seen
          uptime:
            type: string
            format: duration
            description: Uptime of this Hubble observer instance
      metrics:
        type: object
        description: Status of the Hubble metrics server
        properties:
          state:
            type: string
            description: State of the Hubble metrics
            enum:
              - Ok
              - Warning
              - Failure
              - Disabled
  K8sStatus:
    description: |-
      Status of Kubernetes integration

      +k8s:deepcopy-gen=true
    type: object
    properties:
      state:
        type: string
        description: State the component is in
        enum:
        - Ok
        - Warning
        - Failure
        - Disabled
      k8s-api-versions:
          type: array
          items:
            type: string
      msg:
        type: string
        description: Human readable status/error/warning message
  KubeProxyReplacement:
    description: |-
      Status of kube-proxy replacement

      +k8s:deepcopy-gen=true
    type: object
    properties:
      mode:
        type: string
        enum:
        - Disabled
        - Strict
        - Probe
        - Partial
      devices:
        description: |-


          +k8s:deepcopy-gen=true
        type: array
        items:
          description: |-


            +k8s:deepcopy-gen=true
          type: object
          properties:
            name:
              type: string
            ip:
              description: |-


                +k8s:deepcopy-gen=true
              type: array
              items:
                type: string
      directRoutingDevice:
        type: string
      features:
        description: |-


          +k8s:deepcopy-gen=true
        type: object
        properties:
          nodePort:
            description: |-


              +k8s:deepcopy-gen=true
            type: object
            properties:
              enabled:
                type: boolean
              mode:
                type: string
                enum:
                - SNAT
                - DSR
                - Hybrid
              algorithm:
                type: string
                enum:
                - Random
                - Maglev
              acceleration:
                type: string
                enum:
                - None
                - Native
                - Generic
              portMin:
                type: integer
              portMax:
                type: integer
              lutSize:
                type: integer
          hostPort:
            description: |-


              +k8s:deepcopy-gen=true
            type: object
            properties:
              enabled:
                type: boolean
          externalIPs:
            description: |-


              +k8s:deepcopy-gen=true
            type: object
            properties:
              enabled:
                type: boolean
          hostReachableServices:
            description: |-


              +k8s:deepcopy-gen=true
            type: object
            properties:
              enabled:
                type: boolean
              protocols:
                type: array
                items:
                  type: string
          sessionAffinity:
            description: |-


              +k8s:deepcopy-gen=true
            type: object
            properties:
              enabled:
                type: boolean
  AllocationMap:
    description: |
      Map of allocated IPs
    type: object
    additionalProperties:
      type: string
  IPAMStatus:
    description: |-
      Status of IP address management

      +k8s:deepcopy-gen=true
    properties:
      allocations:
        "$ref": "#/definitions/AllocationMap"
      ipv4:
        type: array
        items:
          type: string
      ipv6:
        type: array
        items:
          type: string
      status:
        type: string
  ClusterStatus:
    description: |-
      Status of cluster

      +k8s:deepcopy-gen=true
    properties:
      ciliumHealth:
        description: Status of local cilium-health daemon
        "$ref": "#/definitions/Status"
      self:
        description: Name of local node (if available)
        type: string
      nodes:
        description: List of known nodes
        type: array
        items:
          "$ref": "#/definitions/NodeElement"
  ClusterNodeStatus:
    description: Status of cluster
    properties:
      self:
        description: Name of local node (if available)
        type: string
      nodes-added:
        description: List of known nodes
        type: array
        items:
          "$ref": "#/definitions/NodeElement"
      nodes-removed:
        description: List of known nodes
        type: array
        items:
          "$ref": "#/definitions/NodeElement"
      client-id:
        description: ID that should be used by the client to receive a diff from the previous request
        type: integer
  ClusterMeshStatus:
    description: |-
      Status of ClusterMesh

      +k8s:deepcopy-gen=true
    properties:
      clusters:
        description: List of remote clusters
        type: array
        items:
          "$ref": "#/definitions/RemoteCluster"
      num-global-services:
        description: Number of global services
        type: integer
  RemoteCluster:
    description: |-
      Status of remote cluster

      +k8s:deepcopy-gen=true
    properties:
      name:
        description: Name of the cluster
        type: string
      ready:
        description: Indicates readiness of the remote cluser
        type: boolean
      num-nodes:
        description: Number of nodes in the cluster
        type: integer
      num-shared-services:
        description: Number of services in the cluster
        type: integer
      num-identities:
        description: Number of identities in the cluster
        type: integer
      status:
        description: Status of the control plane
        type: string
      num-failures:
        description: Number of failures reaching the cluster
        type: integer
      last-failure:
        description: Time of last failure that occurred while attempting to reach the cluster
        type: string
        format: date-time
  MonitorStatus:
    description: Status of the node monitor
    properties:
      cpus:
        description: Number of CPUs to listen on for events.
        type: integer
      npages:
        description: Number of pages used for the perf ring buffer.
        type: integer
      pagesize:
        description: Pages size used for the perf ring buffer.
        type: integer
      lost:
        description: Number of samples lost by perf.
        type: integer
      unknown:
        description: Number of unknown samples.
        type: integer
  KVstoreConfiguration:
    description: Configuration used for the kvstore
    properties:
      type:
        description: Type of kvstore
        type: string
      options:
        description: Configuration options
        type: object
        additionalProperties:
          type: string
  DaemonConfiguration:
    description: |
      Response to a daemon configuration request.
    type: object
    properties:
      spec:
        description: Changeable configuration
        "$ref": "#/definitions/DaemonConfigurationSpec"
      status:
        description: |
          Current daemon configuration related status.Contains the addressing
          information, k8s, node monitor and immutable and mutable
          configuration settings.
        "$ref": "#/definitions/DaemonConfigurationStatus"
  DaemonConfigurationSpec:
    description: The controllable configuration of the daemon.
    type: object
    properties:
      options:
        description: Changeable configuration
        "$ref": "#/definitions/ConfigurationMap"
      policy-enforcement:
        description: "The policy-enforcement mode"
        type: string
        enum:
          - default
          - always
          - never
  DaemonConfigurationStatus:
    description: |
      Response to a daemon configuration request. Contains the addressing
      information, k8s, node monitor and immutable and mutable configuration
      settings.
    type: object
    properties:
      realized:
        description: Currently applied configuration
        "$ref": "#/definitions/DaemonConfigurationSpec"
      immutable:
        description: Immutable configuration (read-only)
        "$ref": "#/definitions/ConfigurationMap"
      addressing:
        "$ref": "#/definitions/NodeAddressing"
      k8s-endpoint:
        type: string
      k8s-configuration:
        type: string
      nodeMonitor:
        description: Status of the node monitor
        "$ref": "#/definitions/MonitorStatus"
      kvstoreConfiguration:
        "$ref": "#/definitions/KVstoreConfiguration"
      deviceMTU:
        description: MTU on workload facing devices
        type: integer
      routeMTU:
        description: MTU for network facing routes
        type: integer
      datapathMode:
        "$ref": "#/definitions/DatapathMode"
      ipvlanConfiguration:
        "$ref": "#/definitions/IpvlanConfiguration"
      ipam-mode:
        description: Configured IPAM mode
        type: string
      masquerade:
        description: Status of masquerading feature
        type: object
        properties:
          ipv4:
            description: Status of masquerading for IPv4 traffic
            type: boolean
          ipv6:
            description: Status of masquerading for IPv6 traffic
            type: boolean
  DatapathMode:
    description: Datapath mode
    type: string
    enum:
      - veth
      - ipvlan
  IpvlanConfiguration:
    description: Setup for datapath when operating in ipvlan mode.
    type: object
    properties:
      masterDeviceIndex:
        description: Workload facing ipvlan master device ifindex.
        type: integer
      operationMode:
        description: Mode in which ipvlan setup operates.
        type: string
        enum:
          - L3
          - L3S
  EndpointConfigurationSpec:
    description: An endpoint's configuration
    type: object
    properties:
      options:
        description: Changeable configuration
        "$ref": "#/definitions/ConfigurationMap"
      label-configuration:
        description: the endpoint's labels
        "$ref": "#/definitions/LabelConfigurationSpec"
  EndpointConfigurationStatus:
    description: An endpoint's configuration
    type: object
    properties:
      realized:
        description: currently applied changeable configuration
        "$ref": "#/definitions/EndpointConfigurationSpec"
      immutable:
        description: Immutable configuration (read-only)
        "$ref": "#/definitions/ConfigurationMap"
      error:
        description: Most recent error, if applicable
        "$ref": "#/definitions/Error"
  ConfigurationMap:
    description: |
      Map of configuration key/value pairs.
    type: object
    additionalProperties:
      type: string
  NodeElement:
    description: |-
      Known node in the cluster

      +k8s:deepcopy-gen=true
    properties:
      name:
        type: string
        description: |
          Name of the node including the cluster association. This is typically
          <clustername>/<hostname>.
      primary-address:
        description: Primary address used for intra-cluster communication
        "$ref": "#/definitions/NodeAddressing"
      secondary-addresses:
        description: Alternative addresses assigned to the node
        type: array
        items:
          "$ref": "#/definitions/NodeAddressingElement"
      health-endpoint-address:
        description: Address used for probing cluster connectivity
        "$ref": "#/definitions/NodeAddressing"
  NodeAddressing:
    description: |-
      Addressing information of a node for all address families

      +k8s:deepcopy-gen=true
    type: object
    properties:
      ipv6:
        "$ref": "#/definitions/NodeAddressingElement"
      ipv4:
        "$ref": "#/definitions/NodeAddressingElement"
  NodeAddressingElement:
    description: Addressing information
    type: object
    properties:
      enabled:
        description: True if address family is enabled
        type: boolean
      ip:
        description: IP address of node
        type: string
      alloc-range:
        description: Address pool to be used for local endpoints
        type: string
      address-type:
        description: Node address type, one of HostName, ExternalIP or InternalIP
        type: string
  Policy:
    description: Policy definition
    type: object
    properties:
      revision:
        description: |
          Revision number of the policy. Incremented each time the policy is
          changed in the agent's repository
        type: integer
      policy:
        description: Policy definition as JSON.
        type: string
  PolicyTraceResult:
    description: Response to a policy resolution process
    type: object
    properties:
      verdict:
        type: string
      log:
        type: string
  Port:
    description: |-
      Layer 4 port / protocol pair

      +deepequal-gen=true
    type: object
    properties:
      protocol:
        description: Layer 4 protocol
        type: string
        enum:
          - TCP
          - UDP
          - ANY
      port:
        description: Layer 4 port number
        type: integer
        format: uint16
      name:
        description: Optional layer 4 port name
        type: string
  SelectorCache:
    description: cache of which identities match selectors in the policy repository
    type: array
    items:
      "$ref": "#/definitions/SelectorIdentityMapping"
  SelectorIdentityMapping:
    description: mapping of selector to identities which match it
    type: object
    properties:
      selector:
        description: string form of selector
        type: string
      identities:
        description: identities mapping to this selector
        type: array
        items:
            type: integer
      users:
        description: number of users of this selector in the cache
        type: integer
  TraceSelector:
    description: Context describing a pair of source and destination identity
    type: object
    properties:
      from:
        "$ref": "#/definitions/TraceFrom"
      to:
        "$ref": "#/definitions/TraceTo"
      verbose:
        description: |
          Enable verbose tracing.
        type: boolean
  TraceFrom:
    type: object
    properties:
      labels:
        "$ref": "#/definitions/Labels"
  TraceTo:
    type: object
    properties:
      labels:
        "$ref": "#/definitions/Labels"
      dports:
        description: |
          List of Layer 4 port and protocol pairs which will be used in communication
          from the source identity to the destination identity.
        type: array
        items:
          "$ref": "#/definitions/Port"

  FrontendAddress:
    description: |
      Layer 4 address. The protocol is currently ignored, all services will
      behave as if protocol any is specified. To restrict to a particular
      protocol, use policy.
    type: object
    properties:
      ip:
        description: Layer 3 address
        type: string
      protocol:
        description: Layer 4 protocol
        type: string
        enum:
        - tcp
        - udp
        - any
      scope:
        description: Load balancing scope for frontend address
        type: string
        enum:
        - external
        - internal
      port:
        description: Layer 4 port number
        type: integer
        format: uint16
  BackendAddress:
    description: Service backend address
    type: object
    required:
    - ip
    properties:
      ip:
        description: Layer 3 address
        type: string
      port:
        description: Layer 4 port number
        type: integer
        format: uint16
      nodeName:
        description: Optional name of the node on which this backend runs
        type: string
  LRPBackend:
    description: Pod backend of an LRP
    type: object
    properties:
      pod-id:
        description: Namespace and name of the backend pod
        type: string
      backend-address:
        "$ref": "#/definitions/BackendAddress"
  FrontendMapping:
    description: Mapping of frontend to backend pods of an LRP
    type: object
    properties:
      frontend-address:
        "$ref": "#/definitions/FrontendAddress"
      backends:
        description: Pod backends of an LRP
        type: array
        items:
          "$ref": "#/definitions/LRPBackend"
  LRPSpec:
    description: Configuration of an LRP
    type: object
    properties:
      uid:
        description: Unique identification
        type: string
      name:
        description: LRP service name
        type: string
      namespace:
        description: LRP service namespace
        type: string
      frontend-type:
        description: LRP frontend type
        type: string
      lrp-type:
        description: LRP config type
        type: string
      service-id:
        description: matching k8s service namespace and name
        type: string
      frontend-mappings:
        description: mapping of frontends to pod backends
        type: array
        items:
          "$ref": "#/definitions/FrontendMapping"
  Service:
    description: Collection of endpoints to be served
    type: object
    properties:
      spec:
        "$ref": "#/definitions/ServiceSpec"
      status:
        "$ref": "#/definitions/ServiceStatus"
  ServiceSpec:
    description: Configuration of a service
    type: object
    required:
    - frontend-address
    properties:
      id:
        description: Unique identification
        type: integer
      frontend-address:
        description: Frontend address
        "$ref": "#/definitions/FrontendAddress"
      backend-addresses:
        description: List of backend addresses
        type: array
        items:
          "$ref": "#/definitions/BackendAddress"
      flags:
        description: Optional service configuration flags
        type: object
        properties:
          type:
            description: Service type
            type: string
            enum:
            - ClusterIP
            - NodePort
            - ExternalIPs
            - HostPort
            - LoadBalancer
            - LocalRedirect
          trafficPolicy:
            description: Service traffic policy
            type: string
            enum:
            - Cluster
            - Local
          healthCheckNodePort:
            description: Service health check node port
            type: integer
            format: uint16
          name:
            description: Service name  (e.g. Kubernetes service name)
            type: string
          namespace:
            description: Service namespace  (e.g. Kubernetes namespace)
            type: string
  ServiceStatus:
    description: Configuration of a service
    type: object
    properties:
      realized:
        "$ref": "#/definitions/ServiceSpec"
  ProxyStatus:
    description: |-
      Status of proxy

      +k8s:deepcopy-gen=true
    type: object
    properties:
      port-range:
        description: Port range used for proxying
        type: string
      ip:
        description: IP address that the proxy listens on
        type: string
      total-redirects:
        description: Total number of ports configured to redirect to proxies
        type: integer
      total-ports:
        description: Total number of listening proxy ports
        type: integer
      redirects:
        description: Detailed description of configured redirects
        type: array
        items:
          "$ref": "#/definitions/ProxyRedirect"
  ProxyRedirect:
    description: Configured proxy redirection state
    type: object
    properties:
      name:
        description: Name of the proxy redirect
        type: string
      proxy:
        description: Name of the proxy this redirect points to
        type: string
      proxy-port:
        description: Host port that this redirect points to
        type: integer
  ProxyStatistics:
    description: |-
      Statistics of a set of proxy redirects for an endpoint

      +k8s:deepcopy-gen=true
    type: object
    properties:
      protocol:
        description: Name of the L7 protocol
        type: string
      port:
        description: The port subject to the redirect
        type: integer
      allocated-proxy-port:
        description: The port the proxy is listening on
        type: integer
      location:
        description: Location of where the redirect is installed
        type: string
        enum:
        - ingress
        - egress
      statistics:
        description: Statistics of this set of proxy redirect
        "$ref": "#/definitions/RequestResponseStatistics"
  RequestResponseStatistics:
    description: |-
      Statistics of a proxy redirect

      +k8s:deepcopy-gen=true
    type: object
    properties:
      requests:
        "$ref": "#/definitions/MessageForwardingStatistics"
      responses:
        "$ref": "#/definitions/MessageForwardingStatistics"
  MessageForwardingStatistics:
    description: Statistics of a message forwarding entity
    type: object
    properties:
      received:
        description: Number of messages received
        type: integer
      denied:
        description: Number of messages denied
        type: integer
      error:
        description: Number of errors while parsing messages
        type: integer
      forwarded:
        description: Number of messages forwarded
        type: integer
  BandwidthManager:
    description: |-
      Status of bandwidth manager

      +k8s:deepcopy-gen=true
    type: object
    properties:
      enabled:
        description: Is bandwidth manager enabled
        type: boolean
      devices:
        type: array
        items:
          type: string
  Masquerading:
    description: |-
      Status of masquerading

      +k8s:deepcopy-gen=true
    type: object
    properties:
      enabled:
        description: Is masquerading enabled
        type: object
        properties:
          ipv4:
            description: Is masquerading enabled for IPv4 traffic
            type: boolean
          ipv6:
            description: Is masquerading enabled for IPv6 traffic
            type: boolean
      mode:
        type: string
        enum:
        - BPF
        - iptables
      ip-masq-agent:
        description: Is BPF ip-masq-agent enabled
        type: boolean
      snat-exclusion-cidr-v4:
        description: |-
          SnatExclusionCIDRv4 exempts SNAT from being performed on any packet sent to
          an IPv4 address that belongs to this CIDR.
        type: string
      snat-exclusion-cidr-v6:
        description: |-
          SnatExclusionCIDRv6 exempts SNAT from being performed on any packet sent to
          an IPv6 address that belongs to this CIDR.
          For IPv6 we only do masquerading in iptables mode.
        type: string
  ClockSource:
    description: |-
      Status of BPF clock source

      +k8s:deepcopy-gen=true
    type: object
    properties:
      mode:
        description: Datapath clock source
        type: string
        enum:
        - ktime
        - jiffies
      hertz:
        description: Kernel Hz
        type: integer
  HostRouting:
    description: |-
      Status of host routing

      +k8s:deepcopy-gen=true
    type: object
    properties:
      mode:
        description: Datapath routing mode
        type: string
        enum:
        - BPF
        - Legacy
  ControllerStatuses:
    description: Collection of controller statuses
    type: array
    items:
      "$ref": "#/definitions/ControllerStatus"
  ControllerStatus:
    description: |-
      Status of a controller

      +k8s:deepcopy-gen=true
    type: object
    properties:
      name:
        description: Name of controller
        type: string
      uuid:
        description: UUID of controller
        type: string
        format: uuid
      configuration:
        description: |-
          Configuration of controller

          +deepequal-gen=true
          +k8s:deepcopy-gen=true
        type: object
        properties:
          interval:
            description: Regular synchronization interval
            type: string
            format: duration
          error-retry-base:
            description: Base error retry back-off time
            type: string
            format: duration
          error-retry:
            description: Retry on error
            type: boolean
      status:
        description: |-
          Current status of controller

          +k8s:deepcopy-gen=true
        type: object
        properties:
          success-count:
            description: Total number of successful runs
            type: integer
          last-success-timestamp:
            description: Timestamp of last success
            type: string
            format: date-time
          failure-count:
            description: Total number of failed runs
            type: integer
          last-failure-timestamp:
            description: Timestamp of last error
            type: string
            format: date-time
          consecutive-failure-count:
            description: Number of consecutive errors since last success
            type: integer
          last-failure-msg:
            description: Error message of last failed run
            type: string
  BPFMapList:
    description: List of BPF Maps
    type: object
    properties:
      maps:
        description: Array of open BPF map lists
        type: array
        items:
          "$ref": "#/definitions/BPFMap"
  BPFMap:
    description: BPF map definition and content
    type: object
    properties:
      path:
        description: Path to BPF map
        type: string
      cache:
        description: Contents of cache
        type: array
        items:
          "$ref": "#/definitions/BPFMapEntry"
  BPFMapEntry:
    description: BPF map cache entry
    type: object
    properties:
      key:
        description: Key of map entry
        type: string
      value:
        description: Value of map entry
        type: string
      desired-action:
        description: Desired action to be performed
        type: string
        enum:
        - ok
        - insert
        - delete
      last-error:
        description: Last error seen while performing desired action
        type: string
  BPFMapProperties:
    description: BPF map properties
    type: object
    properties:
      name:
        description: Name of the BPF map
        type: string
      size:
        description: Size of the BPF map
        type: integer
  BPFMapStatus:
    description: |
      BPF map status

      +k8s:deepcopy-gen=true
    type: object
    properties:
      dynamic-size-ratio:
        description: Ratio of total system memory to use for dynamic sizing of BPF maps
        type: number
      maps:
        description: BPF maps
        type: array
        items:
          "$ref": "#/definitions/BPFMapProperties"
  Metric:
    description: Metric information
    type: object
    properties:
      name:
        description: Name of the metric
        type: string
      value:
        description: Value of the metric
        type: number
      labels:
        description: Labels of the metric
        type: object
        additionalProperties:
          type: string
  Error:
    type: string
  NameManager:
    description: Internal state about DNS names in relation to policy subsystem
    type: object
    properties:
      DNSPollNames:
        description: Names to poll for DNS Poller
        type: array
        items:
          type: string
      FQDNPolicySelectors:
        description: Mapping of FQDNSelectors to corresponding regular expressions
        type: array
        items:
          "$ref": "#/definitions/SelectorEntry"
  SelectorEntry:
    description: Mapping of FQDNSelector to corresponding regular expression
    type: object
    properties:
      selectorString:
        description: FQDNSelector in string representation
        type: string
      regexString:
        description: String representation of regular expression form of FQDNSelector
        type: string
  DNSLookup:
    description: An IP -> DNS mapping, with metadata
    type: object
    properties:
      ips:
        description: IP addresses returned in this lookup
        type: array
        items:
          type: string
      fqdn:
        description: DNS name
        type: string
      ttl:
        description: The TTL in the DNS response
        type: integer
      lookup-time:
        description: The absolute time when this data was recieved
        type: string
        format: date-time
      expiration-time:
        description: The absolute time when this data will expire in this cache
        type: string
        format: date-time
      endpoint-id:
        description: The endpoint that made this lookup, or 0 for the agent itself.
        type: integer
      source:
        description: The reason this FQDN IP association exists. Either a DNS lookup or an ongoing connection to an IP that was created by a DNS lookup.
        type: string
  IPListEntry:
    description: IP entry with metadata
    type: object
    required:
      - cidr
      - identity
    properties:
      cidr:
        description: Key of the entry in the form of a CIDR range
        type: string
      identity:
        description: Numerical identity assigned to the IP
        type: integer
      hostIP:
        description: IP address of the host
        type: string
      encryptKey:
        description: The context ID for the encryption session
        type: integer
      metadata:
        "$ref": "#/definitions/IPListEntryMetadata"
  IPListEntryMetadata:
    description: Additional metadata assigned to an IP list entry
    type: object
    properties:
      source:
        description: Source of the IP entry and its metadata
        type: string
        example: k8s
      namespace:
        description: Namespace of the IP (e.g. Kubernetes namespace)
        type: string
      name:
        description: Name assigned to the IP (e.g. Kubernetes pod name)
        type: string
  NamedPorts:
    description: |-
      List of named Layer 4 port and protocol pairs which will be used in Network
      Policy specs.

      +deepequal-gen=true
    type: array
    items:
      "$ref": "#/definitions/Port"
