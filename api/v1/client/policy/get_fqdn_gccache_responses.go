// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/cilium/api/v1/models"
)

// GetFqdnGccacheReader is a Reader for the GetFqdnGccache structure.
type GetFqdnGccacheReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFqdnGccacheReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFqdnGccacheOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetFqdnGccacheFailure()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetFqdnGccacheUninitialized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFqdnGccacheOK creates a GetFqdnGccacheOK with default headers values
func NewGetFqdnGccacheOK() *GetFqdnGccacheOK {
	return &GetFqdnGccacheOK{}
}

/*
GetFqdnGccacheOK describes a response with status code 200, with default header values.

Success
*/
type GetFqdnGccacheOK struct {
	Payload []*models.FQDNGCCacheEntry
}

// IsSuccess returns true when this get fqdn gccache o k response has a 2xx status code
func (o *GetFqdnGccacheOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get fqdn gccache o k response has a 3xx status code
func (o *GetFqdnGccacheOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fqdn gccache o k response has a 4xx status code
func (o *GetFqdnGccacheOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fqdn gccache o k response has a 5xx status code
func (o *GetFqdnGccacheOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get fqdn gccache o k response a status code equal to that given
func (o *GetFqdnGccacheOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetFqdnGccacheOK) Error() string {
	return fmt.Sprintf("[GET /fqdn/gccache][%d] getFqdnGccacheOK  %+v", 200, o.Payload)
}

func (o *GetFqdnGccacheOK) String() string {
	return fmt.Sprintf("[GET /fqdn/gccache][%d] getFqdnGccacheOK  %+v", 200, o.Payload)
}

func (o *GetFqdnGccacheOK) GetPayload() []*models.FQDNGCCacheEntry {
	return o.Payload
}

func (o *GetFqdnGccacheOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFqdnGccacheFailure creates a GetFqdnGccacheFailure with default headers values
func NewGetFqdnGccacheFailure() *GetFqdnGccacheFailure {
	return &GetFqdnGccacheFailure{}
}

/*
GetFqdnGccacheFailure describes a response with status code 500, with default header values.

Retrieving FQDNGCCache failed
*/
type GetFqdnGccacheFailure struct {
	Payload models.Error
}

// IsSuccess returns true when this get fqdn gccache failure response has a 2xx status code
func (o *GetFqdnGccacheFailure) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fqdn gccache failure response has a 3xx status code
func (o *GetFqdnGccacheFailure) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fqdn gccache failure response has a 4xx status code
func (o *GetFqdnGccacheFailure) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fqdn gccache failure response has a 5xx status code
func (o *GetFqdnGccacheFailure) IsServerError() bool {
	return true
}

// IsCode returns true when this get fqdn gccache failure response a status code equal to that given
func (o *GetFqdnGccacheFailure) IsCode(code int) bool {
	return code == 500
}

func (o *GetFqdnGccacheFailure) Error() string {
	return fmt.Sprintf("[GET /fqdn/gccache][%d] getFqdnGccacheFailure  %+v", 500, o.Payload)
}

func (o *GetFqdnGccacheFailure) String() string {
	return fmt.Sprintf("[GET /fqdn/gccache][%d] getFqdnGccacheFailure  %+v", 500, o.Payload)
}

func (o *GetFqdnGccacheFailure) GetPayload() models.Error {
	return o.Payload
}

func (o *GetFqdnGccacheFailure) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFqdnGccacheUninitialized creates a GetFqdnGccacheUninitialized with default headers values
func NewGetFqdnGccacheUninitialized() *GetFqdnGccacheUninitialized {
	return &GetFqdnGccacheUninitialized{}
}

/*
GetFqdnGccacheUninitialized describes a response with status code 503, with default header values.

FQDNGCCache is not ready
*/
type GetFqdnGccacheUninitialized struct {
	Payload models.Error
}

// IsSuccess returns true when this get fqdn gccache uninitialized response has a 2xx status code
func (o *GetFqdnGccacheUninitialized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get fqdn gccache uninitialized response has a 3xx status code
func (o *GetFqdnGccacheUninitialized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get fqdn gccache uninitialized response has a 4xx status code
func (o *GetFqdnGccacheUninitialized) IsClientError() bool {
	return false
}

// IsServerError returns true when this get fqdn gccache uninitialized response has a 5xx status code
func (o *GetFqdnGccacheUninitialized) IsServerError() bool {
	return true
}

// IsCode returns true when this get fqdn gccache uninitialized response a status code equal to that given
func (o *GetFqdnGccacheUninitialized) IsCode(code int) bool {
	return code == 503
}

func (o *GetFqdnGccacheUninitialized) Error() string {
	return fmt.Sprintf("[GET /fqdn/gccache][%d] getFqdnGccacheUninitialized  %+v", 503, o.Payload)
}

func (o *GetFqdnGccacheUninitialized) String() string {
	return fmt.Sprintf("[GET /fqdn/gccache][%d] getFqdnGccacheUninitialized  %+v", 503, o.Payload)
}

func (o *GetFqdnGccacheUninitialized) GetPayload() models.Error {
	return o.Payload
}

func (o *GetFqdnGccacheUninitialized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
