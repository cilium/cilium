package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeletePolicyPathParams creates a new DeletePolicyPathParams object
// with the default values initialized.
func NewDeletePolicyPathParams() *DeletePolicyPathParams {
	var ()
	return &DeletePolicyPathParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeletePolicyPathParamsWithTimeout creates a new DeletePolicyPathParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeletePolicyPathParamsWithTimeout(timeout time.Duration) *DeletePolicyPathParams {
	var ()
	return &DeletePolicyPathParams{

		timeout: timeout,
	}
}

// NewDeletePolicyPathParamsWithContext creates a new DeletePolicyPathParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeletePolicyPathParamsWithContext(ctx context.Context) *DeletePolicyPathParams {
	var ()
	return &DeletePolicyPathParams{

		Context: ctx,
	}
}

// NewDeletePolicyPathParamsWithHTTPClient creates a new DeletePolicyPathParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeletePolicyPathParamsWithHTTPClient(client *http.Client) *DeletePolicyPathParams {
	var ()
	return &DeletePolicyPathParams{
		HTTPClient: client,
	}
}

/*DeletePolicyPathParams contains all the parameters to send to the API endpoint
for the delete policy path operation typically these are written to a http.Request
*/
type DeletePolicyPathParams struct {

	/*Path
	  Path to policy node

	*/
	Path string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete policy path params
func (o *DeletePolicyPathParams) WithTimeout(timeout time.Duration) *DeletePolicyPathParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete policy path params
func (o *DeletePolicyPathParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete policy path params
func (o *DeletePolicyPathParams) WithContext(ctx context.Context) *DeletePolicyPathParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete policy path params
func (o *DeletePolicyPathParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete policy path params
func (o *DeletePolicyPathParams) WithHTTPClient(client *http.Client) *DeletePolicyPathParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete policy path params
func (o *DeletePolicyPathParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPath adds the path to the delete policy path params
func (o *DeletePolicyPathParams) WithPath(path string) *DeletePolicyPathParams {
	o.SetPath(path)
	return o
}

// SetPath adds the path to the delete policy path params
func (o *DeletePolicyPathParams) SetPath(path string) {
	o.Path = path
}

// WriteToRequest writes these params to a swagger request
func (o *DeletePolicyPathParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param path
	if err := r.SetPathParam("path", o.Path); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
