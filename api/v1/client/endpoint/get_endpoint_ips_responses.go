// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/cilium/cilium/api/v1/models"
)

// GetEndpointIpsReader is a Reader for the GetEndpointIps structure.
type GetEndpointIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEndpointIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetEndpointIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetEndpointIpsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 520:
		result := NewGetEndpointIpsUnreachable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 521:
		result := NewGetEndpointIpsInvalidStorageFormat()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEndpointIpsOK creates a GetEndpointIpsOK with default headers values
func NewGetEndpointIpsOK() *GetEndpointIpsOK {
	return &GetEndpointIpsOK{}
}

/*GetEndpointIpsOK handles this case with default header values.

Success
*/
type GetEndpointIpsOK struct {
	Payload []*models.EndpointIPIdentityMapping
}

func (o *GetEndpointIpsOK) Error() string {
	return fmt.Sprintf("[GET /endpointIPs][%d] getEndpointIpsOK  %+v", 200, o.Payload)
}

func (o *GetEndpointIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEndpointIpsNotFound creates a GetEndpointIpsNotFound with default headers values
func NewGetEndpointIpsNotFound() *GetEndpointIpsNotFound {
	return &GetEndpointIpsNotFound{}
}

/*GetEndpointIpsNotFound handles this case with default header values.

No identities found
*/
type GetEndpointIpsNotFound struct {
}

func (o *GetEndpointIpsNotFound) Error() string {
	return fmt.Sprintf("[GET /endpointIPs][%d] getEndpointIpsNotFound ", 404)
}

func (o *GetEndpointIpsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEndpointIpsUnreachable creates a GetEndpointIpsUnreachable with default headers values
func NewGetEndpointIpsUnreachable() *GetEndpointIpsUnreachable {
	return &GetEndpointIpsUnreachable{}
}

/*GetEndpointIpsUnreachable handles this case with default header values.

Endpoint IP and identity mapping store not available. Likely a network problem.
*/
type GetEndpointIpsUnreachable struct {
	Payload models.Error
}

func (o *GetEndpointIpsUnreachable) Error() string {
	return fmt.Sprintf("[GET /endpointIPs][%d] getEndpointIpsUnreachable  %+v", 520, o.Payload)
}

func (o *GetEndpointIpsUnreachable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEndpointIpsInvalidStorageFormat creates a GetEndpointIpsInvalidStorageFormat with default headers values
func NewGetEndpointIpsInvalidStorageFormat() *GetEndpointIpsInvalidStorageFormat {
	return &GetEndpointIpsInvalidStorageFormat{}
}

/*GetEndpointIpsInvalidStorageFormat handles this case with default header values.

Invalid format of endpoint IP and identity mapping in storage
*/
type GetEndpointIpsInvalidStorageFormat struct {
	Payload models.Error
}

func (o *GetEndpointIpsInvalidStorageFormat) Error() string {
	return fmt.Sprintf("[GET /endpointIPs][%d] getEndpointIpsInvalidStorageFormat  %+v", 521, o.Payload)
}

func (o *GetEndpointIpsInvalidStorageFormat) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
