// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/cilium/cilium/api/v1/models"
)

// GetFqdnCacheOKCode is the HTTP code returned for type GetFqdnCacheOK
const GetFqdnCacheOKCode int = 200

/*GetFqdnCacheOK Success

swagger:response getFqdnCacheOK
*/
type GetFqdnCacheOK struct {

	/*
	  In: Body
	*/
	Payload []*models.DNSLookup `json:"body,omitempty"`
}

// NewGetFqdnCacheOK creates GetFqdnCacheOK with default headers values
func NewGetFqdnCacheOK() *GetFqdnCacheOK {

	return &GetFqdnCacheOK{}
}

// WithPayload adds the payload to the get fqdn cache o k response
func (o *GetFqdnCacheOK) WithPayload(payload []*models.DNSLookup) *GetFqdnCacheOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fqdn cache o k response
func (o *GetFqdnCacheOK) SetPayload(payload []*models.DNSLookup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFqdnCacheOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.DNSLookup, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFqdnCacheBadRequestCode is the HTTP code returned for type GetFqdnCacheBadRequest
const GetFqdnCacheBadRequestCode int = 400

/*GetFqdnCacheBadRequest Invalid request (error parsing parameters)

swagger:response getFqdnCacheBadRequest
*/
type GetFqdnCacheBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetFqdnCacheBadRequest creates GetFqdnCacheBadRequest with default headers values
func NewGetFqdnCacheBadRequest() *GetFqdnCacheBadRequest {

	return &GetFqdnCacheBadRequest{}
}

// WithPayload adds the payload to the get fqdn cache bad request response
func (o *GetFqdnCacheBadRequest) WithPayload(payload models.Error) *GetFqdnCacheBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fqdn cache bad request response
func (o *GetFqdnCacheBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFqdnCacheBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFqdnCacheNotFoundCode is the HTTP code returned for type GetFqdnCacheNotFound
const GetFqdnCacheNotFoundCode int = 404

/*GetFqdnCacheNotFound No DNS data with provided parameters found

swagger:response getFqdnCacheNotFound
*/
type GetFqdnCacheNotFound struct {
}

// NewGetFqdnCacheNotFound creates GetFqdnCacheNotFound with default headers values
func NewGetFqdnCacheNotFound() *GetFqdnCacheNotFound {

	return &GetFqdnCacheNotFound{}
}

// WriteResponse to the client
func (o *GetFqdnCacheNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
