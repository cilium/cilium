// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetFqdnGccacheHandlerFunc turns a function with the right signature into a get fqdn gccache handler
type GetFqdnGccacheHandlerFunc func(GetFqdnGccacheParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetFqdnGccacheHandlerFunc) Handle(params GetFqdnGccacheParams) middleware.Responder {
	return fn(params)
}

// GetFqdnGccacheHandler interface for that can handle valid get fqdn gccache params
type GetFqdnGccacheHandler interface {
	Handle(GetFqdnGccacheParams) middleware.Responder
}

// NewGetFqdnGccache creates a new http.Handler for the get fqdn gccache operation
func NewGetFqdnGccache(ctx *middleware.Context, handler GetFqdnGccacheHandler) *GetFqdnGccache {
	return &GetFqdnGccache{Context: ctx, Handler: handler}
}

/*
	GetFqdnGccache swagger:route GET /fqdn/gccache policy getFqdnGccache

Retrieves the list of DNS entries that have been garbage collected.

Retrieves the list of DNS entries stored in the garbage collection LRU cache.
*/
type GetFqdnGccache struct {
	Context *middleware.Context
	Handler GetFqdnGccacheHandler
}

func (o *GetFqdnGccache) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetFqdnGccacheParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
