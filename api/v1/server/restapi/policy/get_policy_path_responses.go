package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/cilium/api/v1/models"
)

// HTTP code for type GetPolicyPathOK
const GetPolicyPathOKCode int = 200

/*GetPolicyPathOK Success

swagger:response getPolicyPathOK
*/
type GetPolicyPathOK struct {

	/*
	  In: Body
	*/
	Payload models.PolicyTree `json:"body,omitempty"`
}

// NewGetPolicyPathOK creates GetPolicyPathOK with default headers values
func NewGetPolicyPathOK() *GetPolicyPathOK {
	return &GetPolicyPathOK{}
}

// WithPayload adds the payload to the get policy path o k response
func (o *GetPolicyPathOK) WithPayload(payload models.PolicyTree) *GetPolicyPathOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy path o k response
func (o *GetPolicyPathOK) SetPayload(payload models.PolicyTree) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyPathOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// HTTP code for type GetPolicyPathInvalid
const GetPolicyPathInvalidCode int = 400

/*GetPolicyPathInvalid Invalid policy path

swagger:response getPolicyPathInvalid
*/
type GetPolicyPathInvalid struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetPolicyPathInvalid creates GetPolicyPathInvalid with default headers values
func NewGetPolicyPathInvalid() *GetPolicyPathInvalid {
	return &GetPolicyPathInvalid{}
}

// WithPayload adds the payload to the get policy path invalid response
func (o *GetPolicyPathInvalid) WithPayload(payload models.Error) *GetPolicyPathInvalid {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy path invalid response
func (o *GetPolicyPathInvalid) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyPathInvalid) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// HTTP code for type GetPolicyPathNotFound
const GetPolicyPathNotFoundCode int = 404

/*GetPolicyPathNotFound Policy tree not found

swagger:response getPolicyPathNotFound
*/
type GetPolicyPathNotFound struct {
}

// NewGetPolicyPathNotFound creates GetPolicyPathNotFound with default headers values
func NewGetPolicyPathNotFound() *GetPolicyPathNotFound {
	return &GetPolicyPathNotFound{}
}

// WriteResponse to the client
func (o *GetPolicyPathNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}
