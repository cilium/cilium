// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/cilium/api/v1/models"
)

// GetFqdnGccacheOKCode is the HTTP code returned for type GetFqdnGccacheOK
const GetFqdnGccacheOKCode int = 200

/*
GetFqdnGccacheOK Success

swagger:response getFqdnGccacheOK
*/
type GetFqdnGccacheOK struct {

	/*
	  In: Body
	*/
	Payload []*models.FQDNGCCacheEntry `json:"body,omitempty"`
}

// NewGetFqdnGccacheOK creates GetFqdnGccacheOK with default headers values
func NewGetFqdnGccacheOK() *GetFqdnGccacheOK {

	return &GetFqdnGccacheOK{}
}

// WithPayload adds the payload to the get fqdn gccache o k response
func (o *GetFqdnGccacheOK) WithPayload(payload []*models.FQDNGCCacheEntry) *GetFqdnGccacheOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fqdn gccache o k response
func (o *GetFqdnGccacheOK) SetPayload(payload []*models.FQDNGCCacheEntry) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFqdnGccacheOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.FQDNGCCacheEntry, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFqdnGccacheFailureCode is the HTTP code returned for type GetFqdnGccacheFailure
const GetFqdnGccacheFailureCode int = 500

/*
GetFqdnGccacheFailure Retrieving FQDNGCCache failed

swagger:response getFqdnGccacheFailure
*/
type GetFqdnGccacheFailure struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetFqdnGccacheFailure creates GetFqdnGccacheFailure with default headers values
func NewGetFqdnGccacheFailure() *GetFqdnGccacheFailure {

	return &GetFqdnGccacheFailure{}
}

// WithPayload adds the payload to the get fqdn gccache failure response
func (o *GetFqdnGccacheFailure) WithPayload(payload models.Error) *GetFqdnGccacheFailure {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fqdn gccache failure response
func (o *GetFqdnGccacheFailure) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFqdnGccacheFailure) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFqdnGccacheUninitializedCode is the HTTP code returned for type GetFqdnGccacheUninitialized
const GetFqdnGccacheUninitializedCode int = 503

/*
GetFqdnGccacheUninitialized FQDNGCCache is not ready

swagger:response getFqdnGccacheUninitialized
*/
type GetFqdnGccacheUninitialized struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetFqdnGccacheUninitialized creates GetFqdnGccacheUninitialized with default headers values
func NewGetFqdnGccacheUninitialized() *GetFqdnGccacheUninitialized {

	return &GetFqdnGccacheUninitialized{}
}

// WithPayload adds the payload to the get fqdn gccache uninitialized response
func (o *GetFqdnGccacheUninitialized) WithPayload(payload models.Error) *GetFqdnGccacheUninitialized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fqdn gccache uninitialized response
func (o *GetFqdnGccacheUninitialized) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFqdnGccacheUninitialized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
