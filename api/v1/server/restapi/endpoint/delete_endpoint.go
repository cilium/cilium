// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteEndpointHandlerFunc turns a function with the right signature into a delete endpoint handler
type DeleteEndpointHandlerFunc func(DeleteEndpointParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteEndpointHandlerFunc) Handle(params DeleteEndpointParams) middleware.Responder {
	return fn(params)
}

// DeleteEndpointHandler interface for that can handle valid delete endpoint params
type DeleteEndpointHandler interface {
	Handle(DeleteEndpointParams) middleware.Responder
}

// NewDeleteEndpoint creates a new http.Handler for the delete endpoint operation
func NewDeleteEndpoint(ctx *middleware.Context, handler DeleteEndpointHandler) *DeleteEndpoint {
	return &DeleteEndpoint{Context: ctx, Handler: handler}
}

/*
	DeleteEndpoint swagger:route DELETE /endpoint endpoint deleteEndpoint

# Deletes a list of endpoints

Deletes a list of endpoints that have endpoints matching the provided properties
*/
type DeleteEndpoint struct {
	Context *middleware.Context
	Handler DeleteEndpointHandler
}

func (o *DeleteEndpoint) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteEndpointParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
