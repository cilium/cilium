// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/cilium/api/v1/models"
)

// GetEndpointIpsOKCode is the HTTP code returned for type GetEndpointIpsOK
const GetEndpointIpsOKCode int = 200

/*GetEndpointIpsOK Success

swagger:response getEndpointIpsOK
*/
type GetEndpointIpsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.EndpointIPIdentityMapping `json:"body,omitempty"`
}

// NewGetEndpointIpsOK creates GetEndpointIpsOK with default headers values
func NewGetEndpointIpsOK() *GetEndpointIpsOK {
	return &GetEndpointIpsOK{}
}

// WithPayload adds the payload to the get endpoint ips o k response
func (o *GetEndpointIpsOK) WithPayload(payload []*models.EndpointIPIdentityMapping) *GetEndpointIpsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint ips o k response
func (o *GetEndpointIpsOK) SetPayload(payload []*models.EndpointIPIdentityMapping) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointIpsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.EndpointIPIdentityMapping, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetEndpointIpsNotFoundCode is the HTTP code returned for type GetEndpointIpsNotFound
const GetEndpointIpsNotFoundCode int = 404

/*GetEndpointIpsNotFound No identities found

swagger:response getEndpointIpsNotFound
*/
type GetEndpointIpsNotFound struct {
}

// NewGetEndpointIpsNotFound creates GetEndpointIpsNotFound with default headers values
func NewGetEndpointIpsNotFound() *GetEndpointIpsNotFound {
	return &GetEndpointIpsNotFound{}
}

// WriteResponse to the client
func (o *GetEndpointIpsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

// GetEndpointIpsUnreachableCode is the HTTP code returned for type GetEndpointIpsUnreachable
const GetEndpointIpsUnreachableCode int = 520

/*GetEndpointIpsUnreachable Endpoint IP and identity mapping store not available. Likely a network problem.

swagger:response getEndpointIpsUnreachable
*/
type GetEndpointIpsUnreachable struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetEndpointIpsUnreachable creates GetEndpointIpsUnreachable with default headers values
func NewGetEndpointIpsUnreachable() *GetEndpointIpsUnreachable {
	return &GetEndpointIpsUnreachable{}
}

// WithPayload adds the payload to the get endpoint ips unreachable response
func (o *GetEndpointIpsUnreachable) WithPayload(payload models.Error) *GetEndpointIpsUnreachable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint ips unreachable response
func (o *GetEndpointIpsUnreachable) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointIpsUnreachable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(520)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetEndpointIpsInvalidStorageFormatCode is the HTTP code returned for type GetEndpointIpsInvalidStorageFormat
const GetEndpointIpsInvalidStorageFormatCode int = 521

/*GetEndpointIpsInvalidStorageFormat Invalid format of endpoint IP and identity mapping in storage

swagger:response getEndpointIpsInvalidStorageFormat
*/
type GetEndpointIpsInvalidStorageFormat struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetEndpointIpsInvalidStorageFormat creates GetEndpointIpsInvalidStorageFormat with default headers values
func NewGetEndpointIpsInvalidStorageFormat() *GetEndpointIpsInvalidStorageFormat {
	return &GetEndpointIpsInvalidStorageFormat{}
}

// WithPayload adds the payload to the get endpoint ips invalid storage format response
func (o *GetEndpointIpsInvalidStorageFormat) WithPayload(payload models.Error) *GetEndpointIpsInvalidStorageFormat {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint ips invalid storage format response
func (o *GetEndpointIpsInvalidStorageFormat) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointIpsInvalidStorageFormat) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(521)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
