package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/cilium/api/v1/models"
)

// HTTP code for type PutEndpointIDCreated
const PutEndpointIDCreatedCode int = 201

/*PutEndpointIDCreated Created

swagger:response putEndpointIdCreated
*/
type PutEndpointIDCreated struct {
}

// NewPutEndpointIDCreated creates PutEndpointIDCreated with default headers values
func NewPutEndpointIDCreated() *PutEndpointIDCreated {
	return &PutEndpointIDCreated{}
}

// WriteResponse to the client
func (o *PutEndpointIDCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
}

// HTTP code for type PutEndpointIDInvalid
const PutEndpointIDInvalidCode int = 400

/*PutEndpointIDInvalid Invalid endpoint in request

swagger:response putEndpointIdInvalid
*/
type PutEndpointIDInvalid struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutEndpointIDInvalid creates PutEndpointIDInvalid with default headers values
func NewPutEndpointIDInvalid() *PutEndpointIDInvalid {
	return &PutEndpointIDInvalid{}
}

// WithPayload adds the payload to the put endpoint Id invalid response
func (o *PutEndpointIDInvalid) WithPayload(payload models.Error) *PutEndpointIDInvalid {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put endpoint Id invalid response
func (o *PutEndpointIDInvalid) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEndpointIDInvalid) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// HTTP code for type PutEndpointIDExists
const PutEndpointIDExistsCode int = 409

/*PutEndpointIDExists Endpoint already exists

swagger:response putEndpointIdExists
*/
type PutEndpointIDExists struct {
}

// NewPutEndpointIDExists creates PutEndpointIDExists with default headers values
func NewPutEndpointIDExists() *PutEndpointIDExists {
	return &PutEndpointIDExists{}
}

// WriteResponse to the client
func (o *PutEndpointIDExists) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
}

// HTTP code for type PutEndpointIDFailed
const PutEndpointIDFailedCode int = 500

/*PutEndpointIDFailed Endpoint creation failed

swagger:response putEndpointIdFailed
*/
type PutEndpointIDFailed struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutEndpointIDFailed creates PutEndpointIDFailed with default headers values
func NewPutEndpointIDFailed() *PutEndpointIDFailed {
	return &PutEndpointIDFailed{}
}

// WithPayload adds the payload to the put endpoint Id failed response
func (o *PutEndpointIDFailed) WithPayload(payload models.Error) *PutEndpointIDFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put endpoint Id failed response
func (o *PutEndpointIDFailed) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEndpointIDFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
