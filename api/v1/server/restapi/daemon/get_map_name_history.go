// Code generated by go-swagger; DO NOT EDIT.

package daemon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetMapNameHistoryHandlerFunc turns a function with the right signature into a get map name history handler
type GetMapNameHistoryHandlerFunc func(GetMapNameHistoryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMapNameHistoryHandlerFunc) Handle(params GetMapNameHistoryParams) middleware.Responder {
	return fn(params)
}

// GetMapNameHistoryHandler interface for that can handle valid get map name history params
type GetMapNameHistoryHandler interface {
	Handle(GetMapNameHistoryParams) middleware.Responder
}

// NewGetMapNameHistory creates a new http.Handler for the get map name history operation
func NewGetMapNameHistory(ctx *middleware.Context, handler GetMapNameHistoryHandler) *GetMapNameHistory {
	return &GetMapNameHistory{Context: ctx, Handler: handler}
}

/*GetMapNameHistory swagger:route GET /map/{name}/history daemon getMapNameHistory

Retrieve operations history of BPF map

*/
type GetMapNameHistory struct {
	Context *middleware.Context
	Handler GetMapNameHistoryHandler
}

func (o *GetMapNameHistory) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetMapNameHistoryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
