// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package daemon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetNodeIdsHandlerFunc turns a function with the right signature into a get node ids handler
type GetNodeIdsHandlerFunc func(GetNodeIdsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNodeIdsHandlerFunc) Handle(params GetNodeIdsParams) middleware.Responder {
	return fn(params)
}

// GetNodeIdsHandler interface for that can handle valid get node ids params
type GetNodeIdsHandler interface {
	Handle(GetNodeIdsParams) middleware.Responder
}

// NewGetNodeIds creates a new http.Handler for the get node ids operation
func NewGetNodeIds(ctx *middleware.Context, handler GetNodeIdsHandler) *GetNodeIds {
	return &GetNodeIds{Context: ctx, Handler: handler}
}

/*
	GetNodeIds swagger:route GET /node/ids daemon getNodeIds

# List information about known node IDs

Retrieves a list of node IDs allocated by the agent and their
associated node IP addresses.
*/
type GetNodeIds struct {
	Context *middleware.Context
	Handler GetNodeIdsHandler
}

func (o *GetNodeIds) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetNodeIdsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
