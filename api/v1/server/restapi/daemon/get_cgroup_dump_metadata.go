// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package daemon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetCgroupDumpMetadataHandlerFunc turns a function with the right signature into a get cgroup dump metadata handler
type GetCgroupDumpMetadataHandlerFunc func(GetCgroupDumpMetadataParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCgroupDumpMetadataHandlerFunc) Handle(params GetCgroupDumpMetadataParams) middleware.Responder {
	return fn(params)
}

// GetCgroupDumpMetadataHandler interface for that can handle valid get cgroup dump metadata params
type GetCgroupDumpMetadataHandler interface {
	Handle(GetCgroupDumpMetadataParams) middleware.Responder
}

// NewGetCgroupDumpMetadata creates a new http.Handler for the get cgroup dump metadata operation
func NewGetCgroupDumpMetadata(ctx *middleware.Context, handler GetCgroupDumpMetadataHandler) *GetCgroupDumpMetadata {
	return &GetCgroupDumpMetadata{Context: ctx, Handler: handler}
}

/*
	GetCgroupDumpMetadata swagger:route GET /cgroup-dump-metadata daemon getCgroupDumpMetadata

Retrieve cgroup metadata for all pods
*/
type GetCgroupDumpMetadata struct {
	Context *middleware.Context
	Handler GetCgroupDumpMetadataHandler
}

func (o *GetCgroupDumpMetadata) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetCgroupDumpMetadataParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
