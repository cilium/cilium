// Code generated by go-swagger; DO NOT EDIT.

package prefilter

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cilium/cilium/api/v1/models"
)

// PutPrefilterOKCode is the HTTP code returned for type PutPrefilterOK
const PutPrefilterOKCode int = 200

/*PutPrefilterOK Updated

swagger:response putPrefilterOK
*/
type PutPrefilterOK struct {
}

// NewPutPrefilterOK creates PutPrefilterOK with default headers values
func NewPutPrefilterOK() *PutPrefilterOK {
	return &PutPrefilterOK{}
}

// WriteResponse to the client
func (o *PutPrefilterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
}

// PutPrefilterInvalidCIDRCode is the HTTP code returned for type PutPrefilterInvalidCIDR
const PutPrefilterInvalidCIDRCode int = 461

/*PutPrefilterInvalidCIDR Invalid CIDR prefix

swagger:response putPrefilterInvalidCIdR
*/
type PutPrefilterInvalidCIDR struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutPrefilterInvalidCIDR creates PutPrefilterInvalidCIDR with default headers values
func NewPutPrefilterInvalidCIDR() *PutPrefilterInvalidCIDR {
	return &PutPrefilterInvalidCIDR{}
}

// WithPayload adds the payload to the put prefilter invalid c Id r response
func (o *PutPrefilterInvalidCIDR) WithPayload(payload models.Error) *PutPrefilterInvalidCIDR {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put prefilter invalid c Id r response
func (o *PutPrefilterInvalidCIDR) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPrefilterInvalidCIDR) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(461)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PutPrefilterFailureCode is the HTTP code returned for type PutPrefilterFailure
const PutPrefilterFailureCode int = 500

/*PutPrefilterFailure CIDR update failed

swagger:response putPrefilterFailure
*/
type PutPrefilterFailure struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutPrefilterFailure creates PutPrefilterFailure with default headers values
func NewPutPrefilterFailure() *PutPrefilterFailure {
	return &PutPrefilterFailure{}
}

// WithPayload adds the payload to the put prefilter failure response
func (o *PutPrefilterFailure) WithPayload(payload models.Error) *PutPrefilterFailure {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put prefilter failure response
func (o *PutPrefilterFailure) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutPrefilterFailure) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
