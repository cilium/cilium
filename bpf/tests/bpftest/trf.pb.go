// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: trf.proto

package bpftests

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SuiteResult_TestResult_TestStatus int32

const (
	SuiteResult_TestResult_UNKNOWN SuiteResult_TestResult_TestStatus = 0
	// Unable to execute test, not indicative of the test itself, usually an unexpected error in the framework
	// like out of memory conditions.
	SuiteResult_TestResult_ERROR SuiteResult_TestResult_TestStatus = 100
	SuiteResult_TestResult_PASS  SuiteResult_TestResult_TestStatus = 101
	SuiteResult_TestResult_FAIL  SuiteResult_TestResult_TestStatus = 102
	// The test was skipped, for example because the feature under test is disabled or unavailable with the
	// current settings or on this platform.
	SuiteResult_TestResult_SKIP SuiteResult_TestResult_TestStatus = 103
)

// Enum value maps for SuiteResult_TestResult_TestStatus.
var (
	SuiteResult_TestResult_TestStatus_name = map[int32]string{
		0:   "UNKNOWN",
		100: "ERROR",
		101: "PASS",
		102: "FAIL",
		103: "SKIP",
	}
	SuiteResult_TestResult_TestStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"ERROR":   100,
		"PASS":    101,
		"FAIL":    102,
		"SKIP":    103,
	}
)

func (x SuiteResult_TestResult_TestStatus) Enum() *SuiteResult_TestResult_TestStatus {
	p := new(SuiteResult_TestResult_TestStatus)
	*p = x
	return p
}

func (x SuiteResult_TestResult_TestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SuiteResult_TestResult_TestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trf_proto_enumTypes[0].Descriptor()
}

func (SuiteResult_TestResult_TestStatus) Type() protoreflect.EnumType {
	return &file_trf_proto_enumTypes[0]
}

func (x SuiteResult_TestResult_TestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SuiteResult_TestResult_TestStatus.Descriptor instead.
func (SuiteResult_TestResult_TestStatus) EnumDescriptor() ([]byte, []int) {
	return file_trf_proto_rawDescGZIP(), []int{0, 0, 0}
}

// TRF (Test Result Format)
type SuiteResult struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Results       []*SuiteResult_TestResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	SuiteLog      []*Log                    `protobuf:"bytes,2,rep,name=suite_log,json=suiteLog,proto3" json:"suite_log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuiteResult) Reset() {
	*x = SuiteResult{}
	mi := &file_trf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuiteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiteResult) ProtoMessage() {}

func (x *SuiteResult) ProtoReflect() protoreflect.Message {
	mi := &file_trf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiteResult.ProtoReflect.Descriptor instead.
func (*SuiteResult) Descriptor() ([]byte, []int) {
	return file_trf_proto_rawDescGZIP(), []int{0}
}

func (x *SuiteResult) GetResults() []*SuiteResult_TestResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SuiteResult) GetSuiteLog() []*Log {
	if x != nil {
		return x.SuiteLog
	}
	return nil
}

// bpf_trace_printk style logging
type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fmt           string                 `protobuf:"bytes,1,opt,name=fmt,proto3" json:"fmt,omitempty"`
	Args          []uint64               `protobuf:"fixed64,2,rep,packed,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_trf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_trf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_trf_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetFmt() string {
	if x != nil {
		return x.Fmt
	}
	return ""
}

func (x *Log) GetArgs() []uint64 {
	if x != nil {
		return x.Args
	}
	return nil
}

type SuiteResult_TestResult struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Name          string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        SuiteResult_TestResult_TestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=SuiteResult_TestResult_TestStatus" json:"status,omitempty"`
	TestLog       []*Log                            `protobuf:"bytes,3,rep,name=test_log,json=testLog,proto3" json:"test_log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuiteResult_TestResult) Reset() {
	*x = SuiteResult_TestResult{}
	mi := &file_trf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuiteResult_TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiteResult_TestResult) ProtoMessage() {}

func (x *SuiteResult_TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_trf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiteResult_TestResult.ProtoReflect.Descriptor instead.
func (*SuiteResult_TestResult) Descriptor() ([]byte, []int) {
	return file_trf_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SuiteResult_TestResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SuiteResult_TestResult) GetStatus() SuiteResult_TestResult_TestStatus {
	if x != nil {
		return x.Status
	}
	return SuiteResult_TestResult_UNKNOWN
}

func (x *SuiteResult_TestResult) GetTestLog() []*Log {
	if x != nil {
		return x.TestLog
	}
	return nil
}

var File_trf_proto protoreflect.FileDescriptor

const file_trf_proto_rawDesc = "" +
	"\n" +
	"\ttrf.proto\"\xa7\x02\n" +
	"\vSuiteResult\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.SuiteResult.TestResultR\aresults\x12!\n" +
	"\tsuite_log\x18\x02 \x03(\v2\x04.LogR\bsuiteLog\x1a\xc1\x01\n" +
	"\n" +
	"TestResult\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12:\n" +
	"\x06status\x18\x02 \x01(\x0e2\".SuiteResult.TestResult.TestStatusR\x06status\x12\x1f\n" +
	"\btest_log\x18\x03 \x03(\v2\x04.LogR\atestLog\"B\n" +
	"\n" +
	"TestStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05ERROR\x10d\x12\b\n" +
	"\x04PASS\x10e\x12\b\n" +
	"\x04FAIL\x10f\x12\b\n" +
	"\x04SKIP\x10g\"+\n" +
	"\x03Log\x12\x10\n" +
	"\x03fmt\x18\x01 \x01(\tR\x03fmt\x12\x12\n" +
	"\x04args\x18\x02 \x03(\x06R\x04argsB\fZ\n" +
	".;bpftestsb\x06proto3"

var (
	file_trf_proto_rawDescOnce sync.Once
	file_trf_proto_rawDescData []byte
)

func file_trf_proto_rawDescGZIP() []byte {
	file_trf_proto_rawDescOnce.Do(func() {
		file_trf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trf_proto_rawDesc), len(file_trf_proto_rawDesc)))
	})
	return file_trf_proto_rawDescData
}

var file_trf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trf_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_trf_proto_goTypes = []any{
	(SuiteResult_TestResult_TestStatus)(0), // 0: SuiteResult.TestResult.TestStatus
	(*SuiteResult)(nil),                    // 1: SuiteResult
	(*Log)(nil),                            // 2: Log
	(*SuiteResult_TestResult)(nil),         // 3: SuiteResult.TestResult
}
var file_trf_proto_depIdxs = []int32{
	3, // 0: SuiteResult.results:type_name -> SuiteResult.TestResult
	2, // 1: SuiteResult.suite_log:type_name -> Log
	0, // 2: SuiteResult.TestResult.status:type_name -> SuiteResult.TestResult.TestStatus
	2, // 3: SuiteResult.TestResult.test_log:type_name -> Log
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_trf_proto_init() }
func file_trf_proto_init() {
	if File_trf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trf_proto_rawDesc), len(file_trf_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trf_proto_goTypes,
		DependencyIndexes: file_trf_proto_depIdxs,
		EnumInfos:         file_trf_proto_enumTypes,
		MessageInfos:      file_trf_proto_msgTypes,
	}.Build()
	File_trf_proto = out.File
	file_trf_proto_goTypes = nil
	file_trf_proto_depIdxs = nil
}
