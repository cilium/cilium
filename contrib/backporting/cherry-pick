#!/bin/bash
set -e

source $(dirname $(readlink -ne $BASH_SOURCE))/common.sh

require_linux

cleanup () {
  if [ -n "$TMPF" ]; then
    rm $TMPF
  fi
}

trap cleanup EXIT

cherry_pick () {
  CID=$1
  BRANCHES=`git branch -q -r --contains $CID $REM/master 2> /dev/null`
  if ! echo ${BRANCHES} | grep -q ".*$REM/master.*"; then
    echo "Commit $CID not in $REM/master!"
    exit 1
  fi
  TMPF=`mktemp cp.XXXXXX`
  FROM=`git show --pretty=email $CID | head -n 2 | grep "From: "`
  FULL_ID=`git show $CID | head -n 1 | cut -f 2 -d ' '`
  git format-patch -1 $FULL_ID --stdout | sed '/^$/Q' > $TMPF
  echo "" >> $TMPF
  echo "[ upstream commit $FULL_ID ]" >> $TMPF
  git format-patch -1 $FULL_ID --stdout | sed -n '/^$/,$p' >> $TMPF
  echo "Applying: $(git log -1 --oneline $FULL_ID)"
  git am --quiet -3 --signoff $TMPF
}

main () {
  REM="$(get_remote)"
  for CID in "$@"; do
    cherry_pick "$CID"
  done
}

if [ $# -lt 1 ]; then
  echo "Usage: $0 <commit-id> [commit-id ...]"
  exit 1
fi

main "$@"
