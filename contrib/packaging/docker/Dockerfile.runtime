#
# Cilium runtime base image
#
FROM docker.io/library/ubuntu:18.04 as runtime-base
RUN apt-get update && \
apt-get upgrade -y && \
#
# Prepackaged Cilium runtime dependencies
#
apt-get install -y --no-install-recommends \
    gpg gpg-agent libelf-dev libmnl-dev libc6-dev-i386 iptables libgcc-5-dev \
    bash-completion binutils binutils-dev ca-certificates clang-7 llvm-7 kmod && \
apt-get purge --auto-remove && \
apt-get clean && \
#
# clang-7
#
rm -fr /usr/lib/llvm-7/include/llvm-c && \
rm -fr /usr/lib/llvm-7/include/clang-c && \
rm -fr /usr/lib/llvm-7/include/c++ && \
rm -fr /usr/lib/llvm-7/include/polly && \
rm -fr /usr/lib/llvm-7/share && \
ls -d /usr/lib/llvm-7/lib/* | grep -vE clang$ | xargs rm -r && \
ls -d /usr/lib/llvm-7/bin/* | grep -vE "clang$|clang-7$|llc$" | xargs basename -a | awk '{ print "/usr/bin/"$1"-7" }' | xargs rm -r && \
ls -d /usr/lib/llvm-7/bin/* | grep -vE "clang$|clang-7$|llc$" | xargs rm -r && \
strip /usr/lib/llvm-7/bin/* && \
update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-7/bin/clang 1000 && \
update-alternatives --install /usr/bin/llc llc /usr/lib/llvm-7/bin/llc 1000

#
# Build Cilium runtime dependencies.
#
FROM runtime-base as runtime-build
WORKDIR /tmp
RUN \
#
# Build dependencies
#
apt-get install -y --no-install-recommends make git curl ca-certificates xz-utils \
# Additional iproute2 build dependencies
  gcc git pkg-config bison flex build-essential && \
#
# iproute2
#
git clone --depth 1 -b static-data https://github.com/cilium/iproute2.git iproute2 && \
cd iproute2 && \
./configure && \
make -j `getconf _NPROCESSORS_ONLN` && \
strip tc/tc && \
strip ip/ip && \
cd .. && \
#
# bpftool
#
git clone --depth 1 -b master git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git && \
cd linux/tools/bpf/bpftool/ && \
make -j `getconf _NPROCESSORS_ONLN` && \
strip bpftool && \
cd ../../../../ && \
#
# bpf-map
#
curl -SsL https://github.com/cilium/bpf-map/releases/download/v1.0/bpf-map -o bpf-map && \
chmod +x bpf-map && \
strip bpf-map && \
#
# cni/loopback
#
curl -sS -L https://github.com/containernetworking/plugins/releases/download/v0.7.5/cni-plugins-amd64-v0.7.5.tgz -o cni.tar.gz && \
tar -xvf cni.tar.gz ./loopback && \
strip -s ./loopback && \
#
# Cleanup
#
apt-get purge --auto-remove -y gpg gpg-agent gcc make bison flex git curl xz-utils ca-certificates && \
apt-get clean

#
# Go-based tools we need at runtime
#
FROM docker.io/library/golang:1.13.0 as runtime-gobuild
WORKDIR /tmp
RUN go get -d github.com/google/gops && \
cd /go/src/github.com/google/gops && \
git checkout -b v0.3.6 v0.3.6 && \
go install && \
strip /go/bin/gops

#
# Stripped cilium runtime base image
#
FROM runtime-base
LABEL maintainer="maintainer@cilium.io"
WORKDIR /bin
COPY --from=runtime-build /tmp/iproute2/tc/tc /tmp/iproute2/ip/ip ./
COPY --from=runtime-build /tmp/linux/tools/bpf/bpftool/bpftool ./
COPY --from=runtime-build /tmp/bpf-map ./
COPY --from=runtime-gobuild /go/bin/gops ./
WORKDIR /cni
COPY --from=runtime-build /tmp/loopback ./
