# Test handling of CiliumEnvoyConfig

# Add a node address for NodePort services
db/insert node-addresses addrv4.yaml

# Start the hive and wait for tables to be synchronized before adding k8s objects.
hive start
db/initialized

# Start with clean state.
db/cmp services services_empty.table
db/cmp ciliumenvoyconfigs cec_empty.table

# Set up the services and endpoints
k8s/add service.yaml
db/cmp services services.table
k8s/add endpointslice.yaml
db/cmp backends backends.table

# Add the CiliumEnvoyConfig and wait for it to be ingested.
k8s/add cec.yaml
db/cmp ciliumenvoyconfigs cec.table

# Check that both services are now redirected to proxy.
db/cmp services services_redirected.table
db/cmp frontends frontends.table

# Check BPF maps. The service should have L7 redirect set.
lb/maps-dump lbmaps.out
* cmp lbmaps.out lbmaps.expected

# Check that right updates towards Envoy happened.
envoy envoy.out
* cmp envoy.out envoy1.expected

# Test the processing other way around, e.g. CEC exists before
# the service. Start by dropping the backends.
k8s/delete endpointslice.yaml

# Backends towards Envoy should be dropped.
envoy envoy.out
* cmp envoy.out envoy2.expected

# Drop the service
k8s/delete service.yaml
db/cmp services services_empty.table

# Add back the service and endpoints
k8s/add service.yaml endpointslice.yaml
db/cmp services services_redirected.table

# Check again that updates happened.
envoy envoy.out
* cmp envoy.out envoy3.expected

# Change the service name in the CEC and check that
# proxy redirect gets removed.
cp cec.yaml cec2.yaml
replace 'name: echo' 'name: echo2' cec2.yaml
k8s/update cec2.yaml
db/cmp services services.table

# Revert and then check that deleting the CEC results in
# proxy redirect and listeners being removed.
k8s/update cec.yaml
db/cmp services services_redirected.table
k8s/delete cec.yaml
db/cmp services services.table
db/cmp ciliumenvoyconfigs cec_empty.table

# The listener should now be deleted.
envoy envoy.out
* cmp envoy.out envoy4.expected

# ---------------------------------------------

-- addrv4.yaml --
addr: 1.1.1.1
nodeport: true
primary: true
devicename: test

-- services_empty.table --
Name        ProxyRedirect

-- services.table --
Name        ProxyRedirect
test/echo   

-- services_redirected.table --
Name        ProxyRedirect
test/echo   1000 (ports: [80])

-- backends.table --
Address
10.244.1.1:25/TCP
10.244.1.1:8080/TCP

-- frontends.table --
Address               Type        ServiceName   PortName   Status  Backends
0.0.0.0:30725/TCP     NodePort    test/echo     smtp       Done    10.244.1.1:25/TCP
0.0.0.0:30781/TCP     NodePort    test/echo     http       Done    10.244.1.1:8080/TCP
10.96.50.104:25/TCP   ClusterIP   test/echo     smtp       Done    10.244.1.1:25/TCP
10.96.50.104:80/TCP   ClusterIP   test/echo     http       Done    10.244.1.1:8080/TCP

-- cec_empty.table --
Name    Services

-- cec.table --
Name                    Services
test/envoy-lb-listener  test/echo

-- cec.yaml --
apiVersion: cilium.io/v2
kind: CiliumEnvoyConfig
metadata:
  name: envoy-lb-listener
  namespace: test
spec:
  services:
    - name: echo
      namespace: test
      listener: envoy-lb-listener
      ports:
      - 80
  resources:
    - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
      name: envoy-lb-listener

-- service.yaml --
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: test
  uid: a49fe99c-3564-4754-acc4-780f2331a49b
spec:
  clusterIP: 10.96.50.104
  clusterIPs:
  - 10.96.50.104
  ports:
  - name: http
    nodePort: 30781
    port: 80
    protocol: TCP
    targetPort: 80
  - name: smtp
    nodePort: 30725
    port: 25
    protocol: TCP
    targetPort: 25
  selector:
    name: echo
  type: NodePort
status:
  loadBalancer: {}

-- endpointslice.yaml --
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  labels:
    kubernetes.io/service-name: echo
  name: echo-eps1
  namespace: test
  uid: d1f517f6-ab88-4c76-9bd0-4906a17cdd75
addressType: IPv4
endpoints:
- addresses:
  - 10.244.1.1
  conditions:
    ready: true
    serving: true
    terminating: false
  nodeName: nodeport-worker
ports:
- name: http
  port: 8080
  protocol: TCP
- name: smtp
  port: 25
  protocol: TCP

-- lbmaps.expected --
BE: ID=1 ADDR=10.244.1.1:25/TCP STATE=active
BE: ID=2 ADDR=10.244.1.1:8080/TCP STATE=active
REV: ID=1 ADDR=0.0.0.0:30725
REV: ID=2 ADDR=1.1.1.1:30725
REV: ID=3 ADDR=0.0.0.0:30781
REV: ID=4 ADDR=1.1.1.1:30781
REV: ID=5 ADDR=10.96.50.104:25
REV: ID=6 ADDR=10.96.50.104:80
SVC: ID=1 ADDR=0.0.0.0:30725/TCP SLOT=0 LBALG=undef AFFTimeout=0 COUNT=1 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=1 ADDR=0.0.0.0:30725/TCP SLOT=1 BEID=1 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=2 ADDR=1.1.1.1:30725/TCP SLOT=0 LBALG=undef AFFTimeout=0 COUNT=1 QCOUNT=0 FLAGS=NodePort
SVC: ID=2 ADDR=1.1.1.1:30725/TCP SLOT=1 BEID=1 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=3 ADDR=0.0.0.0:30781/TCP SLOT=0 L7Proxy=1000 COUNT=1 QCOUNT=0 FLAGS=NodePort+non-routable+l7-load-balancer
SVC: ID=3 ADDR=0.0.0.0:30781/TCP SLOT=1 BEID=2 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable+l7-load-balancer
SVC: ID=4 ADDR=1.1.1.1:30781/TCP SLOT=0 L7Proxy=1000 COUNT=1 QCOUNT=0 FLAGS=NodePort+l7-load-balancer
SVC: ID=4 ADDR=1.1.1.1:30781/TCP SLOT=1 BEID=2 COUNT=0 QCOUNT=0 FLAGS=NodePort+l7-load-balancer
SVC: ID=5 ADDR=10.96.50.104:25/TCP SLOT=0 LBALG=undef AFFTimeout=0 COUNT=1 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=5 ADDR=10.96.50.104:25/TCP SLOT=1 BEID=1 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=6 ADDR=10.96.50.104:80/TCP SLOT=0 L7Proxy=1000 COUNT=1 QCOUNT=0 FLAGS=ClusterIP+non-routable+l7-load-balancer
SVC: ID=6 ADDR=10.96.50.104:80/TCP SLOT=1 BEID=2 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable+l7-load-balancer
-- envoy1.expected --
policy-trigger-count: 1
update: listeners=test/envoy-lb-listener/envoy-lb-listener/1000 endpoints=test/echo:80=10.244.1.1:8080
delete: listeners=<nil> endpoints=<nil>
-- envoy2.expected --
policy-trigger-count: 1
update: listeners=test/envoy-lb-listener/envoy-lb-listener/1000 endpoints=test/echo:80=10.244.1.1:8080
delete: listeners=<nil> endpoints=<nil>
-- envoy3.expected --
policy-trigger-count: 1
update: listeners=test/envoy-lb-listener/envoy-lb-listener/1000 endpoints=test/echo:80=10.244.1.1:8080
delete: listeners=<nil> endpoints=<nil>
-- envoy4.expected --
policy-trigger-count: 2
update: listeners=test/envoy-lb-listener/envoy-lb-listener/1000 endpoints=test/echo:80=10.244.1.1:8080
delete: listeners=test/envoy-lb-listener/envoy-lb-listener/1000 endpoints=test/echo:80=10.244.1.1:8080
