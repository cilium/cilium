// +build !ignore_autogenerated

// Copyright 2017-2018 Authors of Cilium
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package labels

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Label) DeepCopyInto(out *Label) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Label.
func (in *Label) DeepCopy() *Label {
	if in == nil {
		return nil
	}
	out := new(Label)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in LabelArray) DeepCopyInto(out *LabelArray) {
	{
		in := &in
		*out = in.DeepCopy()
		return
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in LabelArrayList) DeepCopyInto(out *LabelArrayList) {
	{
		in := &in
		*out = in.DeepCopy()
		return
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Labels) DeepCopyInto(out *Labels) {
	{
		in := &in
		*out = in.DeepCopy()
		return
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpLabels) DeepCopyInto(out *OpLabels) {
	*out = *in
	out.Custom = in.Custom.DeepCopy()
	out.OrchestrationIdentity = in.OrchestrationIdentity.DeepCopy()
	out.Disabled = in.Disabled.DeepCopy()
	out.OrchestrationInfo = in.OrchestrationInfo.DeepCopy()
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpLabels.
func (in *OpLabels) DeepCopy() *OpLabels {
	if in == nil {
		return nil
	}
	out := new(OpLabels)
	in.DeepCopyInto(out)
	return out
}
