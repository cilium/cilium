// +build !ignore_autogenerated

// Copyright 2017 Authors of Cilium
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package labels

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	reflect "reflect"
)

// GetGeneratedDeepCopyFuncs returns the generated funcs, since we aren't registering them.
//
// Deprecated: deepcopy registration will go away when static deepcopy is fully implemented.
func GetGeneratedDeepCopyFuncs() []conversion.GeneratedDeepCopyFunc {
	return []conversion.GeneratedDeepCopyFunc{
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*Label).DeepCopyInto(out.(*Label))
			return nil
		}, InType: reflect.TypeOf(&Label{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*OpLabels).DeepCopyInto(out.(*OpLabels))
			return nil
		}, InType: reflect.TypeOf(&OpLabels{})},
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Label) DeepCopyInto(out *Label) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Label.
func (in *Label) DeepCopy() *Label {
	if in == nil {
		return nil
	}
	out := new(Label)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpLabels) DeepCopyInto(out *OpLabels) {
	*out = *in
	if in.Custom != nil {
		out.Custom = in.Custom.DeepCopy()
	}
	if in.OrchestrationIdentity != nil {
		out.OrchestrationIdentity = in.OrchestrationIdentity.DeepCopy()
	}
	if in.Disabled != nil {
		out.Disabled = in.Disabled.DeepCopy()
	}
	if in.OrchestrationInfo != nil {
		out.OrchestrationInfo = in.OrchestrationInfo.DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpLabels.
func (in *OpLabels) DeepCopy() *OpLabels {
	if in == nil {
		return nil
	}
	out := new(OpLabels)
	in.DeepCopyInto(out)
	return out
}
