---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: ciliumcidrgroups.cilium.io
spec:
  group: cilium.io
  names:
    categories:
    - cilium
    kind: CiliumCIDRGroup
    listKind: CiliumCIDRGroupList
    plural: ciliumcidrgroups
    shortNames:
    - ccg
    singular: ciliumcidrgroup
  scope: Cluster
  versions:
  - name: v2alpha1
    schema:
      openAPIV3Schema:
        description: 'CiliumCIDRGroup is a list of external CIDRs (i.e: CIDRs selecting
          peers outside the clusters) that can be referenced as a single entity from
          CiliumNetworkPolicies.'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              externalCIDRs:
                description: ExternalCIDRs is a list of CIDRs selecting peers outside
                  the clusters.
                items:
                  description: 'CIDR specifies a block of IP addresses. Example: 192.0.2.1/32'
                  format: cidr
                  type: string
                minItems: 0
                type: array
            required:
            - externalCIDRs
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
