// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v2alpha1 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1"
	ciliumiov2alpha1 "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/typed/cilium.io/v2alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeCiliumEndpointSlices implements CiliumEndpointSliceInterface
type fakeCiliumEndpointSlices struct {
	*gentype.FakeClientWithList[*v2alpha1.CiliumEndpointSlice, *v2alpha1.CiliumEndpointSliceList]
	Fake *FakeCiliumV2alpha1
}

func newFakeCiliumEndpointSlices(fake *FakeCiliumV2alpha1) ciliumiov2alpha1.CiliumEndpointSliceInterface {
	return &fakeCiliumEndpointSlices{
		gentype.NewFakeClientWithList[*v2alpha1.CiliumEndpointSlice, *v2alpha1.CiliumEndpointSliceList](
			fake.Fake,
			"",
			v2alpha1.SchemeGroupVersion.WithResource("ciliumendpointslices"),
			v2alpha1.SchemeGroupVersion.WithKind("CiliumEndpointSlice"),
			func() *v2alpha1.CiliumEndpointSlice { return &v2alpha1.CiliumEndpointSlice{} },
			func() *v2alpha1.CiliumEndpointSliceList { return &v2alpha1.CiliumEndpointSliceList{} },
			func(dst, src *v2alpha1.CiliumEndpointSliceList) { dst.ListMeta = src.ListMeta },
			func(list *v2alpha1.CiliumEndpointSliceList) []*v2alpha1.CiliumEndpointSlice {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v2alpha1.CiliumEndpointSliceList, items []*v2alpha1.CiliumEndpointSlice) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
