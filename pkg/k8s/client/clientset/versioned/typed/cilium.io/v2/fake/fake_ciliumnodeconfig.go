// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v2 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2"
	ciliumiov2 "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/typed/cilium.io/v2"
	gentype "k8s.io/client-go/gentype"
)

// fakeCiliumNodeConfigs implements CiliumNodeConfigInterface
type fakeCiliumNodeConfigs struct {
	*gentype.FakeClientWithList[*v2.CiliumNodeConfig, *v2.CiliumNodeConfigList]
	Fake *FakeCiliumV2
}

func newFakeCiliumNodeConfigs(fake *FakeCiliumV2, namespace string) ciliumiov2.CiliumNodeConfigInterface {
	return &fakeCiliumNodeConfigs{
		gentype.NewFakeClientWithList[*v2.CiliumNodeConfig, *v2.CiliumNodeConfigList](
			fake.Fake,
			namespace,
			v2.SchemeGroupVersion.WithResource("ciliumnodeconfigs"),
			v2.SchemeGroupVersion.WithKind("CiliumNodeConfig"),
			func() *v2.CiliumNodeConfig { return &v2.CiliumNodeConfig{} },
			func() *v2.CiliumNodeConfigList { return &v2.CiliumNodeConfigList{} },
			func(dst, src *v2.CiliumNodeConfigList) { dst.ListMeta = src.ListMeta },
			func(list *v2.CiliumNodeConfigList) []*v2.CiliumNodeConfig { return gentype.ToPointerSlice(list.Items) },
			func(list *v2.CiliumNodeConfigList, items []*v2.CiliumNodeConfig) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
