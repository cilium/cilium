// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v2 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2"
	ciliumiov2 "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/typed/cilium.io/v2"
	gentype "k8s.io/client-go/gentype"
)

// fakeCiliumLocalRedirectPolicies implements CiliumLocalRedirectPolicyInterface
type fakeCiliumLocalRedirectPolicies struct {
	*gentype.FakeClientWithList[*v2.CiliumLocalRedirectPolicy, *v2.CiliumLocalRedirectPolicyList]
	Fake *FakeCiliumV2
}

func newFakeCiliumLocalRedirectPolicies(fake *FakeCiliumV2, namespace string) ciliumiov2.CiliumLocalRedirectPolicyInterface {
	return &fakeCiliumLocalRedirectPolicies{
		gentype.NewFakeClientWithList[*v2.CiliumLocalRedirectPolicy, *v2.CiliumLocalRedirectPolicyList](
			fake.Fake,
			namespace,
			v2.SchemeGroupVersion.WithResource("ciliumlocalredirectpolicies"),
			v2.SchemeGroupVersion.WithKind("CiliumLocalRedirectPolicy"),
			func() *v2.CiliumLocalRedirectPolicy { return &v2.CiliumLocalRedirectPolicy{} },
			func() *v2.CiliumLocalRedirectPolicyList { return &v2.CiliumLocalRedirectPolicyList{} },
			func(dst, src *v2.CiliumLocalRedirectPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v2.CiliumLocalRedirectPolicyList) []*v2.CiliumLocalRedirectPolicy {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v2.CiliumLocalRedirectPolicyList, items []*v2.CiliumLocalRedirectPolicy) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
