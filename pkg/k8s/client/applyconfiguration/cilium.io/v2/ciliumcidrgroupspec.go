// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

import (
	api "github.com/cilium/cilium/pkg/policy/api"
)

// CiliumCIDRGroupSpecApplyConfiguration represents a declarative configuration of the CiliumCIDRGroupSpec type for use
// with apply.
type CiliumCIDRGroupSpecApplyConfiguration struct {
	ExternalCIDRs []api.CIDR `json:"externalCIDRs,omitempty"`
}

// CiliumCIDRGroupSpecApplyConfiguration constructs a declarative configuration of the CiliumCIDRGroupSpec type for use with
// apply.
func CiliumCIDRGroupSpec() *CiliumCIDRGroupSpecApplyConfiguration {
	return &CiliumCIDRGroupSpecApplyConfiguration{}
}

// WithExternalCIDRs adds the given value to the ExternalCIDRs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ExternalCIDRs field.
func (b *CiliumCIDRGroupSpecApplyConfiguration) WithExternalCIDRs(values ...api.CIDR) *CiliumCIDRGroupSpecApplyConfiguration {
	for i := range values {
		b.ExternalCIDRs = append(b.ExternalCIDRs, values[i])
	}
	return b
}
