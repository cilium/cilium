// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// CiliumBGPNodePeerStatusApplyConfiguration represents a declarative configuration of the CiliumBGPNodePeerStatus type for use
// with apply.
type CiliumBGPNodePeerStatusApplyConfiguration struct {
	Name            *string                                 `json:"name,omitempty"`
	PeerAddress     *string                                 `json:"peerAddress,omitempty"`
	PeerASN         *int64                                  `json:"peerASN,omitempty"`
	PeeringState    *string                                 `json:"peeringState,omitempty"`
	Timers          *CiliumBGPTimersStateApplyConfiguration `json:"timers,omitempty"`
	EstablishedTime *string                                 `json:"establishedTime,omitempty"`
	RouteCount      []BGPFamilyRouteCountApplyConfiguration `json:"routeCount,omitempty"`
}

// CiliumBGPNodePeerStatusApplyConfiguration constructs a declarative configuration of the CiliumBGPNodePeerStatus type for use with
// apply.
func CiliumBGPNodePeerStatus() *CiliumBGPNodePeerStatusApplyConfiguration {
	return &CiliumBGPNodePeerStatusApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *CiliumBGPNodePeerStatusApplyConfiguration) WithName(value string) *CiliumBGPNodePeerStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithPeerAddress sets the PeerAddress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PeerAddress field is set to the value of the last call.
func (b *CiliumBGPNodePeerStatusApplyConfiguration) WithPeerAddress(value string) *CiliumBGPNodePeerStatusApplyConfiguration {
	b.PeerAddress = &value
	return b
}

// WithPeerASN sets the PeerASN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PeerASN field is set to the value of the last call.
func (b *CiliumBGPNodePeerStatusApplyConfiguration) WithPeerASN(value int64) *CiliumBGPNodePeerStatusApplyConfiguration {
	b.PeerASN = &value
	return b
}

// WithPeeringState sets the PeeringState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PeeringState field is set to the value of the last call.
func (b *CiliumBGPNodePeerStatusApplyConfiguration) WithPeeringState(value string) *CiliumBGPNodePeerStatusApplyConfiguration {
	b.PeeringState = &value
	return b
}

// WithTimers sets the Timers field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Timers field is set to the value of the last call.
func (b *CiliumBGPNodePeerStatusApplyConfiguration) WithTimers(value *CiliumBGPTimersStateApplyConfiguration) *CiliumBGPNodePeerStatusApplyConfiguration {
	b.Timers = value
	return b
}

// WithEstablishedTime sets the EstablishedTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EstablishedTime field is set to the value of the last call.
func (b *CiliumBGPNodePeerStatusApplyConfiguration) WithEstablishedTime(value string) *CiliumBGPNodePeerStatusApplyConfiguration {
	b.EstablishedTime = &value
	return b
}

// WithRouteCount adds the given value to the RouteCount field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the RouteCount field.
func (b *CiliumBGPNodePeerStatusApplyConfiguration) WithRouteCount(values ...*BGPFamilyRouteCountApplyConfiguration) *CiliumBGPNodePeerStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithRouteCount")
		}
		b.RouteCount = append(b.RouteCount, *values[i])
	}
	return b
}
