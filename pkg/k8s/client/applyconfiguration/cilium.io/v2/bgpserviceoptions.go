// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

import (
	ciliumiov2 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2"
)

// BGPServiceOptionsApplyConfiguration represents a declarative configuration of the BGPServiceOptions type for use
// with apply.
type BGPServiceOptionsApplyConfiguration struct {
	Addresses             []ciliumiov2.BGPServiceAddressType `json:"addresses,omitempty"`
	AggregationLengthIPv4 *int16                             `json:"aggregationLengthIPv4,omitempty"`
	AggregationLengthIPv6 *int16                             `json:"aggregationLengthIPv6,omitempty"`
}

// BGPServiceOptionsApplyConfiguration constructs a declarative configuration of the BGPServiceOptions type for use with
// apply.
func BGPServiceOptions() *BGPServiceOptionsApplyConfiguration {
	return &BGPServiceOptionsApplyConfiguration{}
}

// WithAddresses adds the given value to the Addresses field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Addresses field.
func (b *BGPServiceOptionsApplyConfiguration) WithAddresses(values ...ciliumiov2.BGPServiceAddressType) *BGPServiceOptionsApplyConfiguration {
	for i := range values {
		b.Addresses = append(b.Addresses, values[i])
	}
	return b
}

// WithAggregationLengthIPv4 sets the AggregationLengthIPv4 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AggregationLengthIPv4 field is set to the value of the last call.
func (b *BGPServiceOptionsApplyConfiguration) WithAggregationLengthIPv4(value int16) *BGPServiceOptionsApplyConfiguration {
	b.AggregationLengthIPv4 = &value
	return b
}

// WithAggregationLengthIPv6 sets the AggregationLengthIPv6 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AggregationLengthIPv6 field is set to the value of the last call.
func (b *BGPServiceOptionsApplyConfiguration) WithAggregationLengthIPv6(value int16) *BGPServiceOptionsApplyConfiguration {
	b.AggregationLengthIPv6 = &value
	return b
}
