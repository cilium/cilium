// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

import (
	ciliumiov2 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2"
)

// BGPAutoDiscoveryApplyConfiguration represents a declarative configuration of the BGPAutoDiscovery type for use
// with apply.
type BGPAutoDiscoveryApplyConfiguration struct {
	Mode           *ciliumiov2.BGPAutoDiscoveryMode  `json:"mode,omitempty"`
	DefaultGateway *DefaultGatewayApplyConfiguration `json:"defaultGateway,omitempty"`
}

// BGPAutoDiscoveryApplyConfiguration constructs a declarative configuration of the BGPAutoDiscovery type for use with
// apply.
func BGPAutoDiscovery() *BGPAutoDiscoveryApplyConfiguration {
	return &BGPAutoDiscoveryApplyConfiguration{}
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *BGPAutoDiscoveryApplyConfiguration) WithMode(value ciliumiov2.BGPAutoDiscoveryMode) *BGPAutoDiscoveryApplyConfiguration {
	b.Mode = &value
	return b
}

// WithDefaultGateway sets the DefaultGateway field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DefaultGateway field is set to the value of the last call.
func (b *BGPAutoDiscoveryApplyConfiguration) WithDefaultGateway(value *DefaultGatewayApplyConfiguration) *BGPAutoDiscoveryApplyConfiguration {
	b.DefaultGateway = value
	return b
}
