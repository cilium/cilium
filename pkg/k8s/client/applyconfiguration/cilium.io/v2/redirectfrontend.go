// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// RedirectFrontendApplyConfiguration represents a declarative configuration of the RedirectFrontend type for use
// with apply.
type RedirectFrontendApplyConfiguration struct {
	AddressMatcher *FrontendApplyConfiguration    `json:"addressMatcher,omitempty"`
	ServiceMatcher *ServiceInfoApplyConfiguration `json:"serviceMatcher,omitempty"`
}

// RedirectFrontendApplyConfiguration constructs a declarative configuration of the RedirectFrontend type for use with
// apply.
func RedirectFrontend() *RedirectFrontendApplyConfiguration {
	return &RedirectFrontendApplyConfiguration{}
}

// WithAddressMatcher sets the AddressMatcher field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AddressMatcher field is set to the value of the last call.
func (b *RedirectFrontendApplyConfiguration) WithAddressMatcher(value *FrontendApplyConfiguration) *RedirectFrontendApplyConfiguration {
	b.AddressMatcher = value
	return b
}

// WithServiceMatcher sets the ServiceMatcher field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceMatcher field is set to the value of the last call.
func (b *RedirectFrontendApplyConfiguration) WithServiceMatcher(value *ServiceInfoApplyConfiguration) *RedirectFrontendApplyConfiguration {
	b.ServiceMatcher = value
	return b
}
