// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// HealthAddressingSpecApplyConfiguration represents a declarative configuration of the HealthAddressingSpec type for use
// with apply.
type HealthAddressingSpecApplyConfiguration struct {
	IPv4 *string `json:"ipv4,omitempty"`
	IPv6 *string `json:"ipv6,omitempty"`
}

// HealthAddressingSpecApplyConfiguration constructs a declarative configuration of the HealthAddressingSpec type for use with
// apply.
func HealthAddressingSpec() *HealthAddressingSpecApplyConfiguration {
	return &HealthAddressingSpecApplyConfiguration{}
}

// WithIPv4 sets the IPv4 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPv4 field is set to the value of the last call.
func (b *HealthAddressingSpecApplyConfiguration) WithIPv4(value string) *HealthAddressingSpecApplyConfiguration {
	b.IPv4 = &value
	return b
}

// WithIPv6 sets the IPv6 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPv6 field is set to the value of the last call.
func (b *HealthAddressingSpecApplyConfiguration) WithIPv6(value string) *HealthAddressingSpecApplyConfiguration {
	b.IPv6 = &value
	return b
}
