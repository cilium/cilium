// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// CiliumBGPNodeInstanceStatusApplyConfiguration represents a declarative configuration of the CiliumBGPNodeInstanceStatus type for use
// with apply.
type CiliumBGPNodeInstanceStatusApplyConfiguration struct {
	Name         *string                                     `json:"name,omitempty"`
	LocalASN     *int64                                      `json:"localASN,omitempty"`
	PeerStatuses []CiliumBGPNodePeerStatusApplyConfiguration `json:"peers,omitempty"`
}

// CiliumBGPNodeInstanceStatusApplyConfiguration constructs a declarative configuration of the CiliumBGPNodeInstanceStatus type for use with
// apply.
func CiliumBGPNodeInstanceStatus() *CiliumBGPNodeInstanceStatusApplyConfiguration {
	return &CiliumBGPNodeInstanceStatusApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *CiliumBGPNodeInstanceStatusApplyConfiguration) WithName(value string) *CiliumBGPNodeInstanceStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithLocalASN sets the LocalASN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LocalASN field is set to the value of the last call.
func (b *CiliumBGPNodeInstanceStatusApplyConfiguration) WithLocalASN(value int64) *CiliumBGPNodeInstanceStatusApplyConfiguration {
	b.LocalASN = &value
	return b
}

// WithPeerStatuses adds the given value to the PeerStatuses field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the PeerStatuses field.
func (b *CiliumBGPNodeInstanceStatusApplyConfiguration) WithPeerStatuses(values ...*CiliumBGPNodePeerStatusApplyConfiguration) *CiliumBGPNodeInstanceStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPeerStatuses")
		}
		b.PeerStatuses = append(b.PeerStatuses, *values[i])
	}
	return b
}
