// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

import (
	ciliumiov2 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2"
)

// EndpointPolicyDirectionApplyConfiguration represents a declarative configuration of the EndpointPolicyDirection type for use
// with apply.
type EndpointPolicyDirectionApplyConfiguration struct {
	Enforcing *bool                           `json:"enforcing,omitempty"`
	Allowed   *ciliumiov2.AllowedIdentityList `json:"allowed,omitempty"`
	Denied    *ciliumiov2.DenyIdentityList    `json:"denied,omitempty"`
	Removing  *ciliumiov2.AllowedIdentityList `json:"removing,omitempty"`
	Adding    *ciliumiov2.AllowedIdentityList `json:"adding,omitempty"`
	State     *ciliumiov2.EndpointPolicyState `json:"state,omitempty"`
}

// EndpointPolicyDirectionApplyConfiguration constructs a declarative configuration of the EndpointPolicyDirection type for use with
// apply.
func EndpointPolicyDirection() *EndpointPolicyDirectionApplyConfiguration {
	return &EndpointPolicyDirectionApplyConfiguration{}
}

// WithEnforcing sets the Enforcing field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enforcing field is set to the value of the last call.
func (b *EndpointPolicyDirectionApplyConfiguration) WithEnforcing(value bool) *EndpointPolicyDirectionApplyConfiguration {
	b.Enforcing = &value
	return b
}

// WithAllowed sets the Allowed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Allowed field is set to the value of the last call.
func (b *EndpointPolicyDirectionApplyConfiguration) WithAllowed(value ciliumiov2.AllowedIdentityList) *EndpointPolicyDirectionApplyConfiguration {
	b.Allowed = &value
	return b
}

// WithDenied sets the Denied field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Denied field is set to the value of the last call.
func (b *EndpointPolicyDirectionApplyConfiguration) WithDenied(value ciliumiov2.DenyIdentityList) *EndpointPolicyDirectionApplyConfiguration {
	b.Denied = &value
	return b
}

// WithRemoving sets the Removing field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Removing field is set to the value of the last call.
func (b *EndpointPolicyDirectionApplyConfiguration) WithRemoving(value ciliumiov2.AllowedIdentityList) *EndpointPolicyDirectionApplyConfiguration {
	b.Removing = &value
	return b
}

// WithAdding sets the Adding field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Adding field is set to the value of the last call.
func (b *EndpointPolicyDirectionApplyConfiguration) WithAdding(value ciliumiov2.AllowedIdentityList) *EndpointPolicyDirectionApplyConfiguration {
	b.Adding = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *EndpointPolicyDirectionApplyConfiguration) WithState(value ciliumiov2.EndpointPolicyState) *EndpointPolicyDirectionApplyConfiguration {
	b.State = &value
	return b
}
