// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// AddressPairApplyConfiguration represents a declarative configuration of the AddressPair type for use
// with apply.
type AddressPairApplyConfiguration struct {
	IPV4 *string `json:"ipv4,omitempty"`
	IPV6 *string `json:"ipv6,omitempty"`
}

// AddressPairApplyConfiguration constructs a declarative configuration of the AddressPair type for use with
// apply.
func AddressPair() *AddressPairApplyConfiguration {
	return &AddressPairApplyConfiguration{}
}

// WithIPV4 sets the IPV4 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPV4 field is set to the value of the last call.
func (b *AddressPairApplyConfiguration) WithIPV4(value string) *AddressPairApplyConfiguration {
	b.IPV4 = &value
	return b
}

// WithIPV6 sets the IPV6 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPV6 field is set to the value of the last call.
func (b *AddressPairApplyConfiguration) WithIPV6(value string) *AddressPairApplyConfiguration {
	b.IPV6 = &value
	return b
}
