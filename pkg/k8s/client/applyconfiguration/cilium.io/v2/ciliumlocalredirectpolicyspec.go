// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// CiliumLocalRedirectPolicySpecApplyConfiguration represents a declarative configuration of the CiliumLocalRedirectPolicySpec type for use
// with apply.
type CiliumLocalRedirectPolicySpecApplyConfiguration struct {
	RedirectFrontend        *RedirectFrontendApplyConfiguration `json:"redirectFrontend,omitempty"`
	RedirectBackend         *RedirectBackendApplyConfiguration  `json:"redirectBackend,omitempty"`
	SkipRedirectFromBackend *bool                               `json:"skipRedirectFromBackend,omitempty"`
	Description             *string                             `json:"description,omitempty"`
}

// CiliumLocalRedirectPolicySpecApplyConfiguration constructs a declarative configuration of the CiliumLocalRedirectPolicySpec type for use with
// apply.
func CiliumLocalRedirectPolicySpec() *CiliumLocalRedirectPolicySpecApplyConfiguration {
	return &CiliumLocalRedirectPolicySpecApplyConfiguration{}
}

// WithRedirectFrontend sets the RedirectFrontend field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RedirectFrontend field is set to the value of the last call.
func (b *CiliumLocalRedirectPolicySpecApplyConfiguration) WithRedirectFrontend(value *RedirectFrontendApplyConfiguration) *CiliumLocalRedirectPolicySpecApplyConfiguration {
	b.RedirectFrontend = value
	return b
}

// WithRedirectBackend sets the RedirectBackend field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RedirectBackend field is set to the value of the last call.
func (b *CiliumLocalRedirectPolicySpecApplyConfiguration) WithRedirectBackend(value *RedirectBackendApplyConfiguration) *CiliumLocalRedirectPolicySpecApplyConfiguration {
	b.RedirectBackend = value
	return b
}

// WithSkipRedirectFromBackend sets the SkipRedirectFromBackend field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SkipRedirectFromBackend field is set to the value of the last call.
func (b *CiliumLocalRedirectPolicySpecApplyConfiguration) WithSkipRedirectFromBackend(value bool) *CiliumLocalRedirectPolicySpecApplyConfiguration {
	b.SkipRedirectFromBackend = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *CiliumLocalRedirectPolicySpecApplyConfiguration) WithDescription(value string) *CiliumLocalRedirectPolicySpecApplyConfiguration {
	b.Description = &value
	return b
}
