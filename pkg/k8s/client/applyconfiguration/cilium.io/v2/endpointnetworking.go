// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

import (
	ciliumiov2 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2"
)

// EndpointNetworkingApplyConfiguration represents a declarative configuration of the EndpointNetworking type for use
// with apply.
type EndpointNetworkingApplyConfiguration struct {
	Addressing *ciliumiov2.AddressPairList `json:"addressing,omitempty"`
	NodeIP     *string                     `json:"node,omitempty"`
}

// EndpointNetworkingApplyConfiguration constructs a declarative configuration of the EndpointNetworking type for use with
// apply.
func EndpointNetworking() *EndpointNetworkingApplyConfiguration {
	return &EndpointNetworkingApplyConfiguration{}
}

// WithAddressing sets the Addressing field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Addressing field is set to the value of the last call.
func (b *EndpointNetworkingApplyConfiguration) WithAddressing(value ciliumiov2.AddressPairList) *EndpointNetworkingApplyConfiguration {
	b.Addressing = &value
	return b
}

// WithNodeIP sets the NodeIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeIP field is set to the value of the last call.
func (b *EndpointNetworkingApplyConfiguration) WithNodeIP(value string) *EndpointNetworkingApplyConfiguration {
	b.NodeIP = &value
	return b
}
