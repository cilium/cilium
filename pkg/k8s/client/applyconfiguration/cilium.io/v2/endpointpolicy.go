// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// EndpointPolicyApplyConfiguration represents a declarative configuration of the EndpointPolicy type for use
// with apply.
type EndpointPolicyApplyConfiguration struct {
	Ingress *EndpointPolicyDirectionApplyConfiguration `json:"ingress,omitempty"`
	Egress  *EndpointPolicyDirectionApplyConfiguration `json:"egress,omitempty"`
}

// EndpointPolicyApplyConfiguration constructs a declarative configuration of the EndpointPolicy type for use with
// apply.
func EndpointPolicy() *EndpointPolicyApplyConfiguration {
	return &EndpointPolicyApplyConfiguration{}
}

// WithIngress sets the Ingress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ingress field is set to the value of the last call.
func (b *EndpointPolicyApplyConfiguration) WithIngress(value *EndpointPolicyDirectionApplyConfiguration) *EndpointPolicyApplyConfiguration {
	b.Ingress = value
	return b
}

// WithEgress sets the Egress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Egress field is set to the value of the last call.
func (b *EndpointPolicyApplyConfiguration) WithEgress(value *EndpointPolicyDirectionApplyConfiguration) *EndpointPolicyApplyConfiguration {
	b.Egress = value
	return b
}
