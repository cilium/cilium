// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2alpha1

// CiliumBGPNeighborGracefulRestartApplyConfiguration represents a declarative configuration of the CiliumBGPNeighborGracefulRestart type for use
// with apply.
type CiliumBGPNeighborGracefulRestartApplyConfiguration struct {
	Enabled            *bool  `json:"enabled,omitempty"`
	RestartTimeSeconds *int32 `json:"restartTimeSeconds,omitempty"`
}

// CiliumBGPNeighborGracefulRestartApplyConfiguration constructs a declarative configuration of the CiliumBGPNeighborGracefulRestart type for use with
// apply.
func CiliumBGPNeighborGracefulRestart() *CiliumBGPNeighborGracefulRestartApplyConfiguration {
	return &CiliumBGPNeighborGracefulRestartApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *CiliumBGPNeighborGracefulRestartApplyConfiguration) WithEnabled(value bool) *CiliumBGPNeighborGracefulRestartApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithRestartTimeSeconds sets the RestartTimeSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RestartTimeSeconds field is set to the value of the last call.
func (b *CiliumBGPNeighborGracefulRestartApplyConfiguration) WithRestartTimeSeconds(value int32) *CiliumBGPNeighborGracefulRestartApplyConfiguration {
	b.RestartTimeSeconds = &value
	return b
}
