// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1"
	corev1 "github.com/cilium/cilium/pkg/k8s/slim/k8s/client/clientset/versioned/typed/core/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeSecrets implements SecretInterface
type fakeSecrets struct {
	*gentype.FakeClientWithList[*v1.Secret, *v1.SecretList]
	Fake *FakeCoreV1
}

func newFakeSecrets(fake *FakeCoreV1, namespace string) corev1.SecretInterface {
	return &fakeSecrets{
		gentype.NewFakeClientWithList[*v1.Secret, *v1.SecretList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("secrets"),
			v1.SchemeGroupVersion.WithKind("Secret"),
			func() *v1.Secret { return &v1.Secret{} },
			func() *v1.SecretList { return &v1.SecretList{} },
			func(dst, src *v1.SecretList) { dst.ListMeta = src.ListMeta },
			func(list *v1.SecretList) []*v1.Secret { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.SecretList, items []*v1.Secret) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
