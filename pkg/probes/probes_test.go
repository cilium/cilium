// Copyright 2019 Authors of Cilium
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +build !privileged_tests

package probes

import (
	"testing"

	"github.com/cilium/cilium/pkg/checker"

	. "gopkg.in/check.v1"
)

// Hook up gocheck into the "go test" runner.
func Test(t *testing.T) {
	TestingT(t)
}

type ProbesTestSuite struct{}

var _ = Suite(&ProbesTestSuite{})

func kernelParamYes() KernelParam {
	param := KernelParam("y")
	return param
}

func kernelParamModule() KernelParam {
	param := KernelParam("m")
	return param
}

func (p *ProbesTestSuite) TestProbes(c *C) {
	tests := []struct {
		features    Features
		expectError bool
	}{
		{
			features: Features{
				SystemConfig: SystemConfig{
					ConfigBpf:           "y",
					ConfigBpfSyscall:    "y",
					ConfigNetSchIngress: "y",
					ConfigNetClsBpf:     "y",
					ConfigNetClsAct:     "y",
					ConfigBpfJit:        "y",
					ConfigHaveEbpfJit:   "y",
					ConfigCgroupBpf:     "y",
					ConfigLwtunnelBpf:   "y",
					ConfigBpfEvents:     "y",
				},
			},
			expectError: false,
		},
		{
			features: Features{
				SystemConfig: SystemConfig{
					ConfigBpf:           "y",
					ConfigBpfSyscall:    "y",
					ConfigNetSchIngress: "m",
					ConfigNetClsBpf:     "m",
					ConfigNetClsAct:     "y",
					ConfigBpfJit:        "y",
					ConfigHaveEbpfJit:   "y",
					ConfigCgroupBpf:     "y",
					ConfigLwtunnelBpf:   "y",
					ConfigBpfEvents:     "y",
				},
			},
			expectError: false,
		},
		{
			features: Features{
				SystemConfig: SystemConfig{
					ConfigBpf:           "y",
					ConfigBpfSyscall:    "y",
					ConfigNetSchIngress: "",
					ConfigNetClsBpf:     "",
					ConfigNetClsAct:     "y",
					ConfigBpfJit:        "y",
					ConfigHaveEbpfJit:   "y",
					ConfigCgroupBpf:     "y",
					ConfigLwtunnelBpf:   "y",
					ConfigBpfEvents:     "y",
				},
			},
			expectError: true,
		},
		{
			features: Features{
				SystemConfig: SystemConfig{
					ConfigBpf:           "",
					ConfigBpfSyscall:    "",
					ConfigNetSchIngress: "",
					ConfigNetClsBpf:     "",
					ConfigNetClsAct:     "y",
					ConfigBpfJit:        "y",
					ConfigHaveEbpfJit:   "y",
					ConfigCgroupBpf:     "y",
					ConfigLwtunnelBpf:   "y",
					ConfigBpfEvents:     "y",
				},
			},
			expectError: true,
		},
	}
	for _, tc := range tests {
		err := probes(tc.features)
		if tc.expectError {
			c.Assert(err, NotNil)
		} else {
			c.Assert(err, IsNil)
		}
	}
}

func (p *ProbesTestSuite) TestParseFeatures(c *C) {
	out := []byte(`{
    "helpers": {
        "cgroup_device_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_trace_printk",
            "bpf_get_current_uid_gid",
            "bpf_get_current_cgroup_id",
            "bpf_get_local_storage"
        ],
        "cgroup_skb_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_skb_load_bytes",
            "bpf_get_numa_node_id",
            "bpf_get_socket_cookie",
            "bpf_get_socket_uid",
            "bpf_skb_load_bytes_relative",
            "bpf_get_local_storage",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "cgroup_sock_addr_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_current_uid_gid",
            "bpf_get_numa_node_id",
            "bpf_get_socket_cookie",
            "bpf_bind",
            "bpf_get_local_storage",
            "bpf_sk_lookup_tcp",
            "bpf_sk_lookup_udp",
            "bpf_sk_release",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "cgroup_sock_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_current_uid_gid",
            "bpf_get_numa_node_id",
            "bpf_get_local_storage",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "cgroup_sysctl_available_helpers": [],
        "flow_dissector_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_skb_load_bytes",
            "bpf_get_numa_node_id",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "kprobe_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_probe_read",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_current_pid_tgid",
            "bpf_get_current_uid_gid",
            "bpf_get_current_comm",
            "bpf_perf_event_read",
            "bpf_perf_event_output",
            "bpf_get_stackid",
            "bpf_get_current_task",
            "bpf_probe_write_user",
            "bpf_current_task_under_cgroup",
            "bpf_get_numa_node_id",
            "bpf_probe_read_str",
            "bpf_perf_event_read_value",
            "bpf_get_stack",
            "bpf_get_current_cgroup_id"
        ],
        "lirc_mode2_available_helpers": [],
        "lwt_in_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_cgroup_classid",
            "bpf_get_route_realm",
            "bpf_perf_event_output",
            "bpf_skb_load_bytes",
            "bpf_csum_diff",
            "bpf_skb_under_cgroup",
            "bpf_get_hash_recalc",
            "bpf_skb_pull_data",
            "bpf_get_numa_node_id",
            "bpf_lwt_push_encap",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "lwt_out_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_cgroup_classid",
            "bpf_get_route_realm",
            "bpf_perf_event_output",
            "bpf_skb_load_bytes",
            "bpf_csum_diff",
            "bpf_skb_under_cgroup",
            "bpf_get_hash_recalc",
            "bpf_skb_pull_data",
            "bpf_get_numa_node_id",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "lwt_seg6local_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_cgroup_classid",
            "bpf_get_route_realm",
            "bpf_perf_event_output",
            "bpf_skb_load_bytes",
            "bpf_csum_diff",
            "bpf_skb_under_cgroup",
            "bpf_get_hash_recalc",
            "bpf_skb_pull_data",
            "bpf_get_numa_node_id",
            "bpf_lwt_seg6_store_bytes",
            "bpf_lwt_seg6_adjust_srh",
            "bpf_lwt_seg6_action",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "lwt_xmit_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_skb_store_bytes",
            "bpf_l3_csum_replace",
            "bpf_l4_csum_replace",
            "bpf_tail_call",
            "bpf_clone_redirect",
            "bpf_get_cgroup_classid",
            "bpf_skb_get_tunnel_key",
            "bpf_skb_set_tunnel_key",
            "bpf_redirect",
            "bpf_get_route_realm",
            "bpf_perf_event_output",
            "bpf_skb_load_bytes",
            "bpf_csum_diff",
            "bpf_skb_get_tunnel_opt",
            "bpf_skb_set_tunnel_opt",
            "bpf_skb_under_cgroup",
            "bpf_get_hash_recalc",
            "bpf_skb_change_tail",
            "bpf_skb_pull_data",
            "bpf_csum_update",
            "bpf_set_hash_invalid",
            "bpf_get_numa_node_id",
            "bpf_skb_change_head",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "perf_event_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_probe_read",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_current_pid_tgid",
            "bpf_get_current_uid_gid",
            "bpf_get_current_comm",
            "bpf_perf_event_read",
            "bpf_perf_event_output",
            "bpf_get_stackid",
            "bpf_get_current_task",
            "bpf_probe_write_user",
            "bpf_current_task_under_cgroup",
            "bpf_get_numa_node_id",
            "bpf_probe_read_str",
            "bpf_perf_prog_read_value",
            "bpf_get_stack",
            "bpf_get_current_cgroup_id"
        ],
        "raw_tracepoint_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_probe_read",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_current_pid_tgid",
            "bpf_get_current_uid_gid",
            "bpf_get_current_comm",
            "bpf_perf_event_read",
            "bpf_perf_event_output",
            "bpf_get_stackid",
            "bpf_get_current_task",
            "bpf_probe_write_user",
            "bpf_current_task_under_cgroup",
            "bpf_get_numa_node_id",
            "bpf_probe_read_str",
            "bpf_get_stack",
            "bpf_get_current_cgroup_id"
        ],
        "sched_act_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_skb_store_bytes",
            "bpf_l3_csum_replace",
            "bpf_l4_csum_replace",
            "bpf_tail_call",
            "bpf_clone_redirect",
            "bpf_get_cgroup_classid",
            "bpf_skb_vlan_push",
            "bpf_skb_vlan_pop",
            "bpf_skb_get_tunnel_key",
            "bpf_skb_set_tunnel_key",
            "bpf_redirect",
            "bpf_get_route_realm",
            "bpf_perf_event_output",
            "bpf_skb_load_bytes",
            "bpf_csum_diff",
            "bpf_skb_get_tunnel_opt",
            "bpf_skb_set_tunnel_opt",
            "bpf_skb_change_proto",
            "bpf_skb_change_type",
            "bpf_skb_under_cgroup",
            "bpf_get_hash_recalc",
            "bpf_skb_change_tail",
            "bpf_skb_pull_data",
            "bpf_csum_update",
            "bpf_set_hash_invalid",
            "bpf_get_numa_node_id",
            "bpf_get_socket_cookie",
            "bpf_get_socket_uid",
            "bpf_set_hash",
            "bpf_skb_adjust_room",
            "bpf_skb_get_xfrm_state",
            "bpf_skb_load_bytes_relative",
            "bpf_fib_lookup",
            "bpf_skb_cgroup_id",
            "bpf_skb_ancestor_cgroup_id",
            "bpf_sk_lookup_tcp",
            "bpf_sk_lookup_udp",
            "bpf_sk_release",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "sched_cls_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_skb_store_bytes",
            "bpf_l3_csum_replace",
            "bpf_l4_csum_replace",
            "bpf_tail_call",
            "bpf_clone_redirect",
            "bpf_get_cgroup_classid",
            "bpf_skb_vlan_push",
            "bpf_skb_vlan_pop",
            "bpf_skb_get_tunnel_key",
            "bpf_skb_set_tunnel_key",
            "bpf_redirect",
            "bpf_get_route_realm",
            "bpf_perf_event_output",
            "bpf_skb_load_bytes",
            "bpf_csum_diff",
            "bpf_skb_get_tunnel_opt",
            "bpf_skb_set_tunnel_opt",
            "bpf_skb_change_proto",
            "bpf_skb_change_type",
            "bpf_skb_under_cgroup",
            "bpf_get_hash_recalc",
            "bpf_skb_change_tail",
            "bpf_skb_pull_data",
            "bpf_csum_update",
            "bpf_set_hash_invalid",
            "bpf_get_numa_node_id",
            "bpf_get_socket_cookie",
            "bpf_get_socket_uid",
            "bpf_set_hash",
            "bpf_skb_adjust_room",
            "bpf_skb_get_xfrm_state",
            "bpf_skb_load_bytes_relative",
            "bpf_fib_lookup",
            "bpf_skb_cgroup_id",
            "bpf_skb_ancestor_cgroup_id",
            "bpf_sk_lookup_tcp",
            "bpf_sk_lookup_udp",
            "bpf_sk_release",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "sk_msg_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_numa_node_id",
            "bpf_msg_redirect_map",
            "bpf_msg_apply_bytes",
            "bpf_msg_cork_bytes",
            "bpf_msg_pull_data",
            "bpf_msg_redirect_hash",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem",
            "bpf_msg_push_data",
            "bpf_msg_pop_data"
        ],
        "sk_reuseport_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_skb_load_bytes",
            "bpf_get_numa_node_id",
            "bpf_skb_load_bytes_relative",
            "bpf_sk_select_reuseport",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "sk_skb_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_skb_store_bytes",
            "bpf_tail_call",
            "bpf_skb_load_bytes",
            "bpf_skb_change_tail",
            "bpf_skb_pull_data",
            "bpf_get_numa_node_id",
            "bpf_skb_change_head",
            "bpf_get_socket_cookie",
            "bpf_get_socket_uid",
            "bpf_sk_redirect_map",
            "bpf_sk_redirect_hash",
            "bpf_sk_lookup_tcp",
            "bpf_sk_lookup_udp",
            "bpf_sk_release",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "sock_ops_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_perf_event_output",
            "bpf_get_numa_node_id",
            "bpf_get_socket_cookie",
            "bpf_setsockopt",
            "bpf_sock_map_update",
            "bpf_getsockopt",
            "bpf_sock_ops_cb_flags_set",
            "bpf_sock_hash_update",
            "bpf_get_local_storage",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "socket_filter_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_skb_load_bytes",
            "bpf_get_numa_node_id",
            "bpf_get_socket_cookie",
            "bpf_get_socket_uid",
            "bpf_skb_load_bytes_relative",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ],
        "tracepoint_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_probe_read",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_get_current_pid_tgid",
            "bpf_get_current_uid_gid",
            "bpf_get_current_comm",
            "bpf_perf_event_read",
            "bpf_perf_event_output",
            "bpf_get_stackid",
            "bpf_get_current_task",
            "bpf_probe_write_user",
            "bpf_current_task_under_cgroup",
            "bpf_get_numa_node_id",
            "bpf_probe_read_str",
            "bpf_get_stack",
            "bpf_get_current_cgroup_id"
        ],
        "xdp_available_helpers": [
            "bpf_map_lookup_elem",
            "bpf_map_update_elem",
            "bpf_map_delete_elem",
            "bpf_ktime_get_ns",
            "bpf_trace_printk",
            "bpf_get_prandom_u32",
            "bpf_get_smp_processor_id",
            "bpf_tail_call",
            "bpf_redirect",
            "bpf_perf_event_output",
            "bpf_csum_diff",
            "bpf_get_numa_node_id",
            "bpf_xdp_adjust_head",
            "bpf_redirect_map",
            "bpf_xdp_adjust_meta",
            "bpf_xdp_adjust_tail",
            "bpf_fib_lookup",
            "bpf_sk_lookup_tcp",
            "bpf_sk_lookup_udp",
            "bpf_sk_release",
            "bpf_map_push_elem",
            "bpf_map_pop_elem",
            "bpf_map_peek_elem"
        ]
    },
    "map_types": {
        "have_array_map_type": true,
        "have_array_of_maps_map_type": true,
        "have_cgroup_array_map_type": true,
        "have_cgroup_storage_map_type": true,
        "have_cpumap_map_type": true,
        "have_devmap_map_type": true,
        "have_hash_map_type": true,
        "have_hash_of_maps_map_type": true,
        "have_lpm_trie_map_type": true,
        "have_lru_hash_map_type": true,
        "have_lru_percpu_hash_map_type": true,
        "have_percpu_array_map_type": true,
        "have_percpu_cgroup_storage_map_type": true,
        "have_percpu_hash_map_type": true,
        "have_perf_event_array_map_type": true,
        "have_prog_array_map_type": true,
        "have_queue_map_type": true,
        "have_reuseport_sockarray_map_type": true,
        "have_sk_storage_map_type": false,
        "have_sockhash_map_type": true,
        "have_sockmap_map_type": true,
        "have_stack_map_type": true,
        "have_stack_trace_map_type": true,
        "have_xskmap_map_type": true
    },
    "program_types": {
        "have_cgroup_device_prog_type": true,
        "have_cgroup_skb_prog_type": true,
        "have_cgroup_sock_addr_prog_type": true,
        "have_cgroup_sock_prog_type": true,
        "have_cgroup_sysctl_prog_type": false,
        "have_flow_dissector_prog_type": true,
        "have_kprobe_prog_type": true,
        "have_lirc_mode2_prog_type": false,
        "have_lwt_in_prog_type": true,
        "have_lwt_out_prog_type": true,
        "have_lwt_seg6local_prog_type": true,
        "have_lwt_xmit_prog_type": true,
        "have_perf_event_prog_type": true,
        "have_raw_tracepoint_prog_type": true,
        "have_sched_act_prog_type": true,
        "have_sched_cls_prog_type": true,
        "have_sk_msg_prog_type": true,
        "have_sk_reuseport_prog_type": true,
        "have_sk_skb_prog_type": true,
        "have_sock_ops_prog_type": true,
        "have_socket_filter_prog_type": true,
        "have_tracepoint_prog_type": true,
        "have_xdp_prog_type": true
    },
    "syscall_config": {
        "have_bpf_syscall": true
    },
    "system_config": {
        "CONFIG_BPF": "y",
        "CONFIG_BPFILTER": "y",
        "CONFIG_BPFILTER_UMH": "m",
        "CONFIG_BPF_EVENTS": "y",
        "CONFIG_BPF_JIT": "y",
        "CONFIG_BPF_JIT_ALWAYS_ON": "y",
        "CONFIG_BPF_KPROBE_OVERRIDE": null,
        "CONFIG_BPF_LIRC_MODE2": null,
        "CONFIG_BPF_STREAM_PARSER": "y",
        "CONFIG_BPF_SYSCALL": "y",
        "CONFIG_CGROUPS": "y",
        "CONFIG_CGROUP_BPF": "y",
        "CONFIG_CGROUP_NET_CLASSID": "y",
        "CONFIG_FTRACE_SYSCALLS": "y",
        "CONFIG_FUNCTION_ERROR_INJECTION": "y",
        "CONFIG_HAVE_EBPF_JIT": "y",
        "CONFIG_IPV6_SEG6_BPF": "y",
        "CONFIG_IP_ROUTE_CLASSID": "y",
        "CONFIG_KPROBE_EVENTS": "y",
        "CONFIG_LWTUNNEL_BPF": "y",
        "CONFIG_NET": "y",
        "CONFIG_NETFILTER_XT_MATCH_BPF": "m",
        "CONFIG_NET_ACT_BPF": "m",
        "CONFIG_NET_CLS_ACT": "y",
        "CONFIG_NET_CLS_BPF": "m",
        "CONFIG_NET_SCH_INGRESS": "m",
        "CONFIG_SOCK_CGROUP_DATA": "y",
        "CONFIG_TEST_BPF": null,
        "CONFIG_TRACING": "y",
        "CONFIG_UPROBE_EVENTS": "y",
        "CONFIG_XDP_SOCKETS": "y",
        "CONFIG_XFRM": "y",
        "bpf_jit_enable": 1,
        "bpf_jit_harden": 0,
        "bpf_jit_kallsyms": 0,
        "bpf_jit_limit": 264241152,
        "unprivileged_bpf_disabled": 0
    }
}`)
	expectedFeatures := &Features{
		Helpers: Helpers{
			CgroupDeviceAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_trace_printk",
				"bpf_get_current_uid_gid",
				"bpf_get_current_cgroup_id",
				"bpf_get_local_storage",
			},
			CgroupSkbAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_skb_load_bytes",
				"bpf_get_numa_node_id",
				"bpf_get_socket_cookie",
				"bpf_get_socket_uid",
				"bpf_skb_load_bytes_relative",
				"bpf_get_local_storage",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			CgroupSockAddrAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_current_uid_gid",
				"bpf_get_numa_node_id",
				"bpf_get_socket_cookie",
				"bpf_bind",
				"bpf_get_local_storage",
				"bpf_sk_lookup_tcp",
				"bpf_sk_lookup_udp",
				"bpf_sk_release",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			CgroupSockAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_current_uid_gid",
				"bpf_get_numa_node_id",
				"bpf_get_local_storage",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			CgroupSysctlAvailableHelpers: []string{},
			FlowDissectorAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_skb_load_bytes",
				"bpf_get_numa_node_id",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			KprobeAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_probe_read",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_current_pid_tgid",
				"bpf_get_current_uid_gid",
				"bpf_get_current_comm",
				"bpf_perf_event_read",
				"bpf_perf_event_output",
				"bpf_get_stackid",
				"bpf_get_current_task",
				"bpf_probe_write_user",
				"bpf_current_task_under_cgroup",
				"bpf_get_numa_node_id",
				"bpf_probe_read_str",
				"bpf_perf_event_read_value",
				"bpf_get_stack",
				"bpf_get_current_cgroup_id",
			},
			LircMode2AvailableHelpers: []string{},
			LwtInAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_cgroup_classid",
				"bpf_get_route_realm",
				"bpf_perf_event_output",
				"bpf_skb_load_bytes",
				"bpf_csum_diff",
				"bpf_skb_under_cgroup",
				"bpf_get_hash_recalc",
				"bpf_skb_pull_data",
				"bpf_get_numa_node_id",
				"bpf_lwt_push_encap",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			LwtOutAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_cgroup_classid",
				"bpf_get_route_realm",
				"bpf_perf_event_output",
				"bpf_skb_load_bytes",
				"bpf_csum_diff",
				"bpf_skb_under_cgroup",
				"bpf_get_hash_recalc",
				"bpf_skb_pull_data",
				"bpf_get_numa_node_id",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			LwtSeg6LocalAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_cgroup_classid",
				"bpf_get_route_realm",
				"bpf_perf_event_output",
				"bpf_skb_load_bytes",
				"bpf_csum_diff",
				"bpf_skb_under_cgroup",
				"bpf_get_hash_recalc",
				"bpf_skb_pull_data",
				"bpf_get_numa_node_id",
				"bpf_lwt_seg6_store_bytes",
				"bpf_lwt_seg6_adjust_srh",
				"bpf_lwt_seg6_action",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			LwtXmitAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_skb_store_bytes",
				"bpf_l3_csum_replace",
				"bpf_l4_csum_replace",
				"bpf_tail_call",
				"bpf_clone_redirect",
				"bpf_get_cgroup_classid",
				"bpf_skb_get_tunnel_key",
				"bpf_skb_set_tunnel_key",
				"bpf_redirect",
				"bpf_get_route_realm",
				"bpf_perf_event_output",
				"bpf_skb_load_bytes",
				"bpf_csum_diff",
				"bpf_skb_get_tunnel_opt",
				"bpf_skb_set_tunnel_opt",
				"bpf_skb_under_cgroup",
				"bpf_get_hash_recalc",
				"bpf_skb_change_tail",
				"bpf_skb_pull_data",
				"bpf_csum_update",
				"bpf_set_hash_invalid",
				"bpf_get_numa_node_id",
				"bpf_skb_change_head",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			PerfEventAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_probe_read",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_current_pid_tgid",
				"bpf_get_current_uid_gid",
				"bpf_get_current_comm",
				"bpf_perf_event_read",
				"bpf_perf_event_output",
				"bpf_get_stackid",
				"bpf_get_current_task",
				"bpf_probe_write_user",
				"bpf_current_task_under_cgroup",
				"bpf_get_numa_node_id",
				"bpf_probe_read_str",
				"bpf_perf_prog_read_value",
				"bpf_get_stack",
				"bpf_get_current_cgroup_id",
			},
			RawTracepointAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_probe_read",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_current_pid_tgid",
				"bpf_get_current_uid_gid",
				"bpf_get_current_comm",
				"bpf_perf_event_read",
				"bpf_perf_event_output",
				"bpf_get_stackid",
				"bpf_get_current_task",
				"bpf_probe_write_user",
				"bpf_current_task_under_cgroup",
				"bpf_get_numa_node_id",
				"bpf_probe_read_str",
				"bpf_get_stack",
				"bpf_get_current_cgroup_id",
			},
			SchedActAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_skb_store_bytes",
				"bpf_l3_csum_replace",
				"bpf_l4_csum_replace",
				"bpf_tail_call",
				"bpf_clone_redirect",
				"bpf_get_cgroup_classid",
				"bpf_skb_vlan_push",
				"bpf_skb_vlan_pop",
				"bpf_skb_get_tunnel_key",
				"bpf_skb_set_tunnel_key",
				"bpf_redirect",
				"bpf_get_route_realm",
				"bpf_perf_event_output",
				"bpf_skb_load_bytes",
				"bpf_csum_diff",
				"bpf_skb_get_tunnel_opt",
				"bpf_skb_set_tunnel_opt",
				"bpf_skb_change_proto",
				"bpf_skb_change_type",
				"bpf_skb_under_cgroup",
				"bpf_get_hash_recalc",
				"bpf_skb_change_tail",
				"bpf_skb_pull_data",
				"bpf_csum_update",
				"bpf_set_hash_invalid",
				"bpf_get_numa_node_id",
				"bpf_get_socket_cookie",
				"bpf_get_socket_uid",
				"bpf_set_hash",
				"bpf_skb_adjust_room",
				"bpf_skb_get_xfrm_state",
				"bpf_skb_load_bytes_relative",
				"bpf_fib_lookup",
				"bpf_skb_cgroup_id",
				"bpf_skb_ancestor_cgroup_id",
				"bpf_sk_lookup_tcp",
				"bpf_sk_lookup_udp",
				"bpf_sk_release",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			SchedClsAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_skb_store_bytes",
				"bpf_l3_csum_replace",
				"bpf_l4_csum_replace",
				"bpf_tail_call",
				"bpf_clone_redirect",
				"bpf_get_cgroup_classid",
				"bpf_skb_vlan_push",
				"bpf_skb_vlan_pop",
				"bpf_skb_get_tunnel_key",
				"bpf_skb_set_tunnel_key",
				"bpf_redirect",
				"bpf_get_route_realm",
				"bpf_perf_event_output",
				"bpf_skb_load_bytes",
				"bpf_csum_diff",
				"bpf_skb_get_tunnel_opt",
				"bpf_skb_set_tunnel_opt",
				"bpf_skb_change_proto",
				"bpf_skb_change_type",
				"bpf_skb_under_cgroup",
				"bpf_get_hash_recalc",
				"bpf_skb_change_tail",
				"bpf_skb_pull_data",
				"bpf_csum_update",
				"bpf_set_hash_invalid",
				"bpf_get_numa_node_id",
				"bpf_get_socket_cookie",
				"bpf_get_socket_uid",
				"bpf_set_hash",
				"bpf_skb_adjust_room",
				"bpf_skb_get_xfrm_state",
				"bpf_skb_load_bytes_relative",
				"bpf_fib_lookup",
				"bpf_skb_cgroup_id",
				"bpf_skb_ancestor_cgroup_id",
				"bpf_sk_lookup_tcp",
				"bpf_sk_lookup_udp",
				"bpf_sk_release",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			SkMsgAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_numa_node_id",
				"bpf_msg_redirect_map",
				"bpf_msg_apply_bytes",
				"bpf_msg_cork_bytes",
				"bpf_msg_pull_data",
				"bpf_msg_redirect_hash",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
				"bpf_msg_push_data",
				"bpf_msg_pop_data",
			},
			SkReuseportAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_skb_load_bytes",
				"bpf_get_numa_node_id",
				"bpf_skb_load_bytes_relative",
				"bpf_sk_select_reuseport",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			SkSkbAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_skb_store_bytes",
				"bpf_tail_call",
				"bpf_skb_load_bytes",
				"bpf_skb_change_tail",
				"bpf_skb_pull_data",
				"bpf_get_numa_node_id",
				"bpf_skb_change_head",
				"bpf_get_socket_cookie",
				"bpf_get_socket_uid",
				"bpf_sk_redirect_map",
				"bpf_sk_redirect_hash",
				"bpf_sk_lookup_tcp",
				"bpf_sk_lookup_udp",
				"bpf_sk_release",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			SockOpsAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_perf_event_output",
				"bpf_get_numa_node_id",
				"bpf_get_socket_cookie",
				"bpf_setsockopt",
				"bpf_sock_map_update",
				"bpf_getsockopt",
				"bpf_sock_ops_cb_flags_set",
				"bpf_sock_hash_update",
				"bpf_get_local_storage",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			SocketFilterAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_skb_load_bytes",
				"bpf_get_numa_node_id",
				"bpf_get_socket_cookie",
				"bpf_get_socket_uid",
				"bpf_skb_load_bytes_relative",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
			TracepointAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_probe_read",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_get_current_pid_tgid",
				"bpf_get_current_uid_gid",
				"bpf_get_current_comm",
				"bpf_perf_event_read",
				"bpf_perf_event_output",
				"bpf_get_stackid",
				"bpf_get_current_task",
				"bpf_probe_write_user",
				"bpf_current_task_under_cgroup",
				"bpf_get_numa_node_id",
				"bpf_probe_read_str",
				"bpf_get_stack",
				"bpf_get_current_cgroup_id",
			},
			XdpAvailableHelpers: []string{
				"bpf_map_lookup_elem",
				"bpf_map_update_elem",
				"bpf_map_delete_elem",
				"bpf_ktime_get_ns",
				"bpf_trace_printk",
				"bpf_get_prandom_u32",
				"bpf_get_smp_processor_id",
				"bpf_tail_call",
				"bpf_redirect",
				"bpf_perf_event_output",
				"bpf_csum_diff",
				"bpf_get_numa_node_id",
				"bpf_xdp_adjust_head",
				"bpf_redirect_map",
				"bpf_xdp_adjust_meta",
				"bpf_xdp_adjust_tail",
				"bpf_fib_lookup",
				"bpf_sk_lookup_tcp",
				"bpf_sk_lookup_udp",
				"bpf_sk_release",
				"bpf_map_push_elem",
				"bpf_map_pop_elem",
				"bpf_map_peek_elem",
			},
		},
		MapTypes: MapTypes{
			HaveArrayMapType:               true,
			HaveArrayOfMapsMapType:         true,
			HaveCgroupArrayMapType:         true,
			HaveCgroupStorageMapType:       true,
			HaveCpumapMapType:              true,
			HaveDevmapMapType:              true,
			HaveHashMapType:                true,
			HaveHashOfMapsMapType:          true,
			HaveLpmTrieMapType:             true,
			HaveLruHashMapType:             true,
			HaveLruPercpuHashMapType:       true,
			HavePercpuArrayMapType:         true,
			HavePercpuCgroupStorageMapType: true,
			HavePercpuHashMapType:          true,
			HavePerfEventArrayMapType:      true,
			HaveProgArrayMapType:           true,
			HaveQueueMapType:               true,
			HaveReuseportSockarrayMapType:  true,
			HaveSkStorageMapType:           false,
			HaveSockhashMapType:            true,
			HaveSockmapMapType:             true,
			HaveStackMapType:               true,
			HaveStackTraceMapType:          true,
			HaveXskmapMapType:              true,
		},
		ProgramTypes: ProgramTypes{
			HaveCgroupDeviceProgType:   true,
			HaveCgroupSkbProgType:      true,
			HaveCgroupSockAddrProgType: true,
			HaveCgroupSockProgType:     true,
			HaveCgroupSysctlProgType:   false,
			HaveFlowDissectorProgType:  true,
			HaveKprobeProgType:         true,
			HaveLircMode2ProgType:      false,
			HaveLwtInProgType:          true,
			HaveLwtOutProgType:         true,
			HaveLwtSeg6LocalProgType:   true,
			HaveLwtXmitProgType:        true,
			HavePerfEventProgType:      true,
			HaveRawTracepointProgType:  true,
			HaveSchedActProgType:       true,
			HaveSchedClsProgType:       true,
			HaveSkMsgProgType:          true,
			HaveSkReuseportProgType:    true,
			HaveSkSkbProgType:          true,
			HaveSockOpsProgType:        true,
			HaveSocketFilterProgType:   true,
			HaveTracepointProgType:     true,
			HaveXdpProgType:            true,
		},
		SyscallConfig: SyscallConfig{
			HaveBpfSyscall: true,
		},
		SystemConfig: SystemConfig{
			ConfigBpf:                    "y",
			ConfigBpfilter:               "y",
			ConfigBpfilterUmh:            "m",
			ConfigBpfEvents:              "y",
			ConfigBpfJit:                 "y",
			ConfigBpfJitAlwaysOn:         "y",
			ConfigBpfKprobeOverride:      "",
			ConfigBpfLircMode2:           "",
			ConfigBpfStreamParser:        "y",
			ConfigBpfSyscall:             "y",
			ConfigCgroups:                "y",
			ConfigCgroupBpf:              "y",
			ConfigCgroupNetClassid:       "y",
			ConfigFtraceSyscalls:         "y",
			ConfigFunctionErrorInjection: "y",
			ConfigHaveEbpfJit:            "y",
			ConfigIpv6Seg6Bpf:            "y",
			ConfigIPRouteClassid:         "y",
			ConfigKprobeEvents:           "y",
			ConfigLwtunnelBpf:            "y",
			ConfigNet:                    "y",
			ConfigNetfilterXtMatchBpf:    "m",
			ConfigNetActBpf:              "m",
			ConfigNetClsAct:              "y",
			ConfigNetClsBpf:              "m",
			ConfigNetSchIngress:          "m",
			ConfigSockCgroupData:         "y",
			ConfigTestBpf:                "",
			ConfigTracing:                "y",
			ConfigUprobeEvents:           "y",
			ConfigXdpSockets:             "y",
			ConfigXfrm:                   "y",
			BpfJitEnable:                 1,
			BpfJitHarden:                 0,
			BpfJitKallsyms:               0,
			BpfJitLimit:                  264241152,
			UnprivilegedBpfDisabled:      0,
		},
	}

	features, err := parseFeatures(out)
	c.Assert(err, IsNil)
	c.Assert(expectedFeatures, checker.DeepEquals, features)
}
