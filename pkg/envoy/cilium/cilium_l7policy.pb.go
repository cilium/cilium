// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cilium/cilium_l7policy.proto

package cilium

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type L7Policy struct {
	// Path to the unix domain socket for the cilium access log.
	AccessLogPath string `protobuf:"bytes,1,opt,name=access_log_path,json=accessLogPath" json:"access_log_path,omitempty"`
	// Cilium endpoint security policy to enforce.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName" json:"policy_name,omitempty"`
	// HTTP response body message for 403 status code.
	// If empty, "Access denied" will be used.
	Denied_403Body string `protobuf:"bytes,3,opt,name=denied_403_body,json=denied403Body" json:"denied_403_body,omitempty"`
	// 'true' if the filter is on ingress listener, 'false' for egress listener.
	// Value from the listener filter will be used if not specified here.
	IsIngress *google_protobuf.BoolValue `protobuf:"bytes,4,opt,name=is_ingress,json=isIngress" json:"is_ingress,omitempty"`
}

func (m *L7Policy) Reset()                    { *m = L7Policy{} }
func (m *L7Policy) String() string            { return proto.CompactTextString(m) }
func (*L7Policy) ProtoMessage()               {}
func (*L7Policy) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *L7Policy) GetAccessLogPath() string {
	if m != nil {
		return m.AccessLogPath
	}
	return ""
}

func (m *L7Policy) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *L7Policy) GetDenied_403Body() string {
	if m != nil {
		return m.Denied_403Body
	}
	return ""
}

func (m *L7Policy) GetIsIngress() *google_protobuf.BoolValue {
	if m != nil {
		return m.IsIngress
	}
	return nil
}

func init() {
	proto.RegisterType((*L7Policy)(nil), "cilium.L7Policy")
}

func init() { proto.RegisterFile("cilium/cilium_l7policy.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8f, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0x95, 0xd2, 0xa6, 0x88, 0xb0, 0xa7, 0x50, 0x44, 0x8b, 0x07, 0xe9, 0x29, 0x5b,
	0xdc, 0x42, 0xf1, 0xba, 0x37, 0xa1, 0x48, 0xe9, 0xc1, 0x83, 0x97, 0x90, 0x4d, 0xc6, 0x34, 0x90,
	0xdd, 0x09, 0xc9, 0x2e, 0xb2, 0x2f, 0xe6, 0xf3, 0x89, 0x19, 0x7b, 0x1a, 0xf8, 0xf8, 0xe6, 0x9f,
	0x7f, 0xd8, 0xbd, 0x76, 0xde, 0x8d, 0x5d, 0x45, 0x43, 0xfa, 0x7d, 0x40, 0xef, 0xf4, 0x24, 0x42,
	0xc4, 0x01, 0xcb, 0x19, 0xe1, 0xd5, 0x83, 0x45, 0xb4, 0x1e, 0xaa, 0x4c, 0xdb, 0xf1, 0xab, 0xfa,
	0x8e, 0x2a, 0x04, 0x88, 0x89, 0xbc, 0xa7, 0x9f, 0x82, 0xcd, 0x0f, 0xfb, 0x63, 0x5e, 0x2d, 0x9f,
	0xd9, 0x9d, 0xd2, 0x1a, 0x52, 0x92, 0x1e, 0xad, 0x0c, 0x6a, 0x38, 0xf3, 0x62, 0x5d, 0x6c, 0x16,
	0xa7, 0x5b, 0xc2, 0x07, 0xb4, 0x47, 0x35, 0x9c, 0xcb, 0x47, 0xb6, 0xa4, 0x63, 0xb2, 0x57, 0x1d,
	0xf0, 0xab, 0xec, 0x30, 0x42, 0xef, 0xaa, 0x83, 0xbf, 0x20, 0x03, 0xbd, 0x03, 0x23, 0x77, 0xdb,
	0x5a, 0xb6, 0x68, 0x26, 0x7e, 0x4d, 0x41, 0x84, 0x77, 0xdb, 0xba, 0x41, 0x33, 0x95, 0xaf, 0x8c,
	0xb9, 0x24, 0x5d, 0x6f, 0x23, 0xa4, 0xc4, 0x6f, 0xd6, 0xc5, 0x66, 0xf9, 0xb2, 0x12, 0x54, 0x59,
	0x5c, 0x2a, 0x8b, 0x06, 0xd1, 0x7f, 0x28, 0x3f, 0xc2, 0x69, 0xe1, 0xd2, 0x1b, 0xc9, 0xcd, 0xfc,
	0xf3, 0xff, 0xc5, 0x76, 0x96, 0xc5, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x92, 0x02, 0xdf, 0xa1,
	0x11, 0x01, 0x00, 0x00,
}
