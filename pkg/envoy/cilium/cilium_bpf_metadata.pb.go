// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cilium/cilium_bpf_metadata.proto

package cilium

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BpfMetadata struct {
	BpfRoot   string `protobuf:"bytes,1,opt,name=bpf_root,json=bpfRoot" json:"bpf_root,omitempty"`
	IsIngress bool   `protobuf:"varint,2,opt,name=is_ingress,json=isIngress" json:"is_ingress,omitempty"`
	Identity  uint32 `protobuf:"varint,3,opt,name=identity" json:"identity,omitempty"`
}

func (m *BpfMetadata) Reset()                    { *m = BpfMetadata{} }
func (m *BpfMetadata) String() string            { return proto.CompactTextString(m) }
func (*BpfMetadata) ProtoMessage()               {}
func (*BpfMetadata) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *BpfMetadata) GetBpfRoot() string {
	if m != nil {
		return m.BpfRoot
	}
	return ""
}

func (m *BpfMetadata) GetIsIngress() bool {
	if m != nil {
		return m.IsIngress
	}
	return false
}

func (m *BpfMetadata) GetIdentity() uint32 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func init() {
	proto.RegisterType((*BpfMetadata)(nil), "cilium.BpfMetadata")
}

func init() { proto.RegisterFile("cilium/cilium_bpf_metadata.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0xce, 0xcc, 0xc9,
	0x2c, 0xcd, 0xd5, 0x87, 0x50, 0xf1, 0x49, 0x05, 0x69, 0xf1, 0xb9, 0xa9, 0x25, 0x89, 0x29, 0x89,
	0x25, 0x89, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x29, 0x29, 0xf1, 0xb2, 0xc4,
	0x9c, 0xcc, 0x94, 0xc4, 0x92, 0x54, 0x7d, 0x18, 0x03, 0xa2, 0x40, 0x29, 0x8f, 0x8b, 0xdb, 0xa9,
	0x20, 0xcd, 0x17, 0xaa, 0x4b, 0x48, 0x85, 0x8b, 0x03, 0x64, 0x4a, 0x51, 0x7e, 0x7e, 0x89, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0xa7, 0x13, 0xe7, 0xae, 0x97, 0x07, 0x98, 0x59, 0x8a, 0x98, 0x14, 0x18,
	0x83, 0xd8, 0x93, 0x0a, 0xd2, 0x82, 0xf2, 0xf3, 0x4b, 0x84, 0x64, 0xb9, 0xb8, 0x32, 0x8b, 0xe3,
	0x33, 0xf3, 0xd2, 0x8b, 0x52, 0x8b, 0x8b, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x82, 0x38, 0x33,
	0x8b, 0x3d, 0x21, 0x02, 0x42, 0x52, 0x5c, 0x1c, 0x99, 0x29, 0xa9, 0x79, 0x25, 0x99, 0x25, 0x95,
	0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xbc, 0x41, 0x70, 0xbe, 0x13, 0x47, 0x14, 0xd4, 0x49, 0x49, 0x6c,
	0x60, 0x07, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xa1, 0x9f, 0x66, 0xc5, 0x00, 0x00,
	0x00,
}
