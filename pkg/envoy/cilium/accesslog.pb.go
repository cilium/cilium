// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cilium/accesslog.proto

package cilium

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Protocol int32

const (
	Protocol_HTTP10 Protocol = 0
	Protocol_HTTP11 Protocol = 1
	Protocol_HTTP2  Protocol = 2
)

var Protocol_name = map[int32]string{
	0: "HTTP10",
	1: "HTTP11",
	2: "HTTP2",
}
var Protocol_value = map[string]int32{
	"HTTP10": 0,
	"HTTP11": 1,
	"HTTP2":  2,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_accesslog_839f667f53529387, []int{0}
}

type EntryType int32

const (
	EntryType_Request  EntryType = 0
	EntryType_Response EntryType = 1
	EntryType_Denied   EntryType = 2
)

var EntryType_name = map[int32]string{
	0: "Request",
	1: "Response",
	2: "Denied",
}
var EntryType_value = map[string]int32{
	"Request":  0,
	"Response": 1,
	"Denied":   2,
}

func (x EntryType) String() string {
	return proto.EnumName(EntryType_name, int32(x))
}
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_accesslog_839f667f53529387, []int{1}
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_accesslog_839f667f53529387, []int{0}
}
func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (dst *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(dst, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HttpLogEntry struct {
	// The time that Cilium filter captured this log entry,
	// in, nanoseconds since 1/1/1970.
	Timestamp    uint64    `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	HttpProtocol Protocol  `protobuf:"varint,2,opt,name=http_protocol,json=httpProtocol,enum=cilium.Protocol" json:"http_protocol,omitempty"`
	EntryType    EntryType `protobuf:"varint,3,opt,name=entry_type,json=entryType,enum=cilium.EntryType" json:"entry_type,omitempty"`
	// Cilium network policy resource name
	PolicyName string `protobuf:"bytes,4,opt,name=policy_name,json=policyName" json:"policy_name,omitempty"`
	// Cilium rule reference
	CiliumRuleRef string `protobuf:"bytes,5,opt,name=cilium_rule_ref,json=ciliumRuleRef" json:"cilium_rule_ref,omitempty"`
	// Cilium security ID of the source
	SourceSecurityId uint32 `protobuf:"varint,6,opt,name=source_security_id,json=sourceSecurityId" json:"source_security_id,omitempty"`
	// These fields record the original source and destination addresses,
	// stored in ipv4:port or [ipv6]:port format.
	SourceAddress      string `protobuf:"bytes,7,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	DestinationAddress string `protobuf:"bytes,8,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	// Request info that is also retained for the response
	Scheme string `protobuf:"bytes,9,opt,name=scheme" json:"scheme,omitempty"`
	Host   string `protobuf:"bytes,10,opt,name=host" json:"host,omitempty"`
	Path   string `protobuf:"bytes,11,opt,name=path" json:"path,omitempty"`
	Method string `protobuf:"bytes,12,opt,name=method" json:"method,omitempty"`
	// Response info
	Status uint32 `protobuf:"varint,13,opt,name=status" json:"status,omitempty"`
	// Request headers not included above
	Headers []*KeyValue `protobuf:"bytes,14,rep,name=headers" json:"headers,omitempty"`
	// 'true' if the request was received by an ingress listener,
	// 'false' if received by an egress listener
	IsIngress            bool     `protobuf:"varint,15,opt,name=is_ingress,json=isIngress" json:"is_ingress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpLogEntry) Reset()         { *m = HttpLogEntry{} }
func (m *HttpLogEntry) String() string { return proto.CompactTextString(m) }
func (*HttpLogEntry) ProtoMessage()    {}
func (*HttpLogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_accesslog_839f667f53529387, []int{1}
}
func (m *HttpLogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpLogEntry.Unmarshal(m, b)
}
func (m *HttpLogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpLogEntry.Marshal(b, m, deterministic)
}
func (dst *HttpLogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpLogEntry.Merge(dst, src)
}
func (m *HttpLogEntry) XXX_Size() int {
	return xxx_messageInfo_HttpLogEntry.Size(m)
}
func (m *HttpLogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpLogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_HttpLogEntry proto.InternalMessageInfo

func (m *HttpLogEntry) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *HttpLogEntry) GetHttpProtocol() Protocol {
	if m != nil {
		return m.HttpProtocol
	}
	return Protocol_HTTP10
}

func (m *HttpLogEntry) GetEntryType() EntryType {
	if m != nil {
		return m.EntryType
	}
	return EntryType_Request
}

func (m *HttpLogEntry) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *HttpLogEntry) GetCiliumRuleRef() string {
	if m != nil {
		return m.CiliumRuleRef
	}
	return ""
}

func (m *HttpLogEntry) GetSourceSecurityId() uint32 {
	if m != nil {
		return m.SourceSecurityId
	}
	return 0
}

func (m *HttpLogEntry) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *HttpLogEntry) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *HttpLogEntry) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *HttpLogEntry) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpLogEntry) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HttpLogEntry) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HttpLogEntry) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *HttpLogEntry) GetHeaders() []*KeyValue {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HttpLogEntry) GetIsIngress() bool {
	if m != nil {
		return m.IsIngress
	}
	return false
}

func init() {
	proto.RegisterType((*KeyValue)(nil), "cilium.KeyValue")
	proto.RegisterType((*HttpLogEntry)(nil), "cilium.HttpLogEntry")
	proto.RegisterEnum("cilium.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("cilium.EntryType", EntryType_name, EntryType_value)
}

func init() { proto.RegisterFile("cilium/accesslog.proto", fileDescriptor_accesslog_839f667f53529387) }

var fileDescriptor_accesslog_839f667f53529387 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0xdd, 0x6e, 0xd4, 0x3e,
	0x10, 0xc5, 0x9b, 0xfd, 0xc8, 0x26, 0xb3, 0x1f, 0xcd, 0x7f, 0xfe, 0xa8, 0xf2, 0x05, 0x88, 0x55,
	0x25, 0xd0, 0x6a, 0x05, 0xdb, 0x76, 0x11, 0x0f, 0x00, 0x02, 0xa9, 0x15, 0x08, 0x55, 0x66, 0xc5,
	0x05, 0x37, 0x91, 0x49, 0xa6, 0x1b, 0x8b, 0x24, 0x0e, 0xb1, 0x83, 0x94, 0xa7, 0xe1, 0x55, 0x51,
	0xec, 0x64, 0xcb, 0xdd, 0x99, 0xdf, 0x9c, 0x33, 0xb6, 0xe5, 0x81, 0x8b, 0x44, 0xe6, 0xb2, 0x29,
	0xae, 0x44, 0x92, 0x90, 0xd6, 0xb9, 0x3a, 0xee, 0xaa, 0x5a, 0x19, 0x85, 0xbe, 0xe3, 0x97, 0x7b,
	0x08, 0x3e, 0x51, 0xfb, 0x4d, 0xe4, 0x0d, 0x61, 0x04, 0xe3, 0x9f, 0xd4, 0x32, 0x6f, 0xed, 0x6d,
	0x42, 0xde, 0x49, 0x7c, 0x02, 0xd3, 0xdf, 0x5d, 0x8b, 0x8d, 0x2c, 0x73, 0xc5, 0xe5, 0x9f, 0x09,
	0x2c, 0x6e, 0x8d, 0xa9, 0x3e, 0xab, 0xe3, 0xc7, 0xd2, 0xd4, 0x2d, 0x3e, 0x85, 0xd0, 0xc8, 0x82,
	0xb4, 0x11, 0x45, 0x65, 0xe3, 0x13, 0xfe, 0x08, 0xf0, 0x2d, 0x2c, 0x33, 0x63, 0xaa, 0xd8, 0x1e,
	0x9c, 0xa8, 0xdc, 0x0e, 0x5b, 0xed, 0xa3, 0x9d, 0xbb, 0xc2, 0xee, 0xbe, 0xe7, 0x7c, 0xd1, 0xd9,
	0x86, 0x0a, 0xaf, 0x01, 0xa8, 0x9b, 0x1e, 0x9b, 0xb6, 0x22, 0x36, 0xb6, 0x99, 0xff, 0x86, 0x8c,
	0x3d, 0xf7, 0xd0, 0x56, 0xc4, 0x43, 0x1a, 0x24, 0x3e, 0x87, 0x79, 0xa5, 0x72, 0x99, 0xb4, 0x71,
	0x29, 0x0a, 0x62, 0x13, 0x7b, 0x67, 0x70, 0xe8, 0x8b, 0x28, 0x08, 0x5f, 0xc2, 0xb9, 0xcb, 0xc7,
	0x75, 0x93, 0x53, 0x5c, 0xd3, 0x03, 0x9b, 0x5a, 0xd3, 0xd2, 0x61, 0xde, 0xe4, 0xc4, 0xe9, 0x01,
	0x5f, 0x01, 0x6a, 0xd5, 0xd4, 0x09, 0xc5, 0x9a, 0x92, 0xa6, 0x96, 0xa6, 0x8d, 0x65, 0xca, 0xfc,
	0xb5, 0xb7, 0x59, 0xf2, 0xc8, 0x75, 0xbe, 0xf6, 0x8d, 0xbb, 0x14, 0x5f, 0xc0, 0xaa, 0x77, 0x8b,
	0x34, 0xad, 0x49, 0x6b, 0x36, 0x73, 0x43, 0x1d, 0x7d, 0xe7, 0x20, 0x5e, 0xc1, 0xff, 0x29, 0x69,
	0x23, 0x4b, 0x61, 0xa4, 0x2a, 0x4f, 0xde, 0xc0, 0x7a, 0xf1, 0x9f, 0xd6, 0x10, 0xb8, 0x00, 0x5f,
	0x27, 0x19, 0x15, 0xc4, 0x42, 0xeb, 0xe9, 0x2b, 0x44, 0x98, 0x64, 0x4a, 0x1b, 0x06, 0x96, 0x5a,
	0xdd, 0xb1, 0x4a, 0x98, 0x8c, 0xcd, 0x1d, 0xeb, 0x74, 0x97, 0x2f, 0xc8, 0x64, 0x2a, 0x65, 0x0b,
	0x97, 0x77, 0x95, 0x9d, 0x6b, 0x84, 0x69, 0x34, 0x5b, 0xda, 0x17, 0xf5, 0x15, 0x6e, 0x61, 0x96,
	0x91, 0x48, 0xa9, 0xd6, 0x6c, 0xb5, 0x1e, 0x6f, 0xe6, 0x8f, 0x3f, 0x34, 0x6c, 0x08, 0x1f, 0x0c,
	0xf8, 0x0c, 0x40, 0xea, 0x58, 0x96, 0x47, 0xfb, 0x86, 0xf3, 0xb5, 0xb7, 0x09, 0x78, 0x28, 0xf5,
	0x9d, 0x03, 0xdb, 0xd7, 0x10, 0x9c, 0xfe, 0x11, 0xc0, 0xbf, 0x3d, 0x1c, 0xee, 0x6f, 0xae, 0xa3,
	0xb3, 0x93, 0xbe, 0x89, 0x3c, 0x0c, 0x61, 0xda, 0xe9, 0x7d, 0x34, 0xda, 0xee, 0x21, 0x3c, 0x7d,
	0x28, 0xce, 0x61, 0xc6, 0xe9, 0x57, 0x43, 0xda, 0x44, 0x67, 0xb8, 0x80, 0x80, 0x93, 0xae, 0x54,
	0xa9, 0x29, 0xf2, 0xba, 0xf8, 0x07, 0x2a, 0x25, 0xa5, 0xd1, 0xe8, 0x7d, 0xf0, 0xbd, 0x5f, 0xe1,
	0x1f, 0xbe, 0x5d, 0xac, 0x37, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x30, 0xad, 0xfa, 0xed, 0xeb,
	0x02, 0x00, 0x00,
}
