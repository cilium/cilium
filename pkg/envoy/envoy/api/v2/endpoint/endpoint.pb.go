// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/api/v2/endpoint/endpoint.proto

/*
Package endpoint is a generated protocol buffer package.

It is generated from these files:
	envoy/api/v2/endpoint/endpoint.proto
	envoy/api/v2/endpoint/load_report.proto

It has these top-level messages:
	Endpoint
	LbEndpoint
	LocalityLbEndpoints
	UpstreamLocalityStats
	EndpointLoadMetricStats
	ClusterStats
*/
package endpoint

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import envoy_api_v2_core "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"
import envoy_api_v2_core1 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"
import envoy_api_v2_core2 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/lyft/protoc-gen-validate/validate"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Upstream host identifier.
type Endpoint struct {
	Address *envoy_api_v2_core.Address `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Endpoint) GetAddress() *envoy_api_v2_core.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// An Endpoint that Envoy can route traffic to.
type LbEndpoint struct {
	// Upstream host identifier
	Endpoint *Endpoint `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	// [#not-implemented-hide:] Optional health status when known and supplied by
	// EDS server.
	HealthStatus envoy_api_v2_core2.HealthStatus `protobuf:"varint,2,opt,name=health_status,json=healthStatus,enum=envoy.api.v2.core.HealthStatus" json:"health_status,omitempty"`
	// The endpoint metadata specifies values that may be used by the load
	// balancer to select endpoints in a cluster for a given request. The filter
	// name should be specified as *envoy.lb*. An example boolean key-value pair
	// is *canary*, providing the optional canary status of the upstream host.
	// This may be matched against in a route's ForwardAction metadata_match field
	// to subset the endpoints considered in cluster load balancing.
	Metadata *envoy_api_v2_core1.Metadata `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	// The optional load balancing weight of the upstream host, in the range 1 -
	// 128. Envoy uses the load balancing weight in some of the built in load
	// balancers. The load balancing weight for an endpoint is divided by the sum
	// of the weights of all endpoints in the endpoint's locality to produce a
	// percentage of traffic for the endpoint. This percentage is then further
	// weighted by the endpoint's locality's load balancing weight from
	// LocalityLbEndpoints. If unspecified, each host is presumed to have equal
	// weight in a locality.
	//
	// .. attention::
	//
	//   The limit of 128 is somewhat arbitrary, but is applied due to performance
	//   concerns with the current implementation and can be removed when
	//   `this issue <https://github.com/envoyproxy/envoy/issues/1285>`_ is fixed.
	LoadBalancingWeight *google_protobuf.UInt32Value `protobuf:"bytes,4,opt,name=load_balancing_weight,json=loadBalancingWeight" json:"load_balancing_weight,omitempty"`
}

func (m *LbEndpoint) Reset()                    { *m = LbEndpoint{} }
func (m *LbEndpoint) String() string            { return proto.CompactTextString(m) }
func (*LbEndpoint) ProtoMessage()               {}
func (*LbEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LbEndpoint) GetEndpoint() *Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *LbEndpoint) GetHealthStatus() envoy_api_v2_core2.HealthStatus {
	if m != nil {
		return m.HealthStatus
	}
	return envoy_api_v2_core2.HealthStatus_UNKNOWN
}

func (m *LbEndpoint) GetMetadata() *envoy_api_v2_core1.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *LbEndpoint) GetLoadBalancingWeight() *google_protobuf.UInt32Value {
	if m != nil {
		return m.LoadBalancingWeight
	}
	return nil
}

// A group of endpoints belonging to a Locality.
// One can have multiple LocalityLbEndpoints for a locality, but this is
// generally only done if the different groups need to have different load
// balancing weights or different priorities.
type LocalityLbEndpoints struct {
	// Identifies location of where the upstream hosts run.
	Locality *envoy_api_v2_core1.Locality `protobuf:"bytes,1,opt,name=locality" json:"locality,omitempty"`
	// The group of endpoints belonging to the locality specified.
	LbEndpoints []*LbEndpoint `protobuf:"bytes,2,rep,name=lb_endpoints,json=lbEndpoints" json:"lb_endpoints,omitempty"`
	// Optional: Per priority/region/zone/sub_zone weight - range 1-128. The load
	// balancing weight for a locality is divided by the sum of the weights of all
	// localities  at the same priority level to produce the effective percentage
	// of traffic for the locality.
	//
	// Weights must be specified for either all localities in a given priority
	// level or none.
	//
	// If unspecified, each locality is presumed to have equal weight in a
	// cluster.
	//
	// .. attention::
	//
	//   The limit of 128 is somewhat arbitrary, but is applied due to performance
	//   concerns with the current implementation and can be removed when
	//   `this issue <https://github.com/envoyproxy/envoy/issues/1285>`_ is fixed.
	LoadBalancingWeight *google_protobuf.UInt32Value `protobuf:"bytes,3,opt,name=load_balancing_weight,json=loadBalancingWeight" json:"load_balancing_weight,omitempty"`
	// Optional: the priority for this LocalityLbEndpoints. If unspecified this will
	// default to the highest priority (0).
	//
	// Under usual circumstances, Envoy will only select endpoints for the highest
	// priority (0). In the event all endpoints for a particular priority are
	// unavailable/unhealthy, Envoy will fail over to selecting endpoints for the
	// next highest priority group.
	//
	// Priorities should range from 0 (highest) to N (lowest) without skipping.
	Priority uint32 `protobuf:"varint,5,opt,name=priority" json:"priority,omitempty"`
}

func (m *LocalityLbEndpoints) Reset()                    { *m = LocalityLbEndpoints{} }
func (m *LocalityLbEndpoints) String() string            { return proto.CompactTextString(m) }
func (*LocalityLbEndpoints) ProtoMessage()               {}
func (*LocalityLbEndpoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LocalityLbEndpoints) GetLocality() *envoy_api_v2_core1.Locality {
	if m != nil {
		return m.Locality
	}
	return nil
}

func (m *LocalityLbEndpoints) GetLbEndpoints() []*LbEndpoint {
	if m != nil {
		return m.LbEndpoints
	}
	return nil
}

func (m *LocalityLbEndpoints) GetLoadBalancingWeight() *google_protobuf.UInt32Value {
	if m != nil {
		return m.LoadBalancingWeight
	}
	return nil
}

func (m *LocalityLbEndpoints) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func init() {
	proto.RegisterType((*Endpoint)(nil), "envoy.api.v2.endpoint.Endpoint")
	proto.RegisterType((*LbEndpoint)(nil), "envoy.api.v2.endpoint.LbEndpoint")
	proto.RegisterType((*LocalityLbEndpoints)(nil), "envoy.api.v2.endpoint.LocalityLbEndpoints")
}

func init() { proto.RegisterFile("envoy/api/v2/endpoint/endpoint.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 448 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xb1, 0x6e, 0xd4, 0x40,
	0x10, 0xc5, 0x77, 0x09, 0x39, 0xed, 0x5d, 0x52, 0x38, 0x44, 0x58, 0x26, 0xca, 0x1d, 0xa7, 0x14,
	0x16, 0xc5, 0xae, 0xe4, 0x20, 0x51, 0xd0, 0x80, 0x05, 0x12, 0xa0, 0xd0, 0x2c, 0x02, 0x24, 0x0a,
	0xac, 0xb1, 0xbd, 0xd8, 0x2b, 0x16, 0xaf, 0x65, 0xef, 0x39, 0x4a, 0xc7, 0x57, 0xf0, 0x0d, 0xf9,
	0x06, 0x2a, 0x4a, 0xbe, 0x82, 0x82, 0x8e, 0xbf, 0x40, 0x5e, 0xef, 0x3a, 0x09, 0xb9, 0xeb, 0xe8,
	0x66, 0x76, 0xde, 0xbc, 0x79, 0xef, 0x69, 0xd1, 0x31, 0x2b, 0x5b, 0x79, 0x4e, 0xa0, 0xe2, 0xa4,
	0x0d, 0x09, 0x2b, 0xb3, 0x4a, 0xf2, 0x52, 0x0d, 0x05, 0xae, 0x6a, 0xa9, 0xa4, 0x7b, 0xa0, 0x51,
	0x18, 0x2a, 0x8e, 0xdb, 0x10, 0xdb, 0xa1, 0x3f, 0xbf, 0xb6, 0x9c, 0xca, 0x9a, 0x11, 0xc8, 0xb2,
	0x9a, 0x35, 0x4d, 0xbf, 0xe7, 0x1f, 0xde, 0x04, 0x24, 0xd0, 0x30, 0x33, 0x3d, 0xbe, 0x39, 0x2d,
	0x18, 0x08, 0x55, 0xc4, 0x69, 0xc1, 0xd2, 0xcf, 0x06, 0x75, 0x94, 0x4b, 0x99, 0x0b, 0x46, 0x74,
	0x97, 0xac, 0x3e, 0x91, 0xb3, 0x1a, 0xaa, 0x8a, 0xd5, 0xf6, 0xc6, 0xdd, 0x16, 0x04, 0xcf, 0x40,
	0x31, 0x62, 0x0b, 0x33, 0xb8, 0x93, 0xcb, 0x5c, 0xea, 0x92, 0x74, 0x55, 0xff, 0xba, 0x7c, 0x82,
	0x26, 0xcf, 0x8d, 0x7e, 0xf7, 0x21, 0xda, 0x31, 0x7a, 0x3d, 0x67, 0xe1, 0x04, 0xd3, 0xd0, 0xc7,
	0xd7, 0x8c, 0x76, 0x92, 0xf0, 0xd3, 0x1e, 0x41, 0x2d, 0x74, 0x79, 0x31, 0x42, 0xe8, 0x34, 0x19,
	0x48, 0x1e, 0xa3, 0x89, 0x0d, 0xc4, 0xb0, 0xcc, 0xf1, 0xda, 0xb8, 0xb0, 0x5d, 0xa1, 0xc3, 0x82,
	0xfb, 0x0c, 0xed, 0x1a, 0xcb, 0x8d, 0x02, 0xb5, 0x6a, 0xbc, 0xd1, 0xc2, 0x09, 0xf6, 0xfe, 0x65,
	0xd0, 0x3a, 0x5e, 0x68, 0xdc, 0x1b, 0x0d, 0xa3, 0xb3, 0xe2, 0x4a, 0xe7, 0x3e, 0x42, 0x93, 0x2f,
	0x4c, 0x41, 0x06, 0x0a, 0xbc, 0xb1, 0x96, 0x70, 0x6f, 0x0d, 0xc1, 0x6b, 0x03, 0xa1, 0x03, 0xd8,
	0xfd, 0x88, 0x0e, 0x84, 0x84, 0x2c, 0x4e, 0x40, 0x40, 0x99, 0xf2, 0x32, 0x8f, 0xcf, 0x18, 0xcf,
	0x0b, 0xe5, 0x6d, 0x69, 0x96, 0x43, 0xdc, 0x67, 0x8f, 0x6d, 0xf6, 0xf8, 0xed, 0xcb, 0x52, 0x9d,
	0x84, 0xef, 0x40, 0xac, 0x58, 0x34, 0xfb, 0xfe, 0xe7, 0xc7, 0x78, 0xe7, 0xc1, 0xb6, 0xf7, 0xd5,
	0x09, 0x1c, 0xba, 0xdf, 0x11, 0x45, 0x96, 0xe7, 0xbd, 0xa6, 0x59, 0x7e, 0x1b, 0xa1, 0xfd, 0x53,
	0x99, 0x82, 0xe0, 0xea, 0xfc, 0x32, 0x32, 0x2d, 0x58, 0x98, 0x67, 0x93, 0xd9, 0x3a, 0xc1, 0x76,
	0x93, 0x0e, 0x60, 0xf7, 0x15, 0x9a, 0x89, 0x24, 0xb6, 0xf1, 0x75, 0x71, 0x8d, 0x83, 0x69, 0x78,
	0x7f, 0x43, 0xe0, 0x97, 0x27, 0xa3, 0xad, 0x9f, 0xbf, 0xe6, 0xb7, 0xe8, 0x54, 0x5c, 0x11, 0xb1,
	0xd1, 0xfc, 0xf8, 0xbf, 0x98, 0x77, 0x7d, 0x34, 0xa9, 0x6a, 0x2e, 0xeb, 0xce, 0xe4, 0xf6, 0xc2,
	0x09, 0x76, 0xe9, 0xd0, 0x47, 0x7b, 0x17, 0xbf, 0x8f, 0x9c, 0x0f, 0xc3, 0x3f, 0x48, 0x6e, 0xeb,
	0x23, 0x27, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x4a, 0x3e, 0x3d, 0x8f, 0x03, 0x00, 0x00,
}
