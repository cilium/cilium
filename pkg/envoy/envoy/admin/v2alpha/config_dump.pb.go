// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/admin/v2alpha/config_dump.proto

package envoy_admin_v2alpha

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v21 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2"
import v2 "github.com/cilium/cilium/pkg/envoy/envoy/config/bootstrap/v2"
import _ "github.com/gogo/protobuf/gogoproto"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The :ref:`/config_dump <operations_admin_interface_config_dump>` admin endpoint uses this wrapper
// message to maintain and serve arbitrary configuration information from any component in Envoy.
type ConfigDump struct {
	// This map is serialized and dumped in its entirety at the
	// :ref:`/config_dump <operations_admin_interface_config_dump>` endpoint.
	//
	// Keys are a short descriptor of the config object they map to. The following keys (and the
	// messages they map to) are currently supported:
	//
	// * *bootstrap*: :ref:`BootstrapConfigDump <envoy_api_msg_admin.v2alpha.BootstrapConfigDump>`
	// * *listeners*: :ref:`ListenersConfigDump <envoy_api_msg_admin.v2alpha.ListenersConfigDump>`
	// * *clusters*: :ref:`ClustersConfigDump <envoy_api_msg_admin.v2alpha.ClustersConfigDump>`
	// * *routes*:  :ref:`RoutesConfigDump <envoy_api_msg_admin.v2alpha.RoutesConfigDump>`
	Configs              map[string]*any.Any `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ConfigDump) Reset()         { *m = ConfigDump{} }
func (m *ConfigDump) String() string { return proto.CompactTextString(m) }
func (*ConfigDump) ProtoMessage()    {}
func (*ConfigDump) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{0}
}
func (m *ConfigDump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigDump.Unmarshal(m, b)
}
func (m *ConfigDump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigDump.Marshal(b, m, deterministic)
}
func (dst *ConfigDump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigDump.Merge(dst, src)
}
func (m *ConfigDump) XXX_Size() int {
	return xxx_messageInfo_ConfigDump.Size(m)
}
func (m *ConfigDump) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigDump.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigDump proto.InternalMessageInfo

func (m *ConfigDump) GetConfigs() map[string]*any.Any {
	if m != nil {
		return m.Configs
	}
	return nil
}

// This message describes the bootstrap configuration that Envoy was started with. This includes
// any CLI overrides that were merged. Bootstrap configuration information can be used to recreate
// the static portions of an Envoy configuration by reusing the output as the bootstrap
// configuration for another Envoy.
type BootstrapConfigDump struct {
	Bootstrap            *v2.Bootstrap `protobuf:"bytes,1,opt,name=bootstrap,proto3" json:"bootstrap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BootstrapConfigDump) Reset()         { *m = BootstrapConfigDump{} }
func (m *BootstrapConfigDump) String() string { return proto.CompactTextString(m) }
func (*BootstrapConfigDump) ProtoMessage()    {}
func (*BootstrapConfigDump) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{1}
}
func (m *BootstrapConfigDump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootstrapConfigDump.Unmarshal(m, b)
}
func (m *BootstrapConfigDump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootstrapConfigDump.Marshal(b, m, deterministic)
}
func (dst *BootstrapConfigDump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootstrapConfigDump.Merge(dst, src)
}
func (m *BootstrapConfigDump) XXX_Size() int {
	return xxx_messageInfo_BootstrapConfigDump.Size(m)
}
func (m *BootstrapConfigDump) XXX_DiscardUnknown() {
	xxx_messageInfo_BootstrapConfigDump.DiscardUnknown(m)
}

var xxx_messageInfo_BootstrapConfigDump proto.InternalMessageInfo

func (m *BootstrapConfigDump) GetBootstrap() *v2.Bootstrap {
	if m != nil {
		return m.Bootstrap
	}
	return nil
}

// Envoy's listener manager fills this message with all currently known listeners. Listener
// configuration information can be used to recreate an Envoy configuration by populating all
// listeners as static listeners or by returning them in a LDS response.
type ListenersConfigDump struct {
	// This is the :ref:`version_info <envoy_api_field_DiscoveryResponse.version_info>` in the
	// last processed LDS discovery response. If there are only static bootstrap listeners, this field
	// will be "".
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// The statically loaded listener configs.
	StaticListeners []*v21.Listener `protobuf:"bytes,2,rep,name=static_listeners,json=staticListeners,proto3" json:"static_listeners,omitempty"`
	// The dynamically loaded active listeners. These are listeners that are available to service
	// data plane traffic.
	DynamicActiveListeners []*ListenersConfigDump_DynamicListener `protobuf:"bytes,3,rep,name=dynamic_active_listeners,json=dynamicActiveListeners,proto3" json:"dynamic_active_listeners,omitempty"`
	// The dynamically loaded warming listeners. These are listeners that are currently undergoing
	// warming in preparation to service data plane traffic. Note that if attempting to recreate an
	// Envoy configuration from a configuration dump, the warming listeners should generally be
	// discarded.
	DynamicWarmingListeners []*ListenersConfigDump_DynamicListener `protobuf:"bytes,4,rep,name=dynamic_warming_listeners,json=dynamicWarmingListeners,proto3" json:"dynamic_warming_listeners,omitempty"`
	// The dynamically loaded draining listeners. These are listeners that are currently undergoing
	// draining in preparation to stop servicing data plane traffic. Note that if attempting to
	// recreate an Envoy configuration from a configuration dump, the draining listeners should
	// generally be discarded.
	DynamicDrainingListeners []*ListenersConfigDump_DynamicListener `protobuf:"bytes,5,rep,name=dynamic_draining_listeners,json=dynamicDrainingListeners,proto3" json:"dynamic_draining_listeners,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                               `json:"-"`
	XXX_unrecognized         []byte                                 `json:"-"`
	XXX_sizecache            int32                                  `json:"-"`
}

func (m *ListenersConfigDump) Reset()         { *m = ListenersConfigDump{} }
func (m *ListenersConfigDump) String() string { return proto.CompactTextString(m) }
func (*ListenersConfigDump) ProtoMessage()    {}
func (*ListenersConfigDump) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{2}
}
func (m *ListenersConfigDump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenersConfigDump.Unmarshal(m, b)
}
func (m *ListenersConfigDump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenersConfigDump.Marshal(b, m, deterministic)
}
func (dst *ListenersConfigDump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenersConfigDump.Merge(dst, src)
}
func (m *ListenersConfigDump) XXX_Size() int {
	return xxx_messageInfo_ListenersConfigDump.Size(m)
}
func (m *ListenersConfigDump) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenersConfigDump.DiscardUnknown(m)
}

var xxx_messageInfo_ListenersConfigDump proto.InternalMessageInfo

func (m *ListenersConfigDump) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *ListenersConfigDump) GetStaticListeners() []*v21.Listener {
	if m != nil {
		return m.StaticListeners
	}
	return nil
}

func (m *ListenersConfigDump) GetDynamicActiveListeners() []*ListenersConfigDump_DynamicListener {
	if m != nil {
		return m.DynamicActiveListeners
	}
	return nil
}

func (m *ListenersConfigDump) GetDynamicWarmingListeners() []*ListenersConfigDump_DynamicListener {
	if m != nil {
		return m.DynamicWarmingListeners
	}
	return nil
}

func (m *ListenersConfigDump) GetDynamicDrainingListeners() []*ListenersConfigDump_DynamicListener {
	if m != nil {
		return m.DynamicDrainingListeners
	}
	return nil
}

// Describes a dynamically loaded cluster via the LDS API.
type ListenersConfigDump_DynamicListener struct {
	// This is the per-resource version information. This version is currently taken from the
	// :ref:`version_info <envoy_api_field_DiscoveryResponse.version_info>` field at the time
	// that the listener was loaded. In the future, discrete per-listener versions may be supported
	// by the API.
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// The listener config.
	Listener             *v21.Listener `protobuf:"bytes,2,opt,name=listener,proto3" json:"listener,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListenersConfigDump_DynamicListener) Reset()         { *m = ListenersConfigDump_DynamicListener{} }
func (m *ListenersConfigDump_DynamicListener) String() string { return proto.CompactTextString(m) }
func (*ListenersConfigDump_DynamicListener) ProtoMessage()    {}
func (*ListenersConfigDump_DynamicListener) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{2, 0}
}
func (m *ListenersConfigDump_DynamicListener) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenersConfigDump_DynamicListener.Unmarshal(m, b)
}
func (m *ListenersConfigDump_DynamicListener) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenersConfigDump_DynamicListener.Marshal(b, m, deterministic)
}
func (dst *ListenersConfigDump_DynamicListener) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenersConfigDump_DynamicListener.Merge(dst, src)
}
func (m *ListenersConfigDump_DynamicListener) XXX_Size() int {
	return xxx_messageInfo_ListenersConfigDump_DynamicListener.Size(m)
}
func (m *ListenersConfigDump_DynamicListener) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenersConfigDump_DynamicListener.DiscardUnknown(m)
}

var xxx_messageInfo_ListenersConfigDump_DynamicListener proto.InternalMessageInfo

func (m *ListenersConfigDump_DynamicListener) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *ListenersConfigDump_DynamicListener) GetListener() *v21.Listener {
	if m != nil {
		return m.Listener
	}
	return nil
}

// Envoy's cluster manager fills this message with all currently known clusters. Cluster
// configuration information can be used to recreate an Envoy configuration by populating all
// clusters as static clusters or by returning them in a CDS response.
type ClustersConfigDump struct {
	// This is the :ref:`version_info <envoy_api_field_DiscoveryResponse.version_info>` in the
	// last processed CDS discovery response. If there are only static bootstrap clusters, this field
	// will be "".
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// The statically loaded cluster configs.
	StaticClusters []*v21.Cluster `protobuf:"bytes,2,rep,name=static_clusters,json=staticClusters,proto3" json:"static_clusters,omitempty"`
	// The dynamically loaded active clusters. These are clusters that are available to service
	// data plane traffic.
	DynamicActiveClusters []*ClustersConfigDump_DynamicCluster `protobuf:"bytes,3,rep,name=dynamic_active_clusters,json=dynamicActiveClusters,proto3" json:"dynamic_active_clusters,omitempty"`
	// The dynamically loaded warming clusters. These are clusters that are currently undergoing
	// warming in preparation to service data plane traffic. Note that if attempting to recreate an
	// Envoy configuration from a configuration dump, the warming clusters should generally be
	// discarded.
	DynamicWarmingClusters []*ClustersConfigDump_DynamicCluster `protobuf:"bytes,4,rep,name=dynamic_warming_clusters,json=dynamicWarmingClusters,proto3" json:"dynamic_warming_clusters,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                             `json:"-"`
	XXX_unrecognized       []byte                               `json:"-"`
	XXX_sizecache          int32                                `json:"-"`
}

func (m *ClustersConfigDump) Reset()         { *m = ClustersConfigDump{} }
func (m *ClustersConfigDump) String() string { return proto.CompactTextString(m) }
func (*ClustersConfigDump) ProtoMessage()    {}
func (*ClustersConfigDump) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{3}
}
func (m *ClustersConfigDump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClustersConfigDump.Unmarshal(m, b)
}
func (m *ClustersConfigDump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClustersConfigDump.Marshal(b, m, deterministic)
}
func (dst *ClustersConfigDump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClustersConfigDump.Merge(dst, src)
}
func (m *ClustersConfigDump) XXX_Size() int {
	return xxx_messageInfo_ClustersConfigDump.Size(m)
}
func (m *ClustersConfigDump) XXX_DiscardUnknown() {
	xxx_messageInfo_ClustersConfigDump.DiscardUnknown(m)
}

var xxx_messageInfo_ClustersConfigDump proto.InternalMessageInfo

func (m *ClustersConfigDump) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *ClustersConfigDump) GetStaticClusters() []*v21.Cluster {
	if m != nil {
		return m.StaticClusters
	}
	return nil
}

func (m *ClustersConfigDump) GetDynamicActiveClusters() []*ClustersConfigDump_DynamicCluster {
	if m != nil {
		return m.DynamicActiveClusters
	}
	return nil
}

func (m *ClustersConfigDump) GetDynamicWarmingClusters() []*ClustersConfigDump_DynamicCluster {
	if m != nil {
		return m.DynamicWarmingClusters
	}
	return nil
}

// Describes a dynamically loaded cluster via the CDS API.
type ClustersConfigDump_DynamicCluster struct {
	// This is the per-resource version information. This version is currently taken from the
	// :ref:`version_info <envoy_api_field_DiscoveryResponse.version_info>` field at the time
	// that the cluster was loaded. In the future, discrete per-cluster versions may be supported by
	// the API.
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// The cluster config.
	Cluster              *v21.Cluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ClustersConfigDump_DynamicCluster) Reset()         { *m = ClustersConfigDump_DynamicCluster{} }
func (m *ClustersConfigDump_DynamicCluster) String() string { return proto.CompactTextString(m) }
func (*ClustersConfigDump_DynamicCluster) ProtoMessage()    {}
func (*ClustersConfigDump_DynamicCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{3, 0}
}
func (m *ClustersConfigDump_DynamicCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClustersConfigDump_DynamicCluster.Unmarshal(m, b)
}
func (m *ClustersConfigDump_DynamicCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClustersConfigDump_DynamicCluster.Marshal(b, m, deterministic)
}
func (dst *ClustersConfigDump_DynamicCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClustersConfigDump_DynamicCluster.Merge(dst, src)
}
func (m *ClustersConfigDump_DynamicCluster) XXX_Size() int {
	return xxx_messageInfo_ClustersConfigDump_DynamicCluster.Size(m)
}
func (m *ClustersConfigDump_DynamicCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_ClustersConfigDump_DynamicCluster.DiscardUnknown(m)
}

var xxx_messageInfo_ClustersConfigDump_DynamicCluster proto.InternalMessageInfo

func (m *ClustersConfigDump_DynamicCluster) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *ClustersConfigDump_DynamicCluster) GetCluster() *v21.Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

// Envoy's RDS implementation fills this message with all currently loaded routes, as described by
// their RouteConfiguration objects. Static routes configured in the bootstrap configuration are
// separated from those configured dynamically via RDS. Route configuration information can be used
// to recreate an Envoy configuration by populating all routes as static routes or by returning them
// in RDS responses.
type RoutesConfigDump struct {
	// The statically loaded route configs.
	StaticRouteConfigs []*v21.RouteConfiguration `protobuf:"bytes,2,rep,name=static_route_configs,json=staticRouteConfigs,proto3" json:"static_route_configs,omitempty"`
	// The dynamically loaded route configs.
	DynamicRouteConfigs  []*RoutesConfigDump_DynamicRouteConfig `protobuf:"bytes,3,rep,name=dynamic_route_configs,json=dynamicRouteConfigs,proto3" json:"dynamic_route_configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *RoutesConfigDump) Reset()         { *m = RoutesConfigDump{} }
func (m *RoutesConfigDump) String() string { return proto.CompactTextString(m) }
func (*RoutesConfigDump) ProtoMessage()    {}
func (*RoutesConfigDump) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{4}
}
func (m *RoutesConfigDump) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutesConfigDump.Unmarshal(m, b)
}
func (m *RoutesConfigDump) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutesConfigDump.Marshal(b, m, deterministic)
}
func (dst *RoutesConfigDump) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutesConfigDump.Merge(dst, src)
}
func (m *RoutesConfigDump) XXX_Size() int {
	return xxx_messageInfo_RoutesConfigDump.Size(m)
}
func (m *RoutesConfigDump) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutesConfigDump.DiscardUnknown(m)
}

var xxx_messageInfo_RoutesConfigDump proto.InternalMessageInfo

func (m *RoutesConfigDump) GetStaticRouteConfigs() []*v21.RouteConfiguration {
	if m != nil {
		return m.StaticRouteConfigs
	}
	return nil
}

func (m *RoutesConfigDump) GetDynamicRouteConfigs() []*RoutesConfigDump_DynamicRouteConfig {
	if m != nil {
		return m.DynamicRouteConfigs
	}
	return nil
}

type RoutesConfigDump_DynamicRouteConfig struct {
	// This is the per-resource version information. This version is currently taken from the
	// :ref:`version_info <envoy_api_field_DiscoveryResponse.version_info>` field at the time that
	// the route configuration was loaded.
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// The route config.
	RouteConfig          *v21.RouteConfiguration `protobuf:"bytes,2,opt,name=route_config,json=routeConfig,proto3" json:"route_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RoutesConfigDump_DynamicRouteConfig) Reset()         { *m = RoutesConfigDump_DynamicRouteConfig{} }
func (m *RoutesConfigDump_DynamicRouteConfig) String() string { return proto.CompactTextString(m) }
func (*RoutesConfigDump_DynamicRouteConfig) ProtoMessage()    {}
func (*RoutesConfigDump_DynamicRouteConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_dump_445d4822386d093a, []int{4, 0}
}
func (m *RoutesConfigDump_DynamicRouteConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutesConfigDump_DynamicRouteConfig.Unmarshal(m, b)
}
func (m *RoutesConfigDump_DynamicRouteConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutesConfigDump_DynamicRouteConfig.Marshal(b, m, deterministic)
}
func (dst *RoutesConfigDump_DynamicRouteConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutesConfigDump_DynamicRouteConfig.Merge(dst, src)
}
func (m *RoutesConfigDump_DynamicRouteConfig) XXX_Size() int {
	return xxx_messageInfo_RoutesConfigDump_DynamicRouteConfig.Size(m)
}
func (m *RoutesConfigDump_DynamicRouteConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutesConfigDump_DynamicRouteConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RoutesConfigDump_DynamicRouteConfig proto.InternalMessageInfo

func (m *RoutesConfigDump_DynamicRouteConfig) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *RoutesConfigDump_DynamicRouteConfig) GetRouteConfig() *v21.RouteConfiguration {
	if m != nil {
		return m.RouteConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*ConfigDump)(nil), "envoy.admin.v2alpha.ConfigDump")
	proto.RegisterMapType((map[string]*any.Any)(nil), "envoy.admin.v2alpha.ConfigDump.ConfigsEntry")
	proto.RegisterType((*BootstrapConfigDump)(nil), "envoy.admin.v2alpha.BootstrapConfigDump")
	proto.RegisterType((*ListenersConfigDump)(nil), "envoy.admin.v2alpha.ListenersConfigDump")
	proto.RegisterType((*ListenersConfigDump_DynamicListener)(nil), "envoy.admin.v2alpha.ListenersConfigDump.DynamicListener")
	proto.RegisterType((*ClustersConfigDump)(nil), "envoy.admin.v2alpha.ClustersConfigDump")
	proto.RegisterType((*ClustersConfigDump_DynamicCluster)(nil), "envoy.admin.v2alpha.ClustersConfigDump.DynamicCluster")
	proto.RegisterType((*RoutesConfigDump)(nil), "envoy.admin.v2alpha.RoutesConfigDump")
	proto.RegisterType((*RoutesConfigDump_DynamicRouteConfig)(nil), "envoy.admin.v2alpha.RoutesConfigDump.DynamicRouteConfig")
}

func init() {
	proto.RegisterFile("envoy/admin/v2alpha/config_dump.proto", fileDescriptor_config_dump_445d4822386d093a)
}

var fileDescriptor_config_dump_445d4822386d093a = []byte{
	// 642 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xc9, 0x47, 0x29, 0x9d, 0x54, 0x6d, 0xe5, 0xb4, 0x69, 0x9a, 0x0b, 0x21, 0x02, 0xa9,
	0x20, 0x64, 0x4b, 0x46, 0x42, 0x15, 0xb7, 0xb6, 0x41, 0x80, 0xd4, 0x03, 0xf2, 0x05, 0x6e, 0xd6,
	0x36, 0x76, 0xdc, 0x15, 0xce, 0xae, 0xb5, 0x5e, 0x1b, 0x8c, 0xfa, 0x48, 0x3c, 0x08, 0x57, 0x5e,
	0xa0, 0xbc, 0x0a, 0x8a, 0x77, 0xd6, 0x5f, 0x4d, 0xa1, 0x48, 0xb9, 0x6d, 0x66, 0x67, 0xfe, 0xbf,
	0xd9, 0xff, 0x4c, 0x5d, 0x78, 0xe6, 0xb3, 0x94, 0x67, 0x16, 0xf1, 0x16, 0x94, 0x59, 0xa9, 0x4d,
	0xc2, 0xe8, 0x8a, 0x58, 0x33, 0xce, 0xe6, 0x34, 0x70, 0xbd, 0x64, 0x11, 0x99, 0x91, 0xe0, 0x92,
	0x1b, 0xfd, 0x3c, 0xcd, 0xcc, 0xd3, 0x4c, 0x4c, 0x1b, 0x0d, 0xb0, 0x36, 0xa2, 0x56, 0x6a, 0x5b,
	0x33, 0x2f, 0x56, 0xc9, 0x8d, 0x78, 0x78, 0x47, 0x5c, 0x14, 0xf1, 0xe7, 0x2a, 0xae, 0xa8, 0xd6,
	0x25, 0xe7, 0x32, 0x96, 0x82, 0x44, 0xcb, 0xa4, 0xe2, 0x07, 0xa6, 0x1e, 0x05, 0x9c, 0x07, 0xa1,
	0x6f, 0xe5, 0xbf, 0x2e, 0x93, 0xb9, 0x45, 0x58, 0x86, 0x57, 0xfb, 0x01, 0x0f, 0x78, 0x7e, 0xb4,
	0x96, 0x27, 0x15, 0x9d, 0xfc, 0x68, 0x01, 0x9c, 0xe7, 0xc2, 0xd3, 0x64, 0x11, 0x19, 0x17, 0xb0,
	0xa9, 0x30, 0xf1, 0xb0, 0x35, 0xee, 0x1c, 0xf7, 0xec, 0x97, 0xe6, 0x8a, 0x97, 0x99, 0x65, 0x05,
	0x1e, 0xe3, 0xb7, 0x4c, 0x8a, 0xec, 0xac, 0xfb, 0xf3, 0xe6, 0xf1, 0x03, 0x47, 0x4b, 0x8c, 0x3e,
	0xc2, 0x76, 0xf5, 0xda, 0xd8, 0x83, 0xce, 0x17, 0x3f, 0x1b, 0xb6, 0xc6, 0xad, 0xe3, 0x2d, 0x67,
	0x79, 0x34, 0x5e, 0xc0, 0x46, 0x4a, 0xc2, 0xc4, 0x1f, 0xb6, 0xc7, 0xad, 0xe3, 0x9e, 0xbd, 0x6f,
	0xaa, 0xfe, 0x4d, 0xdd, 0xbf, 0x79, 0xca, 0x32, 0x47, 0xa5, 0xbc, 0x69, 0x9f, 0xb4, 0x26, 0x2e,
	0xf4, 0xcf, 0xf4, 0x93, 0x2b, 0x6d, 0xbf, 0x87, 0xad, 0xc2, 0x89, 0x5c, 0xbe, 0x67, 0x3f, 0xc5,
	0xc6, 0x55, 0x2f, 0x66, 0x69, 0x54, 0x6a, 0x9b, 0x85, 0x04, 0x36, 0x5c, 0x16, 0x4f, 0x7e, 0x77,
	0xa1, 0x7f, 0x41, 0x63, 0xe9, 0x33, 0x5f, 0xc4, 0x15, 0xc2, 0x13, 0xd8, 0x4e, 0x7d, 0x11, 0x53,
	0xce, 0x5c, 0xca, 0xe6, 0x1c, 0xdf, 0xd0, 0xc3, 0xd8, 0x07, 0x36, 0xe7, 0xc6, 0x3b, 0xd8, 0x8b,
	0x25, 0x91, 0x74, 0xe6, 0x86, 0x5a, 0x60, 0xd8, 0xce, 0x4d, 0x1c, 0x68, 0x13, 0x23, 0xba, 0xc4,
	0x6b, 0x7d, 0xa4, 0xef, 0xaa, 0xaa, 0x82, 0x6a, 0x7c, 0x83, 0xa1, 0x97, 0x31, 0xb2, 0xa0, 0x33,
	0x97, 0xcc, 0x24, 0x4d, 0xfd, 0x8a, 0x60, 0x27, 0x17, 0x3c, 0x59, 0x39, 0x95, 0x15, 0x7d, 0x9b,
	0x53, 0x25, 0xd4, 0x40, 0x0e, 0x50, 0xff, 0x34, 0x97, 0x2f, 0xc9, 0xdf, 0xe1, 0x48, 0x93, 0xbf,
	0x12, 0xb1, 0xa0, 0x2c, 0xa8, 0xa0, 0xbb, 0x6b, 0x41, 0x1f, 0x22, 0xe0, 0x93, 0xd2, 0x2f, 0xd9,
	0xd7, 0x30, 0xd2, 0x6c, 0x4f, 0x10, 0xca, 0xea, 0xf0, 0x8d, 0xb5, 0xc0, 0xb5, 0xaf, 0x53, 0x04,
	0x14, 0x95, 0xa3, 0x2b, 0xd8, 0x6d, 0x94, 0xdc, 0x67, 0xe4, 0x36, 0x3c, 0xd2, 0x2d, 0xe2, 0x06,
	0xdf, 0x31, 0x6a, 0xa7, 0xc8, 0x9b, 0xfc, 0xea, 0x80, 0x71, 0x1e, 0x26, 0xb1, 0xfc, 0xef, 0x05,
	0x9b, 0x02, 0xae, 0x8a, 0x3b, 0xc3, 0x7a, 0xdc, 0xaf, 0x83, 0x3a, 0x14, 0xd5, 0xf1, 0xcd, 0x3b,
	0xaa, 0x46, 0x23, 0x0d, 0x09, 0x87, 0x8d, 0xed, 0x2a, 0xd4, 0xd4, 0x72, 0xbd, 0x5e, 0xfd, 0x27,
	0x7f, 0xab, 0x65, 0xed, 0x71, 0x1d, 0x77, 0x50, 0x5b, 0xad, 0x82, 0x9a, 0x96, 0x3b, 0xad, 0x37,
	0xab, 0xc0, 0x76, 0xd7, 0x80, 0x1d, 0xd4, 0xd7, 0x4a, 0x97, 0x8d, 0x3c, 0xd8, 0xa9, 0xe7, 0xdf,
	0xc7, 0x68, 0x0b, 0x36, 0xb1, 0x39, 0x9c, 0xea, 0x6a, 0x83, 0x1d, 0x9d, 0x35, 0xb9, 0x69, 0xc3,
	0x9e, 0xc3, 0x13, 0xe9, 0x57, 0x27, 0xfa, 0x19, 0xf6, 0x71, 0x5c, 0x62, 0x79, 0xe5, 0xea, 0x0f,
	0xab, 0x9a, 0xd9, 0xb8, 0x2e, 0x99, 0x57, 0xab, 0xe2, 0x44, 0x10, 0x49, 0x39, 0xc3, 0x87, 0x19,
	0x4a, 0xa3, 0x72, 0x1f, 0x1b, 0x02, 0xb4, 0xcb, 0x0d, 0xe9, 0xbf, 0x7d, 0x1d, 0x9a, 0xfd, 0x69,
	0x1f, 0x2b, 0xca, 0x88, 0xec, 0x7b, 0xb7, 0x6e, 0xe2, 0xd1, 0x35, 0x18, 0xb7, 0x0b, 0xee, 0x63,
	0xe6, 0x39, 0x6c, 0x57, 0x9b, 0x44, 0x47, 0xff, 0xf9, 0x7c, 0xa7, 0x27, 0xca, 0xd8, 0xe5, 0xc3,
	0xfc, 0x1f, 0xc2, 0xab, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x91, 0xa4, 0x3c, 0xaf, 0x8f, 0x07,
	0x00, 0x00,
}
