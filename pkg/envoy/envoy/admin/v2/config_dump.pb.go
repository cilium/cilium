// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/admin/v2/config_dump.proto

/*
Package envoy_admin_v2 is a generated protocol buffer package.

It is generated from these files:
	envoy/admin/v2/config_dump.proto

It has these top-level messages:
	ConfigDump
	RouteConfigDump
*/
package envoy_admin_v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import envoy_api_v21 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The /config_dump admin endpoint uses this wrapper message to maintain and serve arbitrary
// configuration information from any component in Envoy.
// TODO(jsedgwick) In the future, we may want to formalize this further with an RPC for config_dump,
// and perhaps even with an RPC per config type. That strategy across all endpoints will allow for
// more flexibility w.r.t. protocol, serialization, parameters, etc.
type ConfigDump struct {
	// This map is serialized and dumped in its entirety at the /config_dump endpoint.
	//
	// Keys should be a short descriptor of the config object they map to. For example, envoy's HTTP
	// routing subsystem might use "routes" as the key for its config, for which it uses the message
	// RouteConfigDump as defined below. In the future, the key will also be used to filter the output
	// of the /config_dump endpoint.
	Configs map[string]*google_protobuf.Any `protobuf:"bytes,1,rep,name=configs" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ConfigDump) Reset()                    { *m = ConfigDump{} }
func (m *ConfigDump) String() string            { return proto.CompactTextString(m) }
func (*ConfigDump) ProtoMessage()               {}
func (*ConfigDump) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConfigDump) GetConfigs() map[string]*google_protobuf.Any {
	if m != nil {
		return m.Configs
	}
	return nil
}

// Envoy's RDS implementation fills this message with all currently loaded routes, as described by
// their RouteConnfiguration objects. Static routes configured in the bootstrap configuration are
// separated from those configured dynamically via RDS. This message is available at the
// /config_dump admin endpoint.
type RouteConfigDump struct {
	StaticRouteConfigs  []*envoy_api_v21.RouteConfiguration `protobuf:"bytes,1,rep,name=static_route_configs,json=staticRouteConfigs" json:"static_route_configs,omitempty"`
	DynamicRouteConfigs []*envoy_api_v21.RouteConfiguration `protobuf:"bytes,2,rep,name=dynamic_route_configs,json=dynamicRouteConfigs" json:"dynamic_route_configs,omitempty"`
}

func (m *RouteConfigDump) Reset()                    { *m = RouteConfigDump{} }
func (m *RouteConfigDump) String() string            { return proto.CompactTextString(m) }
func (*RouteConfigDump) ProtoMessage()               {}
func (*RouteConfigDump) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RouteConfigDump) GetStaticRouteConfigs() []*envoy_api_v21.RouteConfiguration {
	if m != nil {
		return m.StaticRouteConfigs
	}
	return nil
}

func (m *RouteConfigDump) GetDynamicRouteConfigs() []*envoy_api_v21.RouteConfiguration {
	if m != nil {
		return m.DynamicRouteConfigs
	}
	return nil
}

func init() {
	proto.RegisterType((*ConfigDump)(nil), "envoy.admin.v2.ConfigDump")
	proto.RegisterType((*RouteConfigDump)(nil), "envoy.admin.v2.RouteConfigDump")
}

func init() { proto.RegisterFile("envoy/admin/v2/config_dump.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x8f, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0xcd, 0x8c, 0x3f, 0x98, 0x11, 0x95, 0x58, 0xa5, 0x76, 0x63, 0x99, 0x8d, 0xc5, 0x45,
	0x02, 0x75, 0x23, 0xee, 0xfc, 0xc3, 0xad, 0x74, 0x25, 0x6e, 0x4a, 0x66, 0xda, 0x29, 0xc1, 0x69,
	0x6e, 0x69, 0x93, 0x42, 0x9e, 0xc8, 0x47, 0xd1, 0xa7, 0xf0, 0x59, 0xa4, 0x49, 0x8b, 0x1d, 0x5c,
	0xb9, 0x3b, 0xdc, 0x73, 0xee, 0x77, 0xcf, 0xc5, 0x61, 0x2e, 0x5b, 0x30, 0x8c, 0x67, 0xa5, 0x90,
	0xac, 0x8d, 0xd9, 0x12, 0xe4, 0x4a, 0x14, 0x69, 0xa6, 0xcb, 0x8a, 0x56, 0x35, 0x28, 0x20, 0x87,
	0x36, 0x41, 0x6d, 0x82, 0xb6, 0x71, 0x70, 0x5e, 0x00, 0x14, 0xeb, 0x9c, 0x59, 0x77, 0xa1, 0x57,
	0x8c, 0x4b, 0xe3, 0xa2, 0xc1, 0x59, 0x0f, 0xab, 0x44, 0x87, 0xaa, 0xb3, 0xa6, 0x9f, 0x7b, 0x05,
	0x14, 0x60, 0x25, 0xeb, 0x94, 0x9b, 0xce, 0x3f, 0x10, 0xc6, 0x0f, 0xf6, 0xdc, 0xa3, 0x2e, 0x2b,
	0xf2, 0x8c, 0xf7, 0xdc, 0xf1, 0xc6, 0x47, 0xe1, 0x34, 0x9a, 0xc5, 0x97, 0x74, 0xf3, 0x32, 0xfd,
	0x0d, 0xf7, 0xb2, 0x79, 0x92, 0xaa, 0x36, 0xf7, 0xdb, 0x5f, 0xdf, 0x17, 0x5b, 0xc9, 0xb0, 0x1d,
	0xbc, 0xe0, 0x83, 0xb1, 0x4d, 0x8e, 0xf1, 0xf4, 0x3d, 0x37, 0x3e, 0x0a, 0x51, 0xb4, 0x9f, 0x74,
	0x92, 0x5c, 0xe1, 0x9d, 0x96, 0xaf, 0x75, 0xee, 0x4f, 0x42, 0x14, 0xcd, 0x62, 0x8f, 0xba, 0x97,
	0xe8, 0xf0, 0x12, 0xbd, 0x93, 0x26, 0x71, 0x91, 0xdb, 0xc9, 0x0d, 0x9a, 0x7f, 0x22, 0x7c, 0x94,
	0x80, 0x56, 0xf9, 0xa8, 0xee, 0x2b, 0xf6, 0x1a, 0xc5, 0x95, 0x58, 0xa6, 0x75, 0xe7, 0xa4, 0x9b,
	0xdd, 0xc3, 0xa1, 0x7b, 0x25, 0xba, 0xe6, 0xa3, 0x65, 0x5d, 0x73, 0x25, 0x40, 0xf6, 0xa5, 0x89,
	0x63, 0x8c, 0xfc, 0x86, 0xbc, 0xe1, 0xd3, 0xcc, 0x48, 0x5e, 0xfe, 0x41, 0x4f, 0xfe, 0x85, 0x3e,
	0xe9, 0x21, 0x63, 0xf6, 0x62, 0xd7, 0xbe, 0x78, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0x59, 0x10,
	0xda, 0x25, 0xf7, 0x01, 0x00, 0x00,
}
