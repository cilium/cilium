// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/transcoder/v2/transcoder.proto

/*
Package v2 is a generated protocol buffer package.

It is generated from these files:
	envoy/config/filter/http/transcoder/v2/transcoder.proto

It has these top-level messages:
	GrpcJsonTranscoder
*/
package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GrpcJsonTranscoder struct {
	// Types that are valid to be assigned to DescriptorSet:
	//	*GrpcJsonTranscoder_ProtoDescriptor
	//	*GrpcJsonTranscoder_ProtoDescriptorBin
	DescriptorSet isGrpcJsonTranscoder_DescriptorSet `protobuf_oneof:"descriptor_set"`
	// A list of strings that supplies the service names that the
	// transcoder will translate. If the service name doesn't exist in ``proto_descriptor``, Envoy
	// will fail at startup. The ``proto_descriptor`` may contain more services than the service names
	// specified here, but they won't be translated.
	Services []string `protobuf:"bytes,2,rep,name=services" json:"services,omitempty"`
	// Control options for response JSON. These options are passed directly to
	// `JsonPrintOptions <https://developers.google.com/protocol-buffers/docs/reference/cpp/
	// google.protobuf.util.json_util#JsonPrintOptions>`_.
	PrintOptions *GrpcJsonTranscoder_PrintOptions `protobuf:"bytes,3,opt,name=print_options,json=printOptions" json:"print_options,omitempty"`
}

func (m *GrpcJsonTranscoder) Reset()                    { *m = GrpcJsonTranscoder{} }
func (m *GrpcJsonTranscoder) String() string            { return proto.CompactTextString(m) }
func (*GrpcJsonTranscoder) ProtoMessage()               {}
func (*GrpcJsonTranscoder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isGrpcJsonTranscoder_DescriptorSet interface {
	isGrpcJsonTranscoder_DescriptorSet()
}

type GrpcJsonTranscoder_ProtoDescriptor struct {
	ProtoDescriptor string `protobuf:"bytes,1,opt,name=proto_descriptor,json=protoDescriptor,oneof"`
}
type GrpcJsonTranscoder_ProtoDescriptorBin struct {
	ProtoDescriptorBin []byte `protobuf:"bytes,4,opt,name=proto_descriptor_bin,json=protoDescriptorBin,proto3,oneof"`
}

func (*GrpcJsonTranscoder_ProtoDescriptor) isGrpcJsonTranscoder_DescriptorSet()    {}
func (*GrpcJsonTranscoder_ProtoDescriptorBin) isGrpcJsonTranscoder_DescriptorSet() {}

func (m *GrpcJsonTranscoder) GetDescriptorSet() isGrpcJsonTranscoder_DescriptorSet {
	if m != nil {
		return m.DescriptorSet
	}
	return nil
}

func (m *GrpcJsonTranscoder) GetProtoDescriptor() string {
	if x, ok := m.GetDescriptorSet().(*GrpcJsonTranscoder_ProtoDescriptor); ok {
		return x.ProtoDescriptor
	}
	return ""
}

func (m *GrpcJsonTranscoder) GetProtoDescriptorBin() []byte {
	if x, ok := m.GetDescriptorSet().(*GrpcJsonTranscoder_ProtoDescriptorBin); ok {
		return x.ProtoDescriptorBin
	}
	return nil
}

func (m *GrpcJsonTranscoder) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *GrpcJsonTranscoder) GetPrintOptions() *GrpcJsonTranscoder_PrintOptions {
	if m != nil {
		return m.PrintOptions
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GrpcJsonTranscoder) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GrpcJsonTranscoder_OneofMarshaler, _GrpcJsonTranscoder_OneofUnmarshaler, _GrpcJsonTranscoder_OneofSizer, []interface{}{
		(*GrpcJsonTranscoder_ProtoDescriptor)(nil),
		(*GrpcJsonTranscoder_ProtoDescriptorBin)(nil),
	}
}

func _GrpcJsonTranscoder_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GrpcJsonTranscoder)
	// descriptor_set
	switch x := m.DescriptorSet.(type) {
	case *GrpcJsonTranscoder_ProtoDescriptor:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ProtoDescriptor)
	case *GrpcJsonTranscoder_ProtoDescriptorBin:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ProtoDescriptorBin)
	case nil:
	default:
		return fmt.Errorf("GrpcJsonTranscoder.DescriptorSet has unexpected type %T", x)
	}
	return nil
}

func _GrpcJsonTranscoder_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GrpcJsonTranscoder)
	switch tag {
	case 1: // descriptor_set.proto_descriptor
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.DescriptorSet = &GrpcJsonTranscoder_ProtoDescriptor{x}
		return true, err
	case 4: // descriptor_set.proto_descriptor_bin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.DescriptorSet = &GrpcJsonTranscoder_ProtoDescriptorBin{x}
		return true, err
	default:
		return false, nil
	}
}

func _GrpcJsonTranscoder_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GrpcJsonTranscoder)
	// descriptor_set
	switch x := m.DescriptorSet.(type) {
	case *GrpcJsonTranscoder_ProtoDescriptor:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ProtoDescriptor)))
		n += len(x.ProtoDescriptor)
	case *GrpcJsonTranscoder_ProtoDescriptorBin:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ProtoDescriptorBin)))
		n += len(x.ProtoDescriptorBin)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GrpcJsonTranscoder_PrintOptions struct {
	// Whether to add spaces, line breaks and indentation to make the JSON
	// output easy to read. Defaults to false.
	AddWhitespace bool `protobuf:"varint,1,opt,name=add_whitespace,json=addWhitespace" json:"add_whitespace,omitempty"`
	// Whether to always print primitive fields. By default primitive
	// fields with default values will be omitted in JSON output. For
	// example, an int32 field set to 0 will be omitted. Setting this flag to
	// true will override the default behavior and print primitive fields
	// regardless of their values. Defaults to false.
	AlwaysPrintPrimitiveFields bool `protobuf:"varint,2,opt,name=always_print_primitive_fields,json=alwaysPrintPrimitiveFields" json:"always_print_primitive_fields,omitempty"`
	// Whether to always print enums as ints. By default they are rendered
	// as strings. Defaults to false.
	AlwaysPrintEnumsAsInts bool `protobuf:"varint,3,opt,name=always_print_enums_as_ints,json=alwaysPrintEnumsAsInts" json:"always_print_enums_as_ints,omitempty"`
	// Whether to preserve proto field names. By default protobuf will
	// generate JSON field names using the ``json_name`` option, or lower camel case,
	// in that order. Setting this flag will preserve the original field names. Defaults to false.
	PreserveProtoFieldNames bool `protobuf:"varint,4,opt,name=preserve_proto_field_names,json=preserveProtoFieldNames" json:"preserve_proto_field_names,omitempty"`
}

func (m *GrpcJsonTranscoder_PrintOptions) Reset()         { *m = GrpcJsonTranscoder_PrintOptions{} }
func (m *GrpcJsonTranscoder_PrintOptions) String() string { return proto.CompactTextString(m) }
func (*GrpcJsonTranscoder_PrintOptions) ProtoMessage()    {}
func (*GrpcJsonTranscoder_PrintOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func (m *GrpcJsonTranscoder_PrintOptions) GetAddWhitespace() bool {
	if m != nil {
		return m.AddWhitespace
	}
	return false
}

func (m *GrpcJsonTranscoder_PrintOptions) GetAlwaysPrintPrimitiveFields() bool {
	if m != nil {
		return m.AlwaysPrintPrimitiveFields
	}
	return false
}

func (m *GrpcJsonTranscoder_PrintOptions) GetAlwaysPrintEnumsAsInts() bool {
	if m != nil {
		return m.AlwaysPrintEnumsAsInts
	}
	return false
}

func (m *GrpcJsonTranscoder_PrintOptions) GetPreserveProtoFieldNames() bool {
	if m != nil {
		return m.PreserveProtoFieldNames
	}
	return false
}

func init() {
	proto.RegisterType((*GrpcJsonTranscoder)(nil), "envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder")
	proto.RegisterType((*GrpcJsonTranscoder_PrintOptions)(nil), "envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/transcoder/v2/transcoder.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xc1, 0x6a, 0x14, 0x31,
	0x1c, 0xc6, 0x9b, 0xdd, 0xad, 0x4c, 0xe3, 0xb6, 0x4a, 0x10, 0x77, 0x19, 0x10, 0x16, 0xc1, 0x32,
	0x20, 0x64, 0x60, 0x3c, 0x08, 0x7a, 0xea, 0xa0, 0xb6, 0x7a, 0xd0, 0x65, 0x10, 0x04, 0x2f, 0x21,
	0x9d, 0xfc, 0xd7, 0x06, 0x66, 0x93, 0x90, 0xc4, 0x29, 0x7d, 0x0d, 0x4f, 0x3e, 0x8a, 0x78, 0xea,
	0xeb, 0xf4, 0xe8, 0x1b, 0x48, 0x12, 0x76, 0x18, 0xeb, 0xa5, 0xb7, 0xc9, 0x7c, 0xdf, 0xef, 0xfb,
	0xe7, 0xcb, 0x1f, 0xbf, 0x04, 0xd5, 0xeb, 0xab, 0xb2, 0xd5, 0x6a, 0x23, 0xbf, 0x95, 0x1b, 0xd9,
	0x79, 0xb0, 0xe5, 0x85, 0xf7, 0xa6, 0xf4, 0x96, 0x2b, 0xd7, 0x6a, 0x01, 0xb6, 0xec, 0xab, 0xd1,
	0x89, 0x1a, 0xab, 0xbd, 0x26, 0xc7, 0x11, 0xa4, 0x09, 0xa4, 0x09, 0xa4, 0x01, 0xa4, 0x23, 0x6b,
	0x5f, 0xe5, 0x8b, 0x9e, 0x77, 0x52, 0x70, 0x0f, 0xe5, 0xee, 0x23, 0x05, 0x3c, 0xfd, 0x39, 0xc3,
	0xe4, 0xd4, 0x9a, 0xf6, 0x83, 0xd3, 0xea, 0xf3, 0x80, 0x90, 0xe7, 0xf8, 0x61, 0xd4, 0x99, 0x00,
	0xd7, 0x5a, 0x69, 0xbc, 0xb6, 0x4b, 0xb4, 0x42, 0xc5, 0xc1, 0xd9, 0x5e, 0xf3, 0x20, 0x2a, 0x6f,
	0x06, 0x81, 0x54, 0xf8, 0xd1, 0x6d, 0x33, 0x3b, 0x97, 0x6a, 0x39, 0x5b, 0xa1, 0x62, 0x7e, 0xb6,
	0xd7, 0x90, 0x5b, 0x40, 0x2d, 0x15, 0x39, 0xc6, 0x99, 0x03, 0xdb, 0xcb, 0x16, 0xdc, 0x72, 0xb2,
	0x9a, 0x16, 0x07, 0x35, 0xfe, 0x7d, 0x73, 0x3d, 0xdd, 0xff, 0x81, 0x26, 0x19, 0x6a, 0x06, 0x8d,
	0x74, 0xf8, 0xd0, 0x58, 0xa9, 0x3c, 0xd3, 0xc6, 0x4b, 0xad, 0xdc, 0x72, 0xba, 0x42, 0xc5, 0xfd,
	0xea, 0x94, 0xde, 0xad, 0x38, 0xfd, 0xbf, 0x1b, 0x5d, 0x87, 0xbc, 0x4f, 0x29, 0xae, 0x99, 0x9b,
	0xd1, 0x29, 0xff, 0x83, 0xf0, 0x7c, 0x2c, 0x93, 0x67, 0xf8, 0x88, 0x0b, 0xc1, 0x2e, 0x2f, 0xa4,
	0x07, 0x67, 0x78, 0x0b, 0xf1, 0x15, 0xb2, 0xe6, 0x90, 0x0b, 0xf1, 0x65, 0xf8, 0x49, 0x4e, 0xf0,
	0x13, 0xde, 0x5d, 0xf2, 0x2b, 0xc7, 0xd2, 0x65, 0x8d, 0x95, 0x5b, 0xe9, 0x65, 0x0f, 0x6c, 0x23,
	0xa1, 0x13, 0xa1, 0x62, 0xa0, 0xf2, 0x64, 0x8a, 0x13, 0xd6, 0x3b, 0xcb, 0xbb, 0xe8, 0x20, 0xaf,
	0x70, 0xfe, 0x4f, 0x04, 0xa8, 0xef, 0x5b, 0xc7, 0xb8, 0x63, 0x52, 0xf9, 0xd4, 0x3a, 0x6b, 0x1e,
	0x8f, 0xf8, 0xb7, 0x41, 0x3f, 0x71, 0xef, 0x95, 0x77, 0xe4, 0x35, 0xce, 0x8d, 0x85, 0xf0, 0x66,
	0xc0, 0xd2, 0x26, 0xe2, 0x58, 0xa6, 0xf8, 0x16, 0x5c, 0x5c, 0x43, 0xd6, 0x2c, 0x76, 0x8e, 0x75,
	0x30, 0xc4, 0xa1, 0x1f, 0x83, 0x5c, 0x2f, 0xf0, 0xd1, 0x68, 0x6f, 0x0e, 0x3c, 0xd9, 0xff, 0x75,
	0x73, 0x3d, 0x45, 0xf5, 0xec, 0xeb, 0xa4, 0xaf, 0xce, 0xef, 0xc5, 0xc0, 0x17, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xa1, 0x29, 0x9d, 0xa9, 0xa3, 0x02, 0x00, 0x00,
}
