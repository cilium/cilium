// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/ext_authz/v2alpha/ext_authz.proto

/*
Package v2alpha is a generated protocol buffer package.

It is generated from these files:
	envoy/config/filter/http/ext_authz/v2alpha/ext_authz.proto

It has these top-level messages:
	ExtAuthz
	HttpService
*/
package v2alpha

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import envoy_api_v2_core1 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"
import envoy_api_v2_core2 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// External Authorization filter calls out to an external service over either:
//
//  1. gRPC Authorization API defined by :ref:`CheckRequest
//     <envoy_api_msg_service.auth.v2alpha.CheckRequest>`.
//  2. Raw HTTP Authorization server by passing the request headers to the service.
//
// A failed check will cause this filter to close the HTTP request normally with 403 (Forbidden),
// unless a different status code has been indicated in the authorization response.
type ExtAuthz struct {
	// Types that are valid to be assigned to Services:
	//	*ExtAuthz_GrpcService
	//	*ExtAuthz_HttpService
	Services isExtAuthz_Services `protobuf_oneof:"services"`
	// The filter's behaviour in case the external authorization service does
	// not respond back. When it is set to true, Envoy will also allow traffic in case of
	// communication failure between authorization service and the proxy.
	// Defaults to false.
	FailureModeAllow bool `protobuf:"varint,2,opt,name=failure_mode_allow,json=failureModeAllow" json:"failure_mode_allow,omitempty"`
}

func (m *ExtAuthz) Reset()                    { *m = ExtAuthz{} }
func (m *ExtAuthz) String() string            { return proto.CompactTextString(m) }
func (*ExtAuthz) ProtoMessage()               {}
func (*ExtAuthz) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isExtAuthz_Services interface {
	isExtAuthz_Services()
}

type ExtAuthz_GrpcService struct {
	GrpcService *envoy_api_v2_core1.GrpcService `protobuf:"bytes,1,opt,name=grpc_service,json=grpcService,oneof"`
}
type ExtAuthz_HttpService struct {
	HttpService *HttpService `protobuf:"bytes,3,opt,name=http_service,json=httpService,oneof"`
}

func (*ExtAuthz_GrpcService) isExtAuthz_Services() {}
func (*ExtAuthz_HttpService) isExtAuthz_Services() {}

func (m *ExtAuthz) GetServices() isExtAuthz_Services {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *ExtAuthz) GetGrpcService() *envoy_api_v2_core1.GrpcService {
	if x, ok := m.GetServices().(*ExtAuthz_GrpcService); ok {
		return x.GrpcService
	}
	return nil
}

func (m *ExtAuthz) GetHttpService() *HttpService {
	if x, ok := m.GetServices().(*ExtAuthz_HttpService); ok {
		return x.HttpService
	}
	return nil
}

func (m *ExtAuthz) GetFailureModeAllow() bool {
	if m != nil {
		return m.FailureModeAllow
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExtAuthz) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExtAuthz_OneofMarshaler, _ExtAuthz_OneofUnmarshaler, _ExtAuthz_OneofSizer, []interface{}{
		(*ExtAuthz_GrpcService)(nil),
		(*ExtAuthz_HttpService)(nil),
	}
}

func _ExtAuthz_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExtAuthz)
	// services
	switch x := m.Services.(type) {
	case *ExtAuthz_GrpcService:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GrpcService); err != nil {
			return err
		}
	case *ExtAuthz_HttpService:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HttpService); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExtAuthz.Services has unexpected type %T", x)
	}
	return nil
}

func _ExtAuthz_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExtAuthz)
	switch tag {
	case 1: // services.grpc_service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(envoy_api_v2_core1.GrpcService)
		err := b.DecodeMessage(msg)
		m.Services = &ExtAuthz_GrpcService{msg}
		return true, err
	case 3: // services.http_service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HttpService)
		err := b.DecodeMessage(msg)
		m.Services = &ExtAuthz_HttpService{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExtAuthz_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExtAuthz)
	// services
	switch x := m.Services.(type) {
	case *ExtAuthz_GrpcService:
		s := proto.Size(x.GrpcService)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExtAuthz_HttpService:
		s := proto.Size(x.HttpService)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// External Authorization filter calls out to an upstream authorization server by passing the raw
// HTTP request headers to the server. This allows the authorization service to take a decision
// whether the request is authorized or not.
//
// A successful check allows the authorization service adding or overriding headers from the
// original request before dispatching it to the upstream. This is done by including the headers in
// the response sent back from the authorization service to the filter. Note that `Status`,
// `Method`, `Path` and `Content Length` response headers are automatically removed from this
// response by the filter. If other headers need be deleted, they should be specified in
// `response_headers_to_remove` field.
//
// A failed check will cause this filter to close the HTTP request normally with 403 (Forbidden),
// unless a different status code has been indicated by the authorization service via response
// headers. The HTTP service also allows the authorization filter to also pass data from the
// response body to the downstream client in case of a denied request.
type HttpService struct {
	// Sets the HTTP server URI which the authorization requests must be sent to.
	ServerUri *envoy_api_v2_core2.HttpUri `protobuf:"bytes,1,opt,name=server_uri,json=serverUri" json:"server_uri,omitempty"`
	// Sets an optional prefix to the value of authorization request header `path`.
	PathPrefix string `protobuf:"bytes,2,opt,name=path_prefix,json=pathPrefix" json:"path_prefix,omitempty"`
	// Sets a list of headers that should be not be sent *from the authorization server* to the
	// upstream.
	ResponseHeadersToRemove []string `protobuf:"bytes,3,rep,name=response_headers_to_remove,json=responseHeadersToRemove" json:"response_headers_to_remove,omitempty"`
}

func (m *HttpService) Reset()                    { *m = HttpService{} }
func (m *HttpService) String() string            { return proto.CompactTextString(m) }
func (*HttpService) ProtoMessage()               {}
func (*HttpService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HttpService) GetServerUri() *envoy_api_v2_core2.HttpUri {
	if m != nil {
		return m.ServerUri
	}
	return nil
}

func (m *HttpService) GetPathPrefix() string {
	if m != nil {
		return m.PathPrefix
	}
	return ""
}

func (m *HttpService) GetResponseHeadersToRemove() []string {
	if m != nil {
		return m.ResponseHeadersToRemove
	}
	return nil
}

func init() {
	proto.RegisterType((*ExtAuthz)(nil), "envoy.config.filter.http.ext_authz.v2alpha.ExtAuthz")
	proto.RegisterType((*HttpService)(nil), "envoy.config.filter.http.ext_authz.v2alpha.HttpService")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/ext_authz/v2alpha/ext_authz.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcd, 0x6a, 0xe3, 0x30,
	0x14, 0x85, 0xc7, 0x13, 0x98, 0x89, 0xe5, 0x2c, 0x06, 0x6d, 0x26, 0x78, 0x31, 0x13, 0xc2, 0x2c,
	0xc2, 0x50, 0x24, 0x70, 0x17, 0xa5, 0xed, 0x2a, 0x29, 0xa5, 0xd9, 0x14, 0x8a, 0xdb, 0x6c, 0x4a,
	0x41, 0xa8, 0xce, 0x75, 0x2c, 0x70, 0x22, 0x71, 0xad, 0xb8, 0x69, 0x1f, 0xa8, 0xaf, 0xd6, 0xd7,
	0x28, 0xb2, 0x1c, 0x1c, 0x68, 0x17, 0x5d, 0xea, 0xdc, 0x73, 0xbe, 0xfb, 0x23, 0x72, 0x06, 0x9b,
	0x5a, 0x3f, 0xf3, 0x4c, 0x6f, 0x72, 0xb5, 0xe2, 0xb9, 0x2a, 0x2d, 0x20, 0x2f, 0xac, 0x35, 0x1c,
	0x76, 0x56, 0xc8, 0xad, 0x2d, 0x5e, 0x78, 0x9d, 0xc8, 0xd2, 0x14, 0xb2, 0x53, 0x98, 0x41, 0x6d,
	0x35, 0xfd, 0xdf, 0x64, 0x99, 0xcf, 0x32, 0x9f, 0x65, 0x2e, 0xcb, 0x3a, 0x67, 0x9b, 0x8d, 0xff,
	0xf9, 0x3e, 0xd2, 0x28, 0x5e, 0x27, 0x3c, 0xd3, 0x08, 0x7c, 0x85, 0x26, 0x13, 0x15, 0x60, 0xad,
	0x32, 0xf0, 0xc4, 0x78, 0xf4, 0xd1, 0xe5, 0x78, 0x62, 0x8b, 0xca, 0x3b, 0xc6, 0x6f, 0x01, 0xe9,
	0x5f, 0xee, 0xec, 0xd4, 0xc1, 0xe9, 0x05, 0x19, 0x1c, 0x42, 0x86, 0xc1, 0x28, 0x98, 0x44, 0xc9,
	0x1f, 0xe6, 0xe7, 0x92, 0x46, 0xb1, 0x3a, 0x61, 0x8e, 0xc2, 0xae, 0xd0, 0x64, 0xb7, 0xde, 0x35,
	0xff, 0x96, 0x46, 0xab, 0xee, 0x49, 0x1f, 0xc8, 0xa0, 0xe9, 0xb1, 0x87, 0xf4, 0x1a, 0xc8, 0x09,
	0xfb, 0xfa, 0x72, 0x6c, 0x6e, 0xad, 0x39, 0xa0, 0x17, 0xdd, 0x93, 0x1e, 0x11, 0x9a, 0x4b, 0x55,
	0x6e, 0x11, 0xc4, 0x5a, 0x2f, 0x41, 0xc8, 0xb2, 0xd4, 0x4f, 0xc3, 0xef, 0xa3, 0x60, 0xd2, 0x4f,
	0x7f, 0xb5, 0x95, 0x6b, 0xbd, 0x84, 0xa9, 0xd3, 0x67, 0x84, 0xf4, 0xdb, 0x31, 0xaa, 0xf1, 0x6b,
	0x40, 0xa2, 0x03, 0x30, 0x3d, 0x25, 0xc4, 0xd5, 0x00, 0xdd, 0x35, 0xda, 0x55, 0xe3, 0x4f, 0x56,
	0x75, 0x99, 0x05, 0xaa, 0x34, 0xf4, 0xee, 0x05, 0x2a, 0xfa, 0x97, 0x44, 0x46, 0xda, 0x42, 0x18,
	0x84, 0x5c, 0xed, 0x9a, 0xee, 0x61, 0x4a, 0x9c, 0x74, 0xd3, 0x28, 0xf4, 0x9c, 0xc4, 0x08, 0x95,
	0xd1, 0x9b, 0x0a, 0x44, 0x01, 0x72, 0x09, 0x58, 0x09, 0xab, 0x05, 0xc2, 0x5a, 0xd7, 0xee, 0x22,
	0xbd, 0x49, 0x98, 0xfe, 0xde, 0x3b, 0xe6, 0xde, 0x70, 0xa7, 0xd3, 0xa6, 0x3c, 0x0b, 0xef, 0x7f,
	0xb6, 0x87, 0x78, 0xfc, 0xd1, 0x7c, 0xd2, 0xf1, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xca,
	0xe9, 0x38, 0x56, 0x02, 0x00, 0x00,
}
