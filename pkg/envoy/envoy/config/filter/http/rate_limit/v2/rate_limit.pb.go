// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/rate_limit/v2/rate_limit.proto

package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import duration "github.com/golang/protobuf/ptypes/duration"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RateLimit struct {
	// The rate limit domain to use when calling the rate limit service.
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Specifies the rate limit configurations to be applied with the same
	// stage number. If not set, the default stage number is 0.
	//
	// .. note::
	//
	//  The filter supports a range of 0 - 10 inclusively for stage numbers.
	Stage uint32 `protobuf:"varint,2,opt,name=stage,proto3" json:"stage,omitempty"`
	// The type of requests the filter should apply to. The supported
	// types are *internal*, *external* or *both*. A request is considered internal if
	// :ref:`x-envoy-internal<config_http_conn_man_headers_x-envoy-internal>` is set to true. If
	// :ref:`x-envoy-internal<config_http_conn_man_headers_x-envoy-internal>` is not set or false, a
	// request is considered external. The filter defaults to *both*, and it will apply to all request
	// types.
	RequestType string `protobuf:"bytes,3,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	// The timeout in milliseconds for the rate limit service RPC. If not
	// set, this defaults to 20ms.
	Timeout              *duration.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RateLimit) Reset()         { *m = RateLimit{} }
func (m *RateLimit) String() string { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()    {}
func (*RateLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_rate_limit_2dc96438cbde3b5a, []int{0}
}
func (m *RateLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateLimit.Unmarshal(m, b)
}
func (m *RateLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateLimit.Marshal(b, m, deterministic)
}
func (dst *RateLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateLimit.Merge(dst, src)
}
func (m *RateLimit) XXX_Size() int {
	return xxx_messageInfo_RateLimit.Size(m)
}
func (m *RateLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_RateLimit.DiscardUnknown(m)
}

var xxx_messageInfo_RateLimit proto.InternalMessageInfo

func (m *RateLimit) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *RateLimit) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *RateLimit) GetRequestType() string {
	if m != nil {
		return m.RequestType
	}
	return ""
}

func (m *RateLimit) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func init() {
	proto.RegisterType((*RateLimit)(nil), "envoy.config.filter.http.rate_limit.v2.RateLimit")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/rate_limit/v2/rate_limit.proto", fileDescriptor_rate_limit_2dc96438cbde3b5a)
}

var fileDescriptor_rate_limit_2dc96438cbde3b5a = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xb1, 0x4a, 0xc4, 0x40,
	0x14, 0x45, 0x99, 0x6c, 0x5c, 0xd9, 0x59, 0x6d, 0x82, 0x60, 0xdc, 0xc2, 0xcd, 0x5a, 0xc8, 0x62,
	0x31, 0x03, 0xb1, 0x10, 0xdb, 0x60, 0x69, 0x15, 0xac, 0x6c, 0x96, 0x59, 0xf3, 0x32, 0x0e, 0x24,
	0x79, 0x71, 0xf6, 0x25, 0x90, 0x3f, 0xf1, 0x27, 0xfc, 0x01, 0x2b, 0xff, 0xc4, 0xda, 0xbf, 0x90,
	0x64, 0x12, 0xd8, 0xee, 0xbe, 0xfb, 0xee, 0xb9, 0x70, 0xf9, 0x03, 0x54, 0x2d, 0x76, 0xf2, 0x0d,
	0xab, 0xdc, 0x68, 0x99, 0x9b, 0x82, 0xc0, 0xca, 0x77, 0xa2, 0x5a, 0x5a, 0x45, 0xb0, 0x2b, 0x4c,
	0x69, 0x48, 0xb6, 0xf1, 0xd1, 0x25, 0x6a, 0x8b, 0x84, 0xc1, 0xed, 0x00, 0x0a, 0x07, 0x0a, 0x07,
	0x8a, 0x1e, 0x14, 0x47, 0xd1, 0x36, 0x5e, 0x5d, 0x6b, 0x44, 0x5d, 0x80, 0x1c, 0xa8, 0x7d, 0x93,
	0xcb, 0xac, 0xb1, 0x8a, 0x0c, 0x56, 0xae, 0x67, 0x75, 0xd9, 0xaa, 0xc2, 0x64, 0x8a, 0x40, 0x4e,
	0x62, 0x7c, 0x5c, 0x68, 0xd4, 0x38, 0x48, 0xd9, 0x2b, 0xe7, 0xde, 0x7c, 0x31, 0xbe, 0x48, 0x15,
	0xc1, 0x73, 0xdf, 0x1f, 0x6c, 0xf8, 0x3c, 0xc3, 0x52, 0x99, 0x2a, 0x64, 0x11, 0xdb, 0x2e, 0x92,
	0xc5, 0xf7, 0xdf, 0xcf, 0xcc, 0xb7, 0x5e, 0xc4, 0xd2, 0xf1, 0x11, 0xac, 0xf9, 0xc9, 0x81, 0x94,
	0x86, 0xd0, 0x8b, 0xd8, 0xf6, 0x7c, 0x4c, 0xdc, 0x79, 0x21, 0x4f, 0x9d, 0x1f, 0x6c, 0xf8, 0x99,
	0x85, 0x8f, 0x06, 0x0e, 0xb4, 0xa3, 0xae, 0x86, 0x70, 0xd6, 0x37, 0xa5, 0xcb, 0xd1, 0x7b, 0xe9,
	0x6a, 0x08, 0x1e, 0xf9, 0x29, 0x99, 0x12, 0xb0, 0xa1, 0xd0, 0x8f, 0xd8, 0x76, 0x19, 0x5f, 0x09,
	0xb7, 0x4a, 0x4c, 0xab, 0xc4, 0xd3, 0xb8, 0x2a, 0xf1, 0x3f, 0x7f, 0xd7, 0x2c, 0x9d, 0xf2, 0x89,
	0xff, 0xea, 0xb5, 0xf1, 0x7e, 0x3e, 0xe4, 0xee, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x91,
	0x69, 0xc5, 0x6e, 0x01, 0x00, 0x00,
}
