// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/ratelimit/v2/rls.proto

/*
Package v2 is a generated protocol buffer package.

It is generated from these files:
	envoy/config/ratelimit/v2/rls.proto

It has these top-level messages:
	RateLimitServiceConfig
*/
package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import envoy_api_v2_core1 "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Rate limit :ref:`configuration overview <config_rate_limit_service>`.
type RateLimitServiceConfig struct {
	// Types that are valid to be assigned to ServiceSpecifier:
	//	*RateLimitServiceConfig_ClusterName
	//	*RateLimitServiceConfig_GrpcService
	ServiceSpecifier isRateLimitServiceConfig_ServiceSpecifier `protobuf_oneof:"service_specifier"`
}

func (m *RateLimitServiceConfig) Reset()                    { *m = RateLimitServiceConfig{} }
func (m *RateLimitServiceConfig) String() string            { return proto.CompactTextString(m) }
func (*RateLimitServiceConfig) ProtoMessage()               {}
func (*RateLimitServiceConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRateLimitServiceConfig_ServiceSpecifier interface {
	isRateLimitServiceConfig_ServiceSpecifier()
}

type RateLimitServiceConfig_ClusterName struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,oneof"`
}
type RateLimitServiceConfig_GrpcService struct {
	GrpcService *envoy_api_v2_core1.GrpcService `protobuf:"bytes,2,opt,name=grpc_service,json=grpcService,oneof"`
}

func (*RateLimitServiceConfig_ClusterName) isRateLimitServiceConfig_ServiceSpecifier() {}
func (*RateLimitServiceConfig_GrpcService) isRateLimitServiceConfig_ServiceSpecifier() {}

func (m *RateLimitServiceConfig) GetServiceSpecifier() isRateLimitServiceConfig_ServiceSpecifier {
	if m != nil {
		return m.ServiceSpecifier
	}
	return nil
}

func (m *RateLimitServiceConfig) GetClusterName() string {
	if x, ok := m.GetServiceSpecifier().(*RateLimitServiceConfig_ClusterName); ok {
		return x.ClusterName
	}
	return ""
}

func (m *RateLimitServiceConfig) GetGrpcService() *envoy_api_v2_core1.GrpcService {
	if x, ok := m.GetServiceSpecifier().(*RateLimitServiceConfig_GrpcService); ok {
		return x.GrpcService
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RateLimitServiceConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RateLimitServiceConfig_OneofMarshaler, _RateLimitServiceConfig_OneofUnmarshaler, _RateLimitServiceConfig_OneofSizer, []interface{}{
		(*RateLimitServiceConfig_ClusterName)(nil),
		(*RateLimitServiceConfig_GrpcService)(nil),
	}
}

func _RateLimitServiceConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RateLimitServiceConfig)
	// service_specifier
	switch x := m.ServiceSpecifier.(type) {
	case *RateLimitServiceConfig_ClusterName:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ClusterName)
	case *RateLimitServiceConfig_GrpcService:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GrpcService); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RateLimitServiceConfig.ServiceSpecifier has unexpected type %T", x)
	}
	return nil
}

func _RateLimitServiceConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RateLimitServiceConfig)
	switch tag {
	case 1: // service_specifier.cluster_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ServiceSpecifier = &RateLimitServiceConfig_ClusterName{x}
		return true, err
	case 2: // service_specifier.grpc_service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(envoy_api_v2_core1.GrpcService)
		err := b.DecodeMessage(msg)
		m.ServiceSpecifier = &RateLimitServiceConfig_GrpcService{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RateLimitServiceConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RateLimitServiceConfig)
	// service_specifier
	switch x := m.ServiceSpecifier.(type) {
	case *RateLimitServiceConfig_ClusterName:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ClusterName)))
		n += len(x.ClusterName)
	case *RateLimitServiceConfig_GrpcService:
		s := proto.Size(x.GrpcService)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*RateLimitServiceConfig)(nil), "envoy.config.ratelimit.v2.RateLimitServiceConfig")
}

func init() { proto.RegisterFile("envoy/config/ratelimit/v2/rls.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0x71, 0x5b, 0x90, 0x70, 0xba, 0x90, 0x01, 0x42, 0x06, 0x14, 0x01, 0x43, 0x27, 0x1b,
	0x99, 0x37, 0x48, 0x07, 0x18, 0x10, 0x43, 0xd9, 0x58, 0x22, 0x63, 0x6e, 0xa3, 0x2b, 0x25, 0xb1,
	0x75, 0x63, 0x2c, 0xf1, 0x4c, 0xbc, 0x00, 0x62, 0xea, 0xeb, 0xf4, 0x2d, 0x50, 0xe2, 0xf0, 0xb3,
	0xd9, 0xba, 0xdf, 0x77, 0xce, 0xe1, 0x57, 0xd0, 0x05, 0xfb, 0x2e, 0x8d, 0xed, 0xb6, 0x58, 0x4b,
	0xd2, 0x1e, 0x1a, 0x6c, 0xd1, 0xcb, 0xa0, 0x24, 0x35, 0xbd, 0x70, 0x64, 0xbd, 0x4d, 0xcf, 0x47,
	0x48, 0x44, 0x48, 0xfc, 0x42, 0x22, 0xa8, 0xfc, 0x3a, 0xfa, 0xda, 0xe1, 0xa0, 0x18, 0x4b, 0x20,
	0x6b, 0x72, 0xa6, 0xea, 0x81, 0x02, 0x1a, 0x88, 0x01, 0xf9, 0x59, 0xd0, 0x0d, 0xbe, 0x6a, 0x0f,
	0xf2, 0xe7, 0x11, 0x0f, 0x97, 0x1f, 0x8c, 0x9f, 0x6e, 0xb4, 0x87, 0x87, 0x21, 0xef, 0x29, 0x3a,
	0xeb, 0xb1, 0x26, 0xbd, 0xe1, 0x4b, 0xd3, 0xbc, 0xf5, 0x1e, 0xa8, 0xea, 0x74, 0x0b, 0x19, 0x2b,
	0xd8, 0xea, 0xb8, 0x4c, 0xbe, 0xf6, 0xbb, 0xf9, 0x82, 0x66, 0x05, 0xcb, 0xd8, 0xfd, 0xc1, 0x26,
	0x99, 0x90, 0x47, 0xdd, 0x42, 0xba, 0xe6, 0xcb, 0xff, 0xdd, 0xd9, 0xac, 0x60, 0xab, 0x44, 0x5d,
	0x88, 0xb8, 0x5e, 0x3b, 0x14, 0x41, 0x89, 0x61, 0xa2, 0xb8, 0x23, 0x67, 0xa6, 0xb6, 0x21, 0xa4,
	0xfe, 0xfb, 0x96, 0x39, 0x3f, 0x99, 0xfc, 0xaa, 0x77, 0x60, 0x70, 0x8b, 0x40, 0xe9, 0xe1, 0xe7,
	0x7e, 0x37, 0x67, 0xe5, 0xe2, 0x79, 0x16, 0xd4, 0xcb, 0xd1, 0x38, 0xfd, 0xf6, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x08, 0xc5, 0xfe, 0xcd, 0x3b, 0x01, 0x00, 0x00,
}
