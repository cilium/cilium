// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/ratelimit/v2/rls.proto

package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import core "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Rate limit :ref:`configuration overview <config_rate_limit_service>`.
type RateLimitServiceConfig struct {
	// Types that are valid to be assigned to ServiceSpecifier:
	//	*RateLimitServiceConfig_ClusterName
	//	*RateLimitServiceConfig_GrpcService
	ServiceSpecifier isRateLimitServiceConfig_ServiceSpecifier `protobuf_oneof:"service_specifier"`
	// Specifies if Envoy should use the data-plane-api client
	// :repo:`api/envoy/service/ratelimit/v2/rls.proto` or the legacy
	// client :repo:`source/common/ratelimit/ratelimit.proto` when
	// making requests to the rate limit service.
	//
	// .. note::
	//
	//   The legacy client will be used by
	//   default until the start of the 1.9.0 release cycle. At the start of the
	//   1.9.0 release cycle this field will be removed and only the data-plane-api
	//   proto will be supported. This means that your rate limit service needs to
	//   have support for the data-plane-api proto by the start of the 1.9.0 release cycle.
	//   Lyft's `reference implementation <https://github.com/lyft/ratelimit>`_
	//   supports the data-plane-api version as of v1.1.0.
	UseDataPlaneProto    bool     `protobuf:"varint,3,opt,name=use_data_plane_proto,json=useDataPlaneProto,proto3" json:"use_data_plane_proto,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateLimitServiceConfig) Reset()         { *m = RateLimitServiceConfig{} }
func (m *RateLimitServiceConfig) String() string { return proto.CompactTextString(m) }
func (*RateLimitServiceConfig) ProtoMessage()    {}
func (*RateLimitServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_rls_1872e406c92ac374, []int{0}
}
func (m *RateLimitServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateLimitServiceConfig.Unmarshal(m, b)
}
func (m *RateLimitServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateLimitServiceConfig.Marshal(b, m, deterministic)
}
func (dst *RateLimitServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateLimitServiceConfig.Merge(dst, src)
}
func (m *RateLimitServiceConfig) XXX_Size() int {
	return xxx_messageInfo_RateLimitServiceConfig.Size(m)
}
func (m *RateLimitServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RateLimitServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RateLimitServiceConfig proto.InternalMessageInfo

type isRateLimitServiceConfig_ServiceSpecifier interface {
	isRateLimitServiceConfig_ServiceSpecifier()
}

type RateLimitServiceConfig_ClusterName struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3,oneof"`
}

type RateLimitServiceConfig_GrpcService struct {
	GrpcService *core.GrpcService `protobuf:"bytes,2,opt,name=grpc_service,json=grpcService,proto3,oneof"`
}

func (*RateLimitServiceConfig_ClusterName) isRateLimitServiceConfig_ServiceSpecifier() {}

func (*RateLimitServiceConfig_GrpcService) isRateLimitServiceConfig_ServiceSpecifier() {}

func (m *RateLimitServiceConfig) GetServiceSpecifier() isRateLimitServiceConfig_ServiceSpecifier {
	if m != nil {
		return m.ServiceSpecifier
	}
	return nil
}

func (m *RateLimitServiceConfig) GetClusterName() string {
	if x, ok := m.GetServiceSpecifier().(*RateLimitServiceConfig_ClusterName); ok {
		return x.ClusterName
	}
	return ""
}

func (m *RateLimitServiceConfig) GetGrpcService() *core.GrpcService {
	if x, ok := m.GetServiceSpecifier().(*RateLimitServiceConfig_GrpcService); ok {
		return x.GrpcService
	}
	return nil
}

// Deprecated: Do not use.
func (m *RateLimitServiceConfig) GetUseDataPlaneProto() bool {
	if m != nil {
		return m.UseDataPlaneProto
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RateLimitServiceConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RateLimitServiceConfig_OneofMarshaler, _RateLimitServiceConfig_OneofUnmarshaler, _RateLimitServiceConfig_OneofSizer, []interface{}{
		(*RateLimitServiceConfig_ClusterName)(nil),
		(*RateLimitServiceConfig_GrpcService)(nil),
	}
}

func _RateLimitServiceConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RateLimitServiceConfig)
	// service_specifier
	switch x := m.ServiceSpecifier.(type) {
	case *RateLimitServiceConfig_ClusterName:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ClusterName)
	case *RateLimitServiceConfig_GrpcService:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GrpcService); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RateLimitServiceConfig.ServiceSpecifier has unexpected type %T", x)
	}
	return nil
}

func _RateLimitServiceConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RateLimitServiceConfig)
	switch tag {
	case 1: // service_specifier.cluster_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ServiceSpecifier = &RateLimitServiceConfig_ClusterName{x}
		return true, err
	case 2: // service_specifier.grpc_service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(core.GrpcService)
		err := b.DecodeMessage(msg)
		m.ServiceSpecifier = &RateLimitServiceConfig_GrpcService{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RateLimitServiceConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RateLimitServiceConfig)
	// service_specifier
	switch x := m.ServiceSpecifier.(type) {
	case *RateLimitServiceConfig_ClusterName:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ClusterName)))
		n += len(x.ClusterName)
	case *RateLimitServiceConfig_GrpcService:
		s := proto.Size(x.GrpcService)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*RateLimitServiceConfig)(nil), "envoy.config.ratelimit.v2.RateLimitServiceConfig")
}

func init() {
	proto.RegisterFile("envoy/config/ratelimit/v2/rls.proto", fileDescriptor_rls_1872e406c92ac374)
}

var fileDescriptor_rls_1872e406c92ac374 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0xbd, 0x4e, 0xf3, 0x30,
	0x14, 0x86, 0x3f, 0xa7, 0xfd, 0x10, 0xb8, 0x5d, 0x1a, 0x21, 0x08, 0x1d, 0x50, 0x04, 0x0c, 0x9d,
	0x6c, 0x94, 0xde, 0x41, 0x8a, 0x04, 0x03, 0x42, 0x55, 0xd9, 0x58, 0xac, 0x83, 0x7b, 0x5a, 0x59,
	0x4a, 0x13, 0xcb, 0x76, 0x2c, 0x71, 0x67, 0x88, 0xa9, 0x97, 0xc2, 0xda, 0xbb, 0x40, 0x8e, 0xc3,
	0xcf, 0x76, 0x8e, 0xde, 0x9f, 0xe7, 0xa5, 0xd7, 0x58, 0xfb, 0xe6, 0x8d, 0xcb, 0xa6, 0xde, 0xa8,
	0x2d, 0x37, 0xe0, 0xb0, 0x52, 0x3b, 0xe5, 0xb8, 0x2f, 0xb8, 0xa9, 0x2c, 0xd3, 0xa6, 0x71, 0x4d,
	0x7a, 0xd1, 0x99, 0x58, 0x34, 0xb1, 0x1f, 0x13, 0xf3, 0xc5, 0xf4, 0x26, 0xe6, 0x41, 0xab, 0x10,
	0x91, 0x8d, 0x41, 0xbe, 0x35, 0x5a, 0x0a, 0x8b, 0xc6, 0x2b, 0x89, 0xb1, 0x60, 0x7a, 0xee, 0xa1,
	0x52, 0x6b, 0x70, 0xc8, 0xbf, 0x8f, 0x28, 0x5c, 0x7d, 0x12, 0x7a, 0xb6, 0x02, 0x87, 0x8f, 0xa1,
	0xef, 0x39, 0x66, 0x16, 0x1d, 0x26, 0xbd, 0xa5, 0x63, 0x59, 0xb5, 0xd6, 0xa1, 0x11, 0x35, 0xec,
	0x30, 0x23, 0x39, 0x99, 0x9d, 0x94, 0xa3, 0x8f, 0xc3, 0x7e, 0x30, 0x34, 0x49, 0x4e, 0x32, 0xf2,
	0xf0, 0x6f, 0x35, 0xea, 0x2d, 0x4f, 0xb0, 0xc3, 0x74, 0x41, 0xc7, 0x7f, 0xd9, 0x59, 0x92, 0x93,
	0xd9, 0xa8, 0xb8, 0x64, 0x71, 0x3d, 0x68, 0xc5, 0x7c, 0xc1, 0xc2, 0x44, 0x76, 0x6f, 0xb4, 0xec,
	0x69, 0xa1, 0x64, 0xfb, 0xfb, 0xa6, 0x73, 0x7a, 0xda, 0x5a, 0x14, 0x6b, 0x70, 0x20, 0x74, 0x05,
	0x35, 0x8a, 0x6e, 0x69, 0x36, 0xc8, 0xc9, 0xec, 0xb8, 0x4c, 0x32, 0xb2, 0x9a, 0xb4, 0x16, 0xef,
	0xc0, 0xc1, 0x32, 0xa8, 0xcb, 0x20, 0x96, 0x53, 0x3a, 0xe9, 0xa1, 0xc2, 0x6a, 0x94, 0x6a, 0xa3,
	0xd0, 0xa4, 0xff, 0xdf, 0x0f, 0xfb, 0x01, 0x29, 0x87, 0x2f, 0x89, 0x2f, 0x5e, 0x8f, 0xba, 0x96,
	0xf9, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xea, 0x62, 0x97, 0x70, 0x01, 0x00, 0x00,
}
