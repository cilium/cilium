// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/accesslog/v2/als.proto

package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import core "github.com/cilium/cilium/pkg/envoy/envoy/api/v2/core"
import _ "github.com/lyft/protoc-gen-validate/validate"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Configuration for the built-in *envoy.tcp_grpc_access_log* type. This configuration will
// populate *StreamAccessLogsMessage.tcp_logs*.
// [#not-implemented-hide:]
// [#comment:TODO(mattklein123): Block type in non-tcp proxy cases?]
type TcpGrpcAccessLogConfig struct {
	CommonConfig         *CommonGrpcAccessLogConfig `protobuf:"bytes,1,opt,name=common_config,json=commonConfig" json:"common_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TcpGrpcAccessLogConfig) Reset()         { *m = TcpGrpcAccessLogConfig{} }
func (m *TcpGrpcAccessLogConfig) String() string { return proto.CompactTextString(m) }
func (*TcpGrpcAccessLogConfig) ProtoMessage()    {}
func (*TcpGrpcAccessLogConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_als_9d4fe0e4b235a60d, []int{0}
}
func (m *TcpGrpcAccessLogConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpGrpcAccessLogConfig.Unmarshal(m, b)
}
func (m *TcpGrpcAccessLogConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpGrpcAccessLogConfig.Marshal(b, m, deterministic)
}
func (dst *TcpGrpcAccessLogConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpGrpcAccessLogConfig.Merge(dst, src)
}
func (m *TcpGrpcAccessLogConfig) XXX_Size() int {
	return xxx_messageInfo_TcpGrpcAccessLogConfig.Size(m)
}
func (m *TcpGrpcAccessLogConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpGrpcAccessLogConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TcpGrpcAccessLogConfig proto.InternalMessageInfo

func (m *TcpGrpcAccessLogConfig) GetCommonConfig() *CommonGrpcAccessLogConfig {
	if m != nil {
		return m.CommonConfig
	}
	return nil
}

// Configuration for the built-in *envoy.http_grpc_access_log* type. This configuration will
// populate *StreamAccessLogsMessage.http_logs*.
// [#not-implemented-hide:]
// [#comment:TODO(mattklein123): Block type in non-http/router proxy cases?]
type HttpGrpcAccessLogConfig struct {
	CommonConfig *CommonGrpcAccessLogConfig `protobuf:"bytes,1,opt,name=common_config,json=commonConfig" json:"common_config,omitempty"`
	// Additional request headers to log in *HTTPRequestProperties.request_headers*.
	AdditionalRequestHeadersToLog []string `protobuf:"bytes,2,rep,name=additional_request_headers_to_log,json=additionalRequestHeadersToLog" json:"additional_request_headers_to_log,omitempty"`
	// Additional response headers to log in *HTTPResponseProperties.response_headers*.
	AdditionalResponseHeadersToLog []string `protobuf:"bytes,3,rep,name=additional_response_headers_to_log,json=additionalResponseHeadersToLog" json:"additional_response_headers_to_log,omitempty"`
	// Additional response trailers to log in *HTTPResponseProperties.response_trailers*.
	AdditionalResponseTrailersToLog []string `protobuf:"bytes,4,rep,name=additional_response_trailers_to_log,json=additionalResponseTrailersToLog" json:"additional_response_trailers_to_log,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *HttpGrpcAccessLogConfig) Reset()         { *m = HttpGrpcAccessLogConfig{} }
func (m *HttpGrpcAccessLogConfig) String() string { return proto.CompactTextString(m) }
func (*HttpGrpcAccessLogConfig) ProtoMessage()    {}
func (*HttpGrpcAccessLogConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_als_9d4fe0e4b235a60d, []int{1}
}
func (m *HttpGrpcAccessLogConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpGrpcAccessLogConfig.Unmarshal(m, b)
}
func (m *HttpGrpcAccessLogConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpGrpcAccessLogConfig.Marshal(b, m, deterministic)
}
func (dst *HttpGrpcAccessLogConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpGrpcAccessLogConfig.Merge(dst, src)
}
func (m *HttpGrpcAccessLogConfig) XXX_Size() int {
	return xxx_messageInfo_HttpGrpcAccessLogConfig.Size(m)
}
func (m *HttpGrpcAccessLogConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpGrpcAccessLogConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HttpGrpcAccessLogConfig proto.InternalMessageInfo

func (m *HttpGrpcAccessLogConfig) GetCommonConfig() *CommonGrpcAccessLogConfig {
	if m != nil {
		return m.CommonConfig
	}
	return nil
}

func (m *HttpGrpcAccessLogConfig) GetAdditionalRequestHeadersToLog() []string {
	if m != nil {
		return m.AdditionalRequestHeadersToLog
	}
	return nil
}

func (m *HttpGrpcAccessLogConfig) GetAdditionalResponseHeadersToLog() []string {
	if m != nil {
		return m.AdditionalResponseHeadersToLog
	}
	return nil
}

func (m *HttpGrpcAccessLogConfig) GetAdditionalResponseTrailersToLog() []string {
	if m != nil {
		return m.AdditionalResponseTrailersToLog
	}
	return nil
}

// Common configuration for gRPC access logs.
// [#not-implemented-hide:]
type CommonGrpcAccessLogConfig struct {
	// The friendly name of the access log to be returned in StreamAccessLogsMessage.Identifier. This
	// allows the access log server to differentiate between different access logs coming from the
	// same Envoy.
	LogName string `protobuf:"bytes,1,opt,name=log_name,json=logName" json:"log_name,omitempty"`
	// The gRPC service for the access log service.
	GrpcService          *core.GrpcService `protobuf:"bytes,2,opt,name=grpc_service,json=grpcService" json:"grpc_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommonGrpcAccessLogConfig) Reset()         { *m = CommonGrpcAccessLogConfig{} }
func (m *CommonGrpcAccessLogConfig) String() string { return proto.CompactTextString(m) }
func (*CommonGrpcAccessLogConfig) ProtoMessage()    {}
func (*CommonGrpcAccessLogConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_als_9d4fe0e4b235a60d, []int{2}
}
func (m *CommonGrpcAccessLogConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonGrpcAccessLogConfig.Unmarshal(m, b)
}
func (m *CommonGrpcAccessLogConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonGrpcAccessLogConfig.Marshal(b, m, deterministic)
}
func (dst *CommonGrpcAccessLogConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonGrpcAccessLogConfig.Merge(dst, src)
}
func (m *CommonGrpcAccessLogConfig) XXX_Size() int {
	return xxx_messageInfo_CommonGrpcAccessLogConfig.Size(m)
}
func (m *CommonGrpcAccessLogConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonGrpcAccessLogConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CommonGrpcAccessLogConfig proto.InternalMessageInfo

func (m *CommonGrpcAccessLogConfig) GetLogName() string {
	if m != nil {
		return m.LogName
	}
	return ""
}

func (m *CommonGrpcAccessLogConfig) GetGrpcService() *core.GrpcService {
	if m != nil {
		return m.GrpcService
	}
	return nil
}

func init() {
	proto.RegisterType((*TcpGrpcAccessLogConfig)(nil), "envoy.config.accesslog.v2.TcpGrpcAccessLogConfig")
	proto.RegisterType((*HttpGrpcAccessLogConfig)(nil), "envoy.config.accesslog.v2.HttpGrpcAccessLogConfig")
	proto.RegisterType((*CommonGrpcAccessLogConfig)(nil), "envoy.config.accesslog.v2.CommonGrpcAccessLogConfig")
}

func init() {
	proto.RegisterFile("envoy/config/accesslog/v2/als.proto", fileDescriptor_als_9d4fe0e4b235a60d)
}

var fileDescriptor_als_9d4fe0e4b235a60d = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x92, 0xbd, 0x4e, 0xeb, 0x30,
	0x14, 0xc7, 0x95, 0xb4, 0xf7, 0xa3, 0x6e, 0xaf, 0x74, 0x95, 0xe1, 0xf6, 0x43, 0xba, 0xbd, 0xbd,
	0x69, 0x87, 0x4e, 0x89, 0x14, 0x78, 0x01, 0xda, 0x81, 0x0a, 0x15, 0x86, 0xd0, 0x89, 0x25, 0x32,
	0x8e, 0x31, 0x96, 0x9c, 0x9c, 0x60, 0x9b, 0x48, 0x4c, 0xec, 0x4c, 0x3c, 0x0f, 0x13, 0x0f, 0xc3,
	0xc2, 0x5b, 0xa0, 0xd8, 0x05, 0x52, 0x68, 0x67, 0x36, 0x4b, 0xe7, 0xe7, 0xdf, 0x39, 0xfa, 0x9f,
	0x83, 0xc6, 0x34, 0x2f, 0xe1, 0x26, 0x24, 0x90, 0x5f, 0x70, 0x16, 0x62, 0x42, 0xa8, 0x52, 0x02,
	0x58, 0x58, 0x46, 0x21, 0x16, 0x2a, 0x28, 0x24, 0x68, 0xf0, 0xfa, 0x06, 0x0a, 0x2c, 0x14, 0xbc,
	0x41, 0x41, 0x19, 0x0d, 0x26, 0xf6, 0x3f, 0x2e, 0x78, 0xf5, 0x85, 0x80, 0xa4, 0x21, 0x93, 0x05,
	0x49, 0x14, 0x95, 0x25, 0x27, 0xd4, 0x0a, 0x06, 0xdd, 0x12, 0x0b, 0x9e, 0x62, 0x4d, 0xc3, 0xd7,
	0x87, 0x2d, 0xf8, 0xb7, 0xe8, 0xcf, 0x8a, 0x14, 0x87, 0xb2, 0x20, 0x07, 0xc6, 0xba, 0x04, 0x36,
	0x37, 0x5d, 0x3c, 0x8a, 0x7e, 0x11, 0xc8, 0x32, 0xc8, 0x13, 0xdb, 0xb6, 0xe7, 0x8c, 0x9c, 0x69,
	0x3b, 0xda, 0x0f, 0x76, 0xce, 0x12, 0xcc, 0x0d, 0xbf, 0x45, 0x36, 0x43, 0x0f, 0xcf, 0x8f, 0x8d,
	0x6f, 0x77, 0x8e, 0xfb, 0xdb, 0x89, 0x3b, 0x56, 0x6b, 0x2b, 0xfe, 0x93, 0x8b, 0xba, 0x0b, 0xad,
	0xbf, 0x70, 0x04, 0x6f, 0x81, 0xfe, 0xe3, 0x34, 0xe5, 0x9a, 0x43, 0x8e, 0x45, 0x22, 0xe9, 0xd5,
	0x35, 0x55, 0x3a, 0xb9, 0xa4, 0x38, 0xa5, 0x52, 0x25, 0x1a, 0x12, 0x01, 0xac, 0xe7, 0x8e, 0x1a,
	0xd3, 0x56, 0xfc, 0xf7, 0x1d, 0x8c, 0x2d, 0xb7, 0xb0, 0xd8, 0x0a, 0x96, 0xc0, 0xbc, 0x23, 0xe4,
	0x6f, 0x98, 0x54, 0x01, 0xb9, 0xa2, 0x1f, 0x55, 0x0d, 0xa3, 0x1a, 0xd6, 0x55, 0x16, 0xdc, 0x70,
	0x2d, 0xd1, 0x78, 0x9b, 0x4b, 0x4b, 0xcc, 0x45, 0x4d, 0xd6, 0x34, 0xb2, 0x7f, 0x9f, 0x65, 0xab,
	0x35, 0x68, 0x6c, 0xfe, 0xbd, 0x83, 0xfa, 0x3b, 0xb3, 0xf1, 0x26, 0xe8, 0xa7, 0x00, 0x96, 0xe4,
	0x38, 0xa3, 0x26, 0xe3, 0xd6, 0xac, 0x55, 0xa5, 0xd5, 0x94, 0xee, 0xc8, 0x89, 0x7f, 0x08, 0x60,
	0x27, 0x38, 0xa3, 0xde, 0x31, 0xea, 0xd4, 0x4f, 0xab, 0xe7, 0x9a, 0x6d, 0x0c, 0xd7, 0xdb, 0xc0,
	0x05, 0xaf, 0x16, 0x50, 0x5d, 0x60, 0x50, 0xf5, 0x38, 0xb5, 0xd4, 0x46, 0xee, 0x6d, 0x56, 0x2b,
	0x34, 0xcf, 0xdc, 0x32, 0x3a, 0xff, 0x6e, 0xee, 0x70, 0xef, 0x25, 0x00, 0x00, 0xff, 0xff, 0x21,
	0x52, 0xc1, 0x5d, 0x08, 0x03, 0x00, 0x00,
}
