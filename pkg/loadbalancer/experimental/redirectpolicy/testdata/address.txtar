hive start
db/initialized

# Add a pod and an address-based redirection
k8s/add pod.yaml lrp-addr.yaml

# Check tables
db/cmp localredirectpolicies lrp.table
db/cmp services services.table
db/cmp frontends frontends.table
db/cmp backends backends.table

# Maps should have the created frontend: 169.254.169.254 => 10.244.2.1
lb/maps-dump lbmaps.actual
* cmp lbmaps.actual maps.expected

# Deleting the LRP cleans up the tables.
k8s/delete lrp-addr.yaml
db/cmp services services-empty.table
db/cmp frontends frontends-empty.table

# Maps should now be empty.
lb/maps-dump lbmaps.actual
* cmp lbmaps.actual maps-empty.expected

-- lrp.table --
Name           Type     FrontendType      Frontends
test/lrp-addr  address  addr-single-port  169.254.169.254:8080 TCP

-- services-empty.table --
Name                          Source

-- services.table --
Name                          Source
test/lrp-addr:local-redirect  k8s   

-- frontends-empty.table --
Address                    Type        ServiceName

-- frontends.table --
Address                    Type          ServiceName                    Backends            RedirectTo  Status
169.254.169.254:8080/TCP   LocalRedirect test/lrp-addr:local-redirect   10.244.2.1:80/TCP               Done

-- backends.table --
Address             Instances
10.244.2.1:80/TCP   test/lrp-addr:local-redirect (tcp)

-- maps.expected --
BE: ID=1 ADDR=10.244.2.1:80/TCP STATE=active
REV: ID=1 ADDR=169.254.169.254:8080
SVC: ID=1 ADDR=169.254.169.254:8080/TCP SLOT=0 LBALG=undef AFFTimeout=0 COUNT=1 QCOUNT=0 FLAGS=LocalRedirect
SVC: ID=1 ADDR=169.254.169.254:8080/TCP SLOT=1 BEID=1 COUNT=0 QCOUNT=0 FLAGS=LocalRedirect
-- maps-empty.expected --

-- lrp-addr.yaml --
apiVersion: "cilium.io/v2"
kind: CiliumLocalRedirectPolicy
metadata:
  name: "lrp-addr"
  namespace: "test"
spec:
  redirectFrontend:
    addressMatcher:
      ip: "169.254.169.254"
      toPorts:
        - port: "8080"
          protocol: TCP
  redirectBackend:
    localEndpointSelector:
      matchLabels:
        app: proxy
    toPorts:
      - port: "80"
        protocol: TCP

-- pod.yaml --
apiVersion: v1
kind: Pod
metadata:
  name: lrp-pod
  namespace: test
  labels:
    app: proxy
spec:
  containers:
    - name: lrp-pod
      image: nginx
      ports:
        - containerPort: 80
          name: tcp
          protocol: TCP
status:
  hostIP: 172.19.0.3
  hostIPs:
  - ip: 172.19.0.3
  phase: Running
  podIP: 10.244.2.1
  podIPs:
  - ip: 10.244.2.1
  qosClass: BestEffort
  startTime: "2024-07-10T16:20:42Z"
  conditions:
  - lastProbeTime: null
    lastTransitionTime: '2019-07-08T09:41:59Z'
    status: 'True'
    type: Ready

