#! --enable-experimental-lb

# Add some node addresses
db insert node-addresses addrv4.yaml
db cmp node-addresses nodeaddrs.table

# Add the first service before starting (List() path)
k8s add service.yaml endpointslice.yaml

# Start the test application
hive start

# Wait for tables to initialize (e.g. reflector to start) before adding more objects.
# (otherwise might miss events due to List() vs Watch() race in fake client).
# NOTE: The 100ms delay you might see is from WaitForCacheSync polling at 100ms.
db initialized

# First frontends should exist and be reconciled. Need to wait for reconciliation to
# have the ID assigned.
db cmp frontends frontends1.table

k8s add service2.yaml endpointslice2.yaml

db cmp services services.table
db cmp frontends frontends.table
db cmp backends backends.table 

lb-maps cmp  lbmaps.dump

# Cleanup. Backends first in this test.
k8s delete endpointslice.yaml endpointslice2.yaml
db cmp backends backends_empty.table
db cmp frontends frontends_nobackends.table

k8s delete service.yaml service2.yaml
db cmp frontends frontends_empty.table
db cmp services services_empty.table

#####

-- addrv4.yaml --
addr: 1.1.1.1
nodeport: true
primary: true
devicename: test

-- nodeaddrs.table --
Address NodePort Primary DeviceName
1.1.1.1 true     true    test

-- services.table --
Name         Source   NatPolicy   ExtTrafficPolicy   IntTrafficPolicy   SessionAffinity   L7ProxyPort   HealthCheckNodePort   LoopbackHostPort   SourceRanges
test/echo    k8s                  Cluster            Cluster                              0             0                     false              
test/echo2   k8s                  Cluster            Cluster                              0             0                     false              

-- services_empty.table --
Name         Source   NatPolicy   ExtTrafficPolicy   IntTrafficPolicy   SessionAffinity   L7ProxyPort   HealthCheckNodePort   LoopbackHostPort   SourceRanges


-- frontends1.table --
Address               Type        ServiceName   PortName   Status  Backends
0.0.0.0:30781/TCP     NodePort    test/echo     http       Done    10.244.1.1:80/TCP (active), 10.244.1.2:80/TCP (active), 10.244.1.3:80/TCP (active), 10.244.1.4:80/TCP (active)
10.96.50.104:80/TCP   ClusterIP   test/echo     http       Done    10.244.1.1:80/TCP (active), 10.244.1.2:80/TCP (active), 10.244.1.3:80/TCP (active), 10.244.1.4:80/TCP (active)

-- frontends.table --
Address               Type        ServiceName   PortName   Status  Backends
0.0.0.0:30781/TCP     NodePort    test/echo     http       Done    10.244.1.1:80/TCP (active), 10.244.1.2:80/TCP (active), 10.244.1.3:80/TCP (active), 10.244.1.4:80/TCP (active)
0.0.0.0:30782/TCP     NodePort    test/echo2    http2      Done    10.244.2.1:80/TCP (active), 10.244.2.2:80/TCP (active), 10.244.2.3:80/TCP (active), 10.244.2.4:80/TCP (active)
10.96.50.104:80/TCP   ClusterIP   test/echo     http       Done    10.244.1.1:80/TCP (active), 10.244.1.2:80/TCP (active), 10.244.1.3:80/TCP (active), 10.244.1.4:80/TCP (active)
10.96.50.105:80/TCP   ClusterIP   test/echo2    http2      Done    10.244.2.1:80/TCP (active), 10.244.2.2:80/TCP (active), 10.244.2.3:80/TCP (active), 10.244.2.4:80/TCP (active)

-- frontends_nobackends.table --
Address               Type        ServiceName   PortName   Status  Backends
0.0.0.0:30781/TCP     NodePort    test/echo     http       Done        
0.0.0.0:30782/TCP     NodePort    test/echo2    http2      Done        
10.96.50.104:80/TCP   ClusterIP   test/echo     http       Done        
10.96.50.105:80/TCP   ClusterIP   test/echo2    http2      Done        

-- frontends_empty.table --
Address               Type        ServiceName   PortName   Status  Backends

-- backends.table --
Address             State    Instances            NodeName           ZoneID
10.244.1.1:80/TCP   active   test/echo (http)     nodeport-worker    0
10.244.1.2:80/TCP   active   test/echo (http)     nodeport-worker    0
10.244.1.3:80/TCP   active   test/echo (http)     nodeport-worker2   0
10.244.1.4:80/TCP   active   test/echo (http)     nodeport-worker2   0
10.244.2.1:80/TCP   active   test/echo2 (http2)   nodeport-worker    0
10.244.2.2:80/TCP   active   test/echo2 (http2)   nodeport-worker    0
10.244.2.3:80/TCP   active   test/echo2 (http2)   nodeport-worker2   0
10.244.2.4:80/TCP   active   test/echo2 (http2)   nodeport-worker2   0

-- backends_empty.table --
Address             State    Instances            NodeName           ZoneID

-- lbmaps.dump --
BE: ID=1 ADDR=10.244.1.1:80 STATE=active
BE: ID=2 ADDR=10.244.1.2:80 STATE=active
BE: ID=3 ADDR=10.244.1.3:80 STATE=active
BE: ID=4 ADDR=10.244.1.4:80 STATE=active
BE: ID=5 ADDR=10.244.2.1:80 STATE=active
BE: ID=6 ADDR=10.244.2.2:80 STATE=active
BE: ID=7 ADDR=10.244.2.3:80 STATE=active
BE: ID=8 ADDR=10.244.2.4:80 STATE=active
REV: ID=1 ADDR=10.96.50.104:80
REV: ID=2 ADDR=<zero>
REV: ID=3 ADDR=1.1.1.1:30781
REV: ID=4 ADDR=10.96.50.105:80
REV: ID=5 ADDR=<zero>
REV: ID=6 ADDR=1.1.1.1:30782
SVC: ID=1 ADDR=10.96.50.104:80 SLOT=0 BEID=0 COUNT=4 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=1 ADDR=10.96.50.104:80 SLOT=1 BEID=1 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=1 ADDR=10.96.50.104:80 SLOT=2 BEID=2 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=1 ADDR=10.96.50.104:80 SLOT=3 BEID=3 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=1 ADDR=10.96.50.104:80 SLOT=4 BEID=4 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=2 ADDR=<zero> SLOT=0 BEID=0 COUNT=4 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=2 ADDR=<zero> SLOT=1 BEID=1 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=2 ADDR=<zero> SLOT=2 BEID=2 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=2 ADDR=<zero> SLOT=3 BEID=3 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=2 ADDR=<zero> SLOT=4 BEID=4 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=3 ADDR=1.1.1.1:30781 SLOT=0 BEID=0 COUNT=4 QCOUNT=0 FLAGS=NodePort
SVC: ID=3 ADDR=1.1.1.1:30781 SLOT=1 BEID=1 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=3 ADDR=1.1.1.1:30781 SLOT=2 BEID=2 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=3 ADDR=1.1.1.1:30781 SLOT=3 BEID=3 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=3 ADDR=1.1.1.1:30781 SLOT=4 BEID=4 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=4 ADDR=10.96.50.105:80 SLOT=0 BEID=0 COUNT=4 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=4 ADDR=10.96.50.105:80 SLOT=1 BEID=5 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=4 ADDR=10.96.50.105:80 SLOT=2 BEID=6 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=4 ADDR=10.96.50.105:80 SLOT=3 BEID=7 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=4 ADDR=10.96.50.105:80 SLOT=4 BEID=8 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable
SVC: ID=5 ADDR=<zero> SLOT=0 BEID=0 COUNT=4 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=5 ADDR=<zero> SLOT=1 BEID=5 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=5 ADDR=<zero> SLOT=2 BEID=6 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=5 ADDR=<zero> SLOT=3 BEID=7 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=5 ADDR=<zero> SLOT=4 BEID=8 COUNT=0 QCOUNT=0 FLAGS=NodePort+non-routable
SVC: ID=6 ADDR=1.1.1.1:30782 SLOT=0 BEID=0 COUNT=4 QCOUNT=0 FLAGS=NodePort
SVC: ID=6 ADDR=1.1.1.1:30782 SLOT=1 BEID=5 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=6 ADDR=1.1.1.1:30782 SLOT=2 BEID=6 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=6 ADDR=1.1.1.1:30782 SLOT=3 BEID=7 COUNT=0 QCOUNT=0 FLAGS=NodePort
SVC: ID=6 ADDR=1.1.1.1:30782 SLOT=4 BEID=8 COUNT=0 QCOUNT=0 FLAGS=NodePort
-- service.yaml --
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-09-13T11:11:26Z"
  name: echo
  namespace: test
  resourceVersion: "741"
  uid: a49fe99c-3564-4754-acc4-780f2331a49b
spec:
  clusterIP: 10.96.50.104
  clusterIPs:
  - 10.96.50.104
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    nodePort: 30781
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    name: echo
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

-- service2.yaml --
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-09-13T11:11:26Z"
  name: echo2
  namespace: test
  resourceVersion: "741"
  uid: b49fe99c-3564-4754-acc4-780f2331a49b
spec:
  clusterIP: 10.96.50.105
  clusterIPs:
  - 10.96.50.105
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http2
    nodePort: 30782
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    name: echo
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

-- endpointslice.yaml --
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  annotations:
  creationTimestamp: "2022-09-13T11:11:26Z"
  generateName: echo-
  generation: 3
  labels:
    endpointslice.kubernetes.io/managed-by: endpointslice-controller.k8s.io
    kubernetes.io/service-name: echo
  name: echo-kvlm2
  namespace: test
  resourceVersion: "797"
  uid: d1f517f6-ab88-4c76-9bd0-4906a17cdd75
addressType: IPv4
endpoints:
- addresses:
  - 10.244.1.1
  nodeName: nodeport-worker
- addresses:
  - 10.244.1.2
  nodeName: nodeport-worker
- addresses:
  - 10.244.1.3
  nodeName: nodeport-worker2
- addresses:
  - 10.244.1.4
  nodeName: nodeport-worker2
ports:
- name: http
  port: 80
  protocol: TCP

-- endpointslice2.yaml --
# This is similar to endpointslice.yaml but references
# a different service (echo2) and port (http2).
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  annotations:
  creationTimestamp: "2022-09-13T11:11:26Z"
  generateName: echo-
  generation: 3
  labels:
    endpointslice.kubernetes.io/managed-by: endpointslice-controller.k8s.io
    kubernetes.io/service-name: echo2
  name: echo-another
  namespace: test
  resourceVersion: "797"
  uid: d1f517f6-ab88-4c76-9bd0-4906a17cdd75
addressType: IPv4
endpoints:
- addresses:
  - 10.244.2.1
  nodeName: nodeport-worker
- addresses:
  - 10.244.2.2
  nodeName: nodeport-worker
- addresses:
  - 10.244.2.3
  nodeName: nodeport-worker2
- addresses:
  - 10.244.2.4
  nodeName: nodeport-worker2
ports:
- name: http2
  port: 80
  protocol: TCP
