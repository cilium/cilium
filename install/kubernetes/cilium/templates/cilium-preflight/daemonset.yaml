{{- if .Values.preflight.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium-pre-flight-check
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      k8s-app: cilium-pre-flight-check
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
{{- with .Values.preflight.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        k8s-app: cilium-pre-flight-check
        kubernetes.io/cluster-service: "true"
{{- with .Values.preflight.podLabels }}
        {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 6 }}
{{- end }}
      initContainers:
        - name: clean-cilium-state
          image: "{{ .Values.preflight.image.repository }}:{{ .Values.preflight.image.tag }}{{ if .Values.preflight.image.useDigest }}@{{ .Values.preflight.image.digest }}{{ end }}"
          imagePullPolicy: {{ .Values.preflight.image.pullPolicy }}
          command: ["/bin/echo"]
          args:
          - "hello"
      containers:
        - name: cilium-pre-flight-check
          image: "{{ .Values.preflight.image.repository }}:{{ .Values.preflight.image.tag }}{{ if .Values.preflight.image.useDigest }}@{{ .Values.preflight.image.digest }}{{ end }}"
          imagePullPolicy: {{ .Values.preflight.image.pullPolicy }}
          command: ["/bin/sh"]
          args:
          - -c
          - "touch /tmp/ready; sleep 1h"
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/ready
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/ready
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
          - mountPath: /var/run/cilium
            name: cilium-run
{{- if .Values.etcd.enabled }}
          - mountPath: /var/lib/etcd-config
            name: etcd-config-path
            readOnly: true
{{- if or .Values.etcd.ssl .Values.etcd.managed }}
          - mountPath: /var/lib/etcd-secrets
            name: etcd-secrets
            readOnly: true
{{- end }}
{{- end }}

{{- if ne .Values.preflight.tofqdnsPreCache "" }}
        - name: cilium-pre-flight-fqdn-precache
          image: "{{ .Values.preflight.image.repository }}:{{ .Values.preflight.image.tag }}{{ if .Values.preflight.image.useDigest }}@{{ .Values.preflight.image.digest }}{{ end }}"
          imagePullPolicy: {{ .Values.preflight.image.pullPolicy }}
          name: cilium-pre-flight-fqdn-precache
          command: ["/bin/sh"]
          args:
          - -c
          - "cilium preflight fqdn-poller --tofqdns-pre-cache {{ .Values.preflight.tofqdnsPreCache }} && touch /tmp/ready-tofqdns-precache"
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/read-tofqdns-precachey
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/read-tofqdns-precachey
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
{{- if .Values.k8sServiceHost }}
          - name: KUBERNETES_SERVICE_HOST
            value: {{ .Values.k8sServiceHost | quote }}
{{- end }}
{{- if .Values.k8sServicePort }}
          - name: KUBERNETES_SERVICE_PORT
            value: {{ .Values.k8sServicePort | quote }}
{{- end }}
          volumeMounts:
          - mountPath: /var/run/cilium
            name: cilium-run
{{- if .Values.etcd.enabled }}
          - mountPath: /var/lib/etcd-config
            name: etcd-config-path
            readOnly: true
{{- if or .Values.etcd.ssl .Values.etcd.managed }}
          - mountPath: /var/lib/etcd-secrets
            name: etcd-secrets
            readOnly: true
{{- end }}
{{- end }}
{{- end }}
      hostNetwork: true
      # This is here to seamlessly allow migrate-identity to work with
      # etcd-operator setups. The assumption is that other cases would also
      # work since the cluster DNS would forward the request on.
      # This differs from the cilium-agent daemonset, where this is only
      # enabled when etcd.managed=true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      serviceAccount: {{ .Values.serviceAccounts.preflight.name | quote }}
      serviceAccountName: {{ .Values.serviceAccounts.preflight.name | quote }}
      terminationGracePeriodSeconds: 1
{{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | trim | nindent 6 }}
{{- end }}
      volumes:
        # To keep state between restarts / upgrades
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
{{- if .Values.etcd.enabled }}
        # To read the etcd config stored in config maps
      - configMap:
          defaultMode: 420
          items:
          - key: etcd-config
            path: etcd.config
          name: cilium-config
        name: etcd-config-path
        # To read the k8s etcd secrets in case the user might want to use TLS
{{- if or .Values.etcd.ssl .Values.etcd.managed }}
      - name: etcd-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-etcd-secrets
{{- end }}
{{- end }}
{{- end }}
