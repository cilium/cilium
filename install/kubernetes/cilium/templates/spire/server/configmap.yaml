{{- if and .Values.auth.mTLS.spire.enabled .Values.auth.mTLS.spire.install.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-server
  namespace: {{ .Values.auth.mTLS.spire.install.namespace }}
data:
  server.conf: |
    server {
      bind_address = "0.0.0.0"
      bind_port = "8081"
      socket_path = "/tmp/spire-server/private/api.sock"
      trust_domain = {{ .Values.auth.mTLS.spire.trustDomain | quote }}
      data_dir = "/run/spire/data"
      log_level = "INFO"
      ca_key_type = {{ .Values.auth.mTLS.spire.install.server.ca.keyType | quote }}

      ca_subject = {
        country = [{{ .Values.auth.mTLS.spire.install.server.ca.subject.country | quote }}],
        organization = [{{ .Values.auth.mTLS.spire.install.server.ca.subject.organization | quote }}],
        common_name = {{ .Values.auth.mTLS.spire.install.server.ca.subject.commonName | quote }},
      }

      admin_ids = [
        "spiffe://{{ .Values.auth.mTLS.spire.trustDomain }}/cilium-operator",
      ]
    }

    plugins {
      DataStore "sql" {
        plugin_data {
          database_type = "sqlite3"
          connection_string = "/run/spire/data/datastore.sqlite3"
        }
      }

      NodeAttestor "k8s_psat" {
        plugin_data {
          clusters = {
            {{ .Values.cluster.name | quote }} = {
              use_token_review_api_validation = true
              service_account_allow_list = ["{{ .Values.auth.mTLS.spire.install.namespace}}:{{ .Values.auth.mTLS.spire.install.agent.serviceAccount.name }}"]
            }
          }
        }
      }

      KeyManager "disk" {
        plugin_data {
          keys_path = "/run/spire/data/keys.json"
        }
      }

      Notifier "k8sbundle" {
        plugin_data {
          namespace = {{ .Values.auth.mTLS.spire.install.namespace | quote }}
        }
      }
    }

    health_checks {
      listener_enabled = true
      bind_address = "0.0.0.0"
      bind_port = "8080"
      live_path = "/live"
      ready_path = "/ready"
    }
{{- end }}
