{{- if (or .Values.externalWorkloads.enabled .Values.clustermesh.useAPIServer) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  labels:
    k8s-app: clustermesh-apiserver
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.clustermesh.apiserver.replicas }}
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
{{- with .Values.clustermesh.apiserver.updateStrategy }}
  strategy: {{- toYaml . | nindent 4 }}
{{- end }}
  template:
    metadata:
{{- with .Values.clustermesh.apiserver.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        k8s-app: clustermesh-apiserver
    spec:
{{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
{{- end }}
      restartPolicy: Always
      serviceAccount: clustermesh-apiserver
      initContainers:
      - name: etcd-init
        image: {{ .Values.clustermesh.apiserver.etcd.image.repository }}:{{ .Values.clustermesh.apiserver.etcd.image.tag }}
        imagePullPolicy: {{ .Values.clustermesh.apiserver.etcd.image.pullPolicy }}
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command: ["/bin/sh", "-c"]
        args:
        - >
          rm -rf /var/run/etcd/*;
          export ETCDCTL_API=3;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &
          export rootpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $rootpw | etcdctl --interactive=false user add root;
          etcdctl user grant-role root root;
          export vmpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $vmpw | etcdctl --interactive=false user add externalworkload;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          export remotepw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $remotepw | etcdctl --interactive=false user add remote;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      containers:
      - name: etcd
        image: {{ .Values.clustermesh.apiserver.etcd.image.repository }}:{{ .Values.clustermesh.apiserver.etcd.image.tag }}
        imagePullPolicy: {{ .Values.clustermesh.apiserver.etcd.image.pullPolicy }}
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command:
          - /usr/local/bin/etcd
        args:
          - --data-dir=/var/run/etcd
          - --name=clustermesh-apiserver
          - --client-cert-auth
          - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
          - --cert-file=/var/lib/etcd-secrets/tls.crt
          - --key-file=/var/lib/etcd-secrets/tls.key
          - --listen-client-urls=https://127.0.0.1:2379,https://$(HOSTNAME_IP):2379
          - --advertise-client-urls=https://$(HOSTNAME_IP):2379
          - --initial-cluster-token=clustermesh-apiserver
          - --auto-compaction-retention=1
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - name: "apiserver"
        image: {{ .Values.clustermesh.apiserver.image.repository }}:{{ .Values.clustermesh.apiserver.image.tag }}
        imagePullPolicy: {{ .Values.clustermesh.apiserver.image.pullPolicy }}
        command:
          - /usr/bin/clustermesh-apiserver
        args:
{{- if .Values.debug.enabled }}
          - --debug
{{- end }}
          - --cluster-name=$(CLUSTER_NAME)
          - --kvstore-opt
          - etcd.config=/var/lib/cilium/etcd-config.yaml
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              key: identity-allocation-mode
              name: cilium-config
{{- with .Values.clustermesh.apiserver.resources }}
        resources: {{- toYaml . | nindent 10 }}
{{- end }}
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 0420
          sources:
          - secret:
              name: clustermesh-apiserver-ca-cert
              items:
              - key: ca.crt
                path: ca.crt
          - secret:
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 0420
          sources:
          - secret:
              name: clustermesh-apiserver-ca-cert
              items:
              - key: ca.crt
                path: ca.crt
          - secret:
              name: clustermesh-apiserver-admin-cert
      - name: etcd-data-dir
        emptyDir: {}
{{- with .Values.clustermesh.apiserver.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.clustermesh.apiserver.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
{{- end }}
{{- end }}
