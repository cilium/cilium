#!/usr/bin/env bash
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.8.3"

$build_docker_image = <<SCRIPT
certs_dir="/home/vagrant/go/src/github.com/cilium/cilium/tests/k8s/multi-node/cluster/certs"
cd /home/vagrant/go/src/github.com/cilium/cilium/
make docker-image
docker run -d -p 5000:5000 --name registry -v ${certs_dir}:/certs \
        -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/kubernetes.pem \
        -e REGISTRY_HTTP_TLS_KEY=/certs/kubernetes-key.pem \
        registry:2
docker tag cilium:${DOCKER_IMAGE_TAG} localhost:5000/cilium:${DOCKER_IMAGE_TAG}
docker push localhost:5000/cilium:${DOCKER_IMAGE_TAG}
SCRIPT

$load_docker_image = <<SCRIPT
certs_dir="/home/vagrant/go/src/github.com/cilium/cilium/tests/k8s/multi-node/cluster/certs"
sudo mkdir -p /etc/docker/certs.d/192.168.36.11:5000
sudo cp ${certs_dir}/ca.pem /etc/docker/certs.d/192.168.36.11:5000/ca.crt
docker pull 192.168.36.11:5000/cilium:${DOCKER_IMAGE_TAG}
docker tag 192.168.36.11:5000/cilium:${DOCKER_IMAGE_TAG} cilium:${DOCKER_IMAGE_TAG}
SCRIPT

$k8s_install = <<SCRIPT
/home/vagrant/go/src/github.com/cilium/cilium/tests/k8s/multi-node/cluster/cluster-manager.bash fresh_install
SCRIPT

$cilium_master = <<SCRIPT
ip -6 a a FD01::B/16 dev enp0s8

echo 'FD01::B cilium-k8s-master' >> /etc/hosts

# node-2 cilium IPv4 route
ip r a 10.12.0.1/32 dev enp0s8
ip r a 10.12.0.0/16 via 10.12.0.1

# node-2 cilium IPv6 route
ip -6 r a F00D::C0A8:240C:0:0/96 via FD01::C
echo "FD01::C cilium-k8s-node-2" >> /etc/hosts

SCRIPT

$cilium_node_2 = <<SCRIPT
ip -6 a a FD01::C/16 dev enp0s8

echo 'FD01::C cilium-k8s-node-2' >> /etc/hosts

# master cilium IPv4 route
ip r a 10.11.0.1/32 dev enp0s8
ip r a 10.11.0.0/16 via 10.11.0.1

# master cilium IPv6 route
ip -6 r a F00D::C0A8:240B:0:0/96 via FD01::B
echo "FD01::B cilium-k8s-master" >> /etc/hosts

SCRIPT

$job_name = ENV['JOB_NAME'] || "local"
$build_number = ENV['BUILD_NUMBER'] || "0"
$build_id = "#{$job_name}-#{$build_number}"
$docker_image_tag=ENV['DOCKER_IMAGE_TAG'] || "local_build"

Vagrant.configure(2) do |config|
	config.vm.box = "bento/ubuntu-16.10"

	# http://foo-o-rama.com/vagrant--stdin-is-not-a-tty--fix.html
	config.vm.provision "fix-no-tty", type: "shell" do |s|
		s.privileged = false
		s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
	end

	config.vm.provision "k8s", type: "shell", inline: $k8s_install
	config.vm.provider "virtualbox" do |vb|
		# Do not inherit DNS server from host, use proxy
		vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

		config.vm.synced_folder '../../../', '/home/vagrant/go/src/github.com/cilium/cilium'
	end

	node_vm_name = "cilium-k8s-master"
	config.vm.define node_vm_name do |master|
		master.vm.network "private_network", ip: "192.168.36.11", virtualbox__intnet: "cilium-k8s-multi-test-#{$build_id}"
		master.vm.network "private_network", ip: "192.168.37.11", bridge: "enp0s9"
		master.vm.hostname = "cilium-k8s-master"
		master.vm.provision "cilium-master-netconfig", type: "shell", run: "always", inline: $cilium_master
		master.vm.provision "build", type: "shell", env: {"DOCKER_IMAGE_TAG" => $docker_image_tag}, inline: $build_docker_image
	end

	node_vm_name = "cilium-k8s-node-2"
	config.vm.define node_vm_name do |node|
		node.vm.network "private_network", ip: "192.168.36.12", virtualbox__intnet: "cilium-k8s-multi-test-#{$build_id}"
		node.vm.network "private_network", ip: "192.168.37.12", bridge: "enp0s9"
		node.vm.hostname = "cilium-k8s-node-2"
		node.vm.provision "cilium-node-2-netconfig", type: "shell", run: "always", inline: $cilium_node_2
		node.vm.provision "load-docker-image", type: "shell", env: {"DOCKER_IMAGE_TAG" => $docker_image_tag}, inline: $load_docker_image
	end

end
