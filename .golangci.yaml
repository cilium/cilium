# options for analysis running
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 20m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  modules-download-mode: readonly

# all available settings of specific linters
linters-settings:
  depguard:
    rules:
      main:
        deny:
          - pkg: "math/rand$"
            desc: "Use math/rand/v2 instead"
  exhaustruct:
    # Ensure that command-line flags are explicitly default-initialized.
    include:
      - '.+\.[Cc]onfig'
      - '.+[Cc]fg'
    exclude:
      - '.+cache\.Config' # k8s
      - '.+fqdn\.Config' # internal API
      - '.+tls\.Config' # Go TLS
      - '.+v3\.Config' # etcd
      - '.+translation\.Config' # internal gateway-api config
  govet:
    enable:
      - nilness
  goimports:
    local-prefixes: github.com/cilium/cilium/
  goheader:
    values:
      regexp:
        PROJECT: 'Cilium|Hubble'
    template: |-
      SPDX-License-Identifier: Apache-2.0
      Copyright Authors of {{ PROJECT }}
  gosec:
    includes:
      - G402
  gomodguard:
    blocked:
      modules:
        - github.com/miekg/dns:
            recommendations:
              - github.com/cilium/dns
            reason: "use the cilium fork directly to avoid replace directives in go.mod, see https://github.com/cilium/cilium/pull/27582"
        - gopkg.in/check.v1:
            recommendations:
              - testing
              - github.com/stretchr/testify/assert
            reason: "gocheck has been deprecated, see https://github.com/cilium/cilium/issues/28596"
        - github.com/cilium/checkmate:
            recommendations:
              - github.com/stretchr/testify/assert
              - github.com/stretchr/testify/require
            reason: "cilium/checkmate has been deprecated, see https://github.com/cilium/cilium/issues/28596"
        - go.uber.org/multierr:
            recommendations:
              - errors
            reason: "Go 1.20+ has support for combining multiple errors, see https://go.dev/doc/go1.20#errors"
        - golang.org/x/exp/maps:
            recommendations:
              - maps
              - slices
            reason: "Go 1.23+ has support for maps and slices, see https://go.dev/doc/go1.23#iterators"
        - golang.org/x/exp/constraints:
            recommendations:
              - cmp
            reason: "Go 1.21+ has support for Ordered constraint, see https://go.dev/doc/go1.21#cmp"
        - golang.org/x/exp/slices:
            recommendations:
              - slices
            reason: "Go 1.21+ provides many common operations for slices using generic functions, see https://go.dev/doc/go1.21#slices"
        - k8s.io/utils/pointer:
            recommendations:
              - k8s.io/utils/ptr
            reason: "k8s.io/utils/pointer is deprecated, see https://pkg.go.dev/k8s.io/utils/pointer"

  stylecheck:
    checks: ["ST1019"]

  sloglint:
    # Enforce not mixing key-value pairs and attributes.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-mixed-arguments
    # Default: true
    no-mixed-args: true
    # Enforce using key-value pairs only (overrides no-mixed-args, incompatible with attr-only).
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-value-pairs-only
    # Default: false
    kv-only: true
    # Enforce using attributes only (overrides no-mixed-args, incompatible with kv-only).
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#attributes-only
    # Default: false
    attr-only: false
    # Enforce not using global loggers.
    # Values:
    # - "": disabled
    # - "all": report all global loggers
    # - "default": report only the default slog logger
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-global
    # Default: ""
    no-global: "default"
    # Enforce using methods that accept a context.
    # Values:
    # - "": disabled
    # - "all": report all contextless calls
    # - "scope": report only if a context exists in the scope of the outermost function
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#context-only
    # Default: ""
    context: ""
    # Enforce using static values for log messages.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#static-messages
    # Default: false
    static-msg: false
    # Enforce using constants instead of raw keys.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-raw-keys
    # Default: false
    no-raw-keys: true
    # Enforce a single key naming convention.
    # Values: snake, kebab, camel, pascal
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-naming-convention
    # Default: ""
    key-naming-case: camel
    # Enforce not using specific keys.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#forbidden-keys
    # Default: []
    forbidden-keys:
      - time
      - level
      - msg
      - source
    # Enforce putting arguments on separate lines.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#arguments-on-separate-lines
    # Default: false
    args-on-sep-lines: true

  testifylint:
    enable-all: true
    disable:  # TODO: remove each disabled rule and fix it
      - float-compare
      - go-require
      - require-error

issues:
  exclude-dirs-use-default: true

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - linters: [staticcheck]
      text: "SA1019"                  # this is rule for deprecated method
    - linters: [staticcheck]
      text: "SA9003: empty branch"
    - linters: [staticcheck]
      text: "SA2001: empty critical section"
    - linters: [err113]
      text: "do not define dynamic errors, use wrapped static errors instead" # This rule to avoid opinionated check fmt.Errorf("text")
    # Skip goimports check on generated files
    - path: \\.(generated\\.deepcopy|pb)\\.go$
      linters:
        - goimports
    # Skip goheader check in the example files as these are included in the
    # documentation.
    - path: "contrib/examples/.+\\.go"
      linters:
        - goheader
    # Skip goheader check on files imported and modified from upstream k8s
    - path: "pkg/ipam/(cidrset|service)/.+\\.go"
      linters:
        - goheader
    - path: "pkg/hubble/dropeventemitter/fake_recorder.go"
      linters:
        - goheader

    - path: "tools/.*.go"
      linters:
        - sloglint

linters:
  disable-all: true
  enable:
    - depguard
    - errorlint
    - err113
    - exhaustruct
    - gofmt
    - goimports
    - govet
    - ineffassign
    - misspell
    - sloglint
    - staticcheck
    - stylecheck
    - testifylint
    - unused
    - goheader
    - gosec
    - gomodguard
    - gosimple

# To enable later if makes sense
#    - deadcode
#    - errcheck
#    - gocyclo
#    - golint
#    - gosec
#    - gosimple
#    - lll
#    - maligned
#    - misspell
#    - prealloc
#    - structcheck
#    - typecheck
